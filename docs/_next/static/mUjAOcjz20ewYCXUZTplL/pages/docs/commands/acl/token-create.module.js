(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{BrFH:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/commands/acl/token-create",function(){return t("WOAp")}])},WOAp:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return m}));var n=t("wx14"),c=t("Ff2n"),l=t("q1tI"),i=t.n(l),r=t("7ljp"),b=t("j1un"),s=(i.a.createElement,{}),p=Object(b.a)({layout:"docs",page_title:"Commands: acl token create",sidebar_title:"token create",description:"The token create command is used to create new ACL tokens.\n",__resourcePath:"docs/commands/acl/token-create.mdx",__scans:{}});function m(e){var{components:a}=e,t=Object(c.a)(e,["components"]);return Object(r.b)(p,Object(n.a)({},s,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h1",{className:"g-type-display-2"},Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#command-acl-token-create","aria-label":"command acl token create permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"command-acl-token-create","aria-hidden":""})),"Command: acl token create"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"acl token create")," command is used to create new ACL tokens."),Object(r.b)("h2",{className:"g-type-display-3"},Object(r.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#usage","aria-label":"usage permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"usage","aria-hidden":""})),"Usage"),Object(r.b)("pre",{className:"language-plaintext"},Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-plaintext"}),"nomad acl token create [options]\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"acl token create")," command requires no arguments."),Object(r.b)("h2",{className:"g-type-display-3"},Object(r.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#general-options","aria-label":"general options permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"general-options","aria-hidden":""})),"General Options"),Object(r.b)("ul",null,Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"address",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#address","aria-label":"address permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-address=<addr>")),": The address of the Nomad server. Overrides the ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_ADDR"),"\nenvironment variable if set. Defaults to ",Object(r.b)("inlineCode",{parentName:"p"},"http://127.0.0.1:4646"),".")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"region",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#region","aria-label":"region permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-region=<region>")),": The region of the Nomad server to forward commands to.\nOverrides the ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_REGION")," environment variable if set. Defaults to the\nAgent's local region.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"namespace",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#namespace","aria-label":"namespace permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-namespace=<namespace>")),": The target namespace for queries and actions bound\nto a namespace. Overrides the NOMAD_NAMESPACE environment variable if set.\nIf set to '*', job and alloc subcommands query all namespacecs authorized to\nuser. Defaults to the \"default\" namespace.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"no-color",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#no-color","aria-label":"no color permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-no-color")),": Disables colored command output. Alternatively,\n",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_CLI_NO_COLOR")," may be set.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"ca-cert",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-cert","aria-label":"ca cert permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-ca-cert=<path>")),": Path to a PEM encoded CA cert file to use to verify the\nNomad server SSL certificate. Overrides the ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_CACERT")," environment\nvariable if set.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"ca-path",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-path","aria-label":"ca path permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-ca-path=<path>")),": Path to a directory of PEM encoded CA cert files to verify\nthe Nomad server SSL certificate. If both ",Object(r.b)("inlineCode",{parentName:"p"},"-ca-cert")," and ",Object(r.b)("inlineCode",{parentName:"p"},"-ca-path")," are\nspecified, ",Object(r.b)("inlineCode",{parentName:"p"},"-ca-cert")," is used. Overrides the ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_CAPATH")," environment\nvariable if set.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"client-cert",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#client-cert","aria-label":"client cert permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-client-cert=<path>")),": Path to a PEM encoded client certificate for TLS\nauthentication to the Nomad server. Must also specify ",Object(r.b)("inlineCode",{parentName:"p"},"-client-key"),". Overrides\nthe ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_CERT")," environment variable if set.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"client-key",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#client-key","aria-label":"client key permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-client-key=<path>")),": Path to an unencrypted PEM encoded private key matching\nthe client certificate from ",Object(r.b)("inlineCode",{parentName:"p"},"-client-cert"),". Overrides the ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_KEY"),"\nenvironment variable if set.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"tls-server-name",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-server-name","aria-label":"tls server name permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-tls-server-name=<value>")),": The server name to use as the SNI host when connecting\nvia TLS. Overrides the ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_TLS_SERVER_NAME")," environment variable if set.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"tls-skip-verify",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-skip-verify","aria-label":"tls skip verify permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-tls-skip-verify")),": Do not verify TLS certificate. This is highly not\nrecommended. Verification will also be skipped if ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_SKIP_VERIFY")," is set.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"token",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#token","aria-label":"token permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-token")),": The SecretID of an ACL token to use to authenticate API requests with.\nOverrides the ",Object(r.b)("inlineCode",{parentName:"p"},"NOMAD_TOKEN")," environment variable if set."))),Object(r.b)("h2",{className:"g-type-display-3"},Object(r.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#create-options","aria-label":"create options permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"create-options","aria-hidden":""})),"Create Options"),Object(r.b)("ul",null,Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"name",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#name","aria-label":"name permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-name")),": Sets the human readable name for the ACL token.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"type",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#type","aria-label":"type permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-type")),': Sets the type of token. Must be one of "client" (default), or\n"management".')),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"global",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#global","aria-label":"global permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-global")),": Toggles the global mode of the token. Global tokens are replicated\nto all regions. Defaults false.")),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"policy",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#policy","aria-label":"policy permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"-policy")),": Specifies a policy to associate with the token. Can be specified\nmultiple times, but only with client type tokens."))),Object(r.b)("h2",{className:"g-type-display-3"},Object(r.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#examples","aria-label":"examples permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"examples","aria-hidden":""})),"Examples"),Object(r.b)("p",null,"Create a new ACL token:"),Object(r.b)("pre",{className:"language-shell-session"},Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(r.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad acl token create -name",Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"token operator"}),"="),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"my token"')," -policy",Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"token operator"}),"="),"foo -policy",Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"token operator"}),"="),"bar")),"\n",Object(r.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"Accessor ID  = d532c40a-30f1-695c-19e5-c35b882b0efd\nSecret ID    = 85310d07-9afa-ef53-0933-0c043cd673c7\nName         = my token\nType         = client\nGlobal       = false\nPolicies     = [foo bar]\nCreate Time  = 2017-09-15 05:04:41.814954949 +0000 UTC\nCreate Index = 8\nModify Index = 8\n"))))}m.isMDXComponent=!0}},[["BrFH",0,1,2,4,3,5,6]]]);