(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{g5Lb:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/job-specification/check_restart",function(){return t("gr/P")}])},"gr/P":function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return j}));var n,c=t("wx14"),s=t("Ff2n"),b=t("q1tI"),r=t.n(b),p=t("7ljp"),o=t("j1un"),m=(r.a.createElement,n="Placement",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(p.b)("div",e)}),i={},l=Object(o.a)({layout:"docs",page_title:"check_restart Stanza - Job Specification",sidebar_title:"check_restart",description:'The "check_restart" stanza instructs Nomad when to restart tasks with\nunhealthy service checks.',__resourcePath:"docs/job-specification/check_restart.mdx",__scans:{}});function j(e){var a=e.components,t=Object(s.a)(e,["components"]);return Object(p.b)(l,Object(c.a)({},i,t,{components:a,mdxType:"MDXLayout"}),Object(p.b)("h1",{className:"g-type-display-2"},Object(p.b)("a",Object(c.a)({parentName:"h1"},{className:"__permalink-h",href:"#check_restart-stanza","aria-label":"check_restart stanza permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h1"},{className:"__target-h",id:"check_restart-stanza","aria-hidden":""})),Object(p.b)("inlineCode",{parentName:"h1"},"check_restart")," Stanza"),Object(p.b)(m,{groups:[["job","group","task","service","check_restart"],["job","group","task","service","check","check_restart"]],mdxType:"Placement"}),Object(p.b)("p",null,"As of Nomad 0.7 the ",Object(p.b)("inlineCode",{parentName:"p"},"check_restart")," stanza instructs Nomad when to restart\ntasks with unhealthy service checks. When a health check in Consul has been\nunhealthy for the ",Object(p.b)("inlineCode",{parentName:"p"},"limit")," specified in a ",Object(p.b)("inlineCode",{parentName:"p"},"check_restart")," stanza, it is\nrestarted according to the task group's ",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/restart",title:"restart stanza"}),Object(p.b)("inlineCode",{parentName:"a"},"restart")," policy"),". The\n",Object(p.b)("inlineCode",{parentName:"p"},"check_restart")," settings apply to ",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/service#check-parameters",title:"check stanza"}),Object(p.b)("inlineCode",{parentName:"a"},"check"),"s"),", but may also be\nplaced on ",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/service",title:"service stanza"}),Object(p.b)("inlineCode",{parentName:"a"},"service"),"s")," to apply to all checks on a service.\nIf ",Object(p.b)("inlineCode",{parentName:"p"},"check_restart")," is set on both the check and service, the stanzas are\nmerged with the check values taking precedence."),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"job ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"mysql"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  group ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"mysqld"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"restart")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attempts")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"3"),"\n      ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"delay"),"    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"10s"'),"\n      ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"interval")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"10m"'),"\n      ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"mode"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"fail"'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    task ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"server"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"service")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"tags")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"leader"'),", ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"mysql"'),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n\n        ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"port")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"db"'),"\n\n        ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"check")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"type"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"tcp"'),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"port"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"db"'),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"interval")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"10s"'),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"timeout"),"  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"2s"'),"\n        ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n        ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"check")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"type"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"script"'),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"name"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"check_table"'),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"command"),"  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"/usr/local/bin/check_mysql_table_status"'),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"args"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"--verbose"'),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"interval")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"60s"'),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"timeout"),"  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"5s"'),"\n\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"check_restart")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"limit")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"3"),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"grace")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"90s"'),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"ignore_warnings")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"false"),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n        ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n      ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("ul",null,Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"limit",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#limit","aria-label":"limit permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"limit"))," ",Object(p.b)("inlineCode",{parentName:"p"},"(int: 0)")," - Restart task when a health check has failed ",Object(p.b)("inlineCode",{parentName:"p"},"limit"),"\ntimes. For example 1 causes a restart on the first failure. The default,\n",Object(p.b)("inlineCode",{parentName:"p"},"0"),", disables health check based restarts. Failures must be consecutive. A\nsingle passing check will reset the count, so flapping services may not be\nrestarted.")),Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"grace",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#grace","aria-label":"grace permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"grace"))," ",Object(p.b)("inlineCode",{parentName:"p"},'(string: "1s")')," - Duration to wait after a task starts or restarts\nbefore checking its health.")),Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"ignore_warnings",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#ignore_warnings","aria-label":"ignore_warnings permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"ignore_warnings"))," ",Object(p.b)("inlineCode",{parentName:"p"},"(bool: false)")," - By default checks with both ",Object(p.b)("inlineCode",{parentName:"p"},"critical"),"\nand ",Object(p.b)("inlineCode",{parentName:"p"},"warning")," statuses are considered unhealthy. Setting ",Object(p.b)("inlineCode",{parentName:"p"},"ignore_warnings = true")," treats a ",Object(p.b)("inlineCode",{parentName:"p"},"warning")," status like ",Object(p.b)("inlineCode",{parentName:"p"},"passing")," and will not trigger a restart."))),Object(p.b)("h2",{className:"g-type-display-3"},Object(p.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#example-behavior","aria-label":"example behavior permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"example-behavior","aria-hidden":""})),"Example Behavior"),Object(p.b)("p",null,"Using the example ",Object(p.b)("inlineCode",{parentName:"p"},"mysql")," above would have the following behavior:"),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"check_restart")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"# ..."),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"grace")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"90s"'),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"# ..."),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("p",null,"When the ",Object(p.b)("inlineCode",{parentName:"p"},"server")," task first starts and is registered in Consul, its health\nwill not be checked for 90 seconds. This gives the server time to startup."),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"check_restart")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"limit")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"3"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"# ..."),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("p",null,"After the grace period if the script check fails, it has 180 seconds (",Object(p.b)("inlineCode",{parentName:"p"},"60s interval * 3 limit"),") to pass before a restart is triggered. Once a restart is\ntriggered the task group's ",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/restart",title:"restart stanza"}),Object(p.b)("inlineCode",{parentName:"a"},"restart")," policy")," takes control:"),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"restart")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"# ..."),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"delay"),"    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"10s"'),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"# ..."),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("p",null,"The ",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/restart",title:"restart stanza"}),Object(p.b)("inlineCode",{parentName:"a"},"restart")," stanza")," controls the restart behavior of the\ntask. In this case it will stop the task and then wait 10 seconds before\nstarting it again."),Object(p.b)("p",null,"Once the task restarts Nomad waits the ",Object(p.b)("inlineCode",{parentName:"p"},"grace")," period again before starting to\ncheck the task's health."),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"restart")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attempts")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"3"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"# ..."),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"interval")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"10m"'),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"mode"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"fail"'),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("p",null,"If the check continues to fail, the task will be restarted up to ",Object(p.b)("inlineCode",{parentName:"p"},"attempts"),"\ntimes within an ",Object(p.b)("inlineCode",{parentName:"p"},"interval"),". If the ",Object(p.b)("inlineCode",{parentName:"p"},"restart")," attempts are reached within the\n",Object(p.b)("inlineCode",{parentName:"p"},"limit")," then the ",Object(p.b)("inlineCode",{parentName:"p"},"mode")," controls the behavior. In this case the task would fail\nand not be restarted again. See the ",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/restart",title:"restart stanza"}),Object(p.b)("inlineCode",{parentName:"a"},"restart")," stanza")," for\ndetails."))}j.isMDXComponent=!0}},[["g5Lb",0,1,2,4,3,5,6]]]);