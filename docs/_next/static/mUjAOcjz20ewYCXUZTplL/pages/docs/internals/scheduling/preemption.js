(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{g5Wb:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/internals/scheduling/preemption",function(){return t("z3xM")}])},z3xM:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return s}));var n=t("wx14"),i=t("Ff2n"),l=t("q1tI"),o=t.n(l),r=t("7ljp"),c=t("j1un"),b=(o.a.createElement,{}),p=Object(c.a)({layout:"docs",page_title:"Preemption",sidebar_title:"Preemption",description:"Learn about how preemption works in Nomad.",__resourcePath:"docs/internals/scheduling/preemption.mdx",__scans:{}});function s(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)(p,Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h1",{className:"g-type-display-2"},Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#preemption","aria-label":"preemption permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"preemption","aria-hidden":""})),"Preemption"),Object(r.b)("p",null,"Preemption allows Nomad to kill existing allocations in order to place allocations for a higher priority job.\nThe evicted allocation is temporarily displaced until the cluster has capacity to run it. This allows operators to\nrun high priority jobs even under resource contention across the cluster."),Object(r.b)("div",{className:"alert alert-warning g-type-body",role:"alert"},Object(r.b)("p",{parentName:"div"},"",Object(r.b)("strong",{parentName:"p"},"Advanced Topic!")," This page covers technical details of Nomad. You do not need to understand these details to effectively use Nomad. The details are documented here for those who wish to learn about them without having to go spelunking through the source code.")),Object(r.b)("h1",{className:"g-type-display-2"},Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#preemption-in-nomad","aria-label":"preemption in nomad permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"preemption-in-nomad","aria-hidden":""})),"Preemption in Nomad"),Object(r.b)("p",null,"Every job in Nomad has a priority associated with it. Priorities impact scheduling at the evaluation and planning\nstages by sorting the respective queues accordingly (higher priority jobs get moved ahead in the queues)."),Object(r.b)("p",null,"Prior to Nomad 0.9, when a cluster is at capacity, any allocations that result from a newly scheduled or updated\njob remain in the pending state until sufficient resources become available - regardless of the defined priority.\nThis leads to priority inversion, where a low priority task can prevent high priority tasks from completing."),Object(r.b)("p",null,"Nomad has preemption capabilities for service, batch, and system jobs. The Nomad scheduler can be configured to evict lower priority running allocations\nto free up capacity for new allocations resulting from relatively higher priority jobs, sending evicted allocations back\ninto the plan queue."),Object(r.b)("h1",{className:"g-type-display-2"},Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#details","aria-label":"details permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"details","aria-hidden":""})),"Details"),Object(r.b)("p",null,"Preemption is enabled by default in Nomad 0.9 for system jobs. Operators can use the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/api-docs/operator#update-scheduler-configuration"}),"scheduler config")," API endpoint to disable preemption."),Object(r.b)("p",null,"Nomad uses the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/job-specification/job#priority"}),"job priority")," field to determine what running allocations can be preempted.\nIn order to prevent a cascade of preemptions due to jobs close in priority being preempted, only allocations from jobs with a priority\ndelta of more than 10 from the job needing placement are eligible for preemption."),Object(r.b)("p",null,"For example, consider a node with the following distribution of allocations:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Job"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Priority"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Allocations"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Total Used capacity"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cache"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"70"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"a6"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2 GB Memory, 0.5 GB Disk, 1 CPU")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"batch-analytics"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"50"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"a4, a5"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"<1 GB Memory, 0.5 GB Disk, 0.5 CPU>, <1 GB Memory, 0.5 GB Disk, 0.5 CPU>")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"email-marketing"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"20"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"a1, a2"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"<0.5 GB Memory, 0.8 GB Disk>, <0.5 GB Memory, 0.2 GB Disk>")))),Object(r.b)("p",null,"If a job ",Object(r.b)("inlineCode",{parentName:"p"},"webapp")," with priority ",Object(r.b)("inlineCode",{parentName:"p"},"75")," needs placement on the above node, only allocations from ",Object(r.b)("inlineCode",{parentName:"p"},"batch-analytics")," and ",Object(r.b)("inlineCode",{parentName:"p"},"email-marketing")," are considered\neligible to be preempted because they are of a lower priority. Allocations from the ",Object(r.b)("inlineCode",{parentName:"p"},"cache")," job will never be preempted because its priority value ",Object(r.b)("inlineCode",{parentName:"p"},"70"),"\nis lesser than the required delta of ",Object(r.b)("inlineCode",{parentName:"p"},"10"),"."),Object(r.b)("p",null,"Allocations are selected starting from the lowest priority, and scored according\nto how closely they fit the job's required capacity. For example, if the ",Object(r.b)("inlineCode",{parentName:"p"},"75")," priority job needs 1GB disk and 2GB memory, Nomad will preempt\nallocations ",Object(r.b)("inlineCode",{parentName:"p"},"a1"),", ",Object(r.b)("inlineCode",{parentName:"p"},"a2")," and ",Object(r.b)("inlineCode",{parentName:"p"},"a4")," to satisfy those requirements."),Object(r.b)("h1",{className:"g-type-display-2"},Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#preemption-visibility","aria-label":"preemption visibility permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"preemption-visibility","aria-hidden":""})),"Preemption Visibility"),Object(r.b)("p",null,"Operators can use the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/api-docs/allocations#read-allocation"}),"allocation API")," or the ",Object(r.b)("inlineCode",{parentName:"p"},"alloc status")," command to get visibility into\nwhether an allocation has been preempted. Preempted allocations will have their DesiredStatus set to \u201cevict\u201d. The ",Object(r.b)("inlineCode",{parentName:"p"},"Allocation")," object\nin the API also has two additional fields related to preemption."),Object(r.b)("ul",null,Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"preemptedallocs",className:"__target-lic","aria-hidden":""})),Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#preemptedallocs","aria-label":"preemptedallocs permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"PreemptedAllocs"))," - This field is set on an allocation that caused preemption. It contains the allocation ids of allocations\nthat were preempted to place this allocation. In the above example, allocations created for the job ",Object(r.b)("inlineCode",{parentName:"li"},"webapp")," will have the values\n",Object(r.b)("inlineCode",{parentName:"li"},"a1"),", ",Object(r.b)("inlineCode",{parentName:"li"},"a2")," and ",Object(r.b)("inlineCode",{parentName:"li"},"a4")," set."),Object(r.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(n.a)({parentName:"li"},{id:"preemptedbyallocid",className:"__target-lic","aria-hidden":""})),Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#preemptedbyallocid","aria-label":"preemptedbyallocid permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"PreemptedByAllocID"))," - This field is set on allocations that were preempted by the scheduler. It contains the allocation ID of the allocation\nthat preempted it. In the above example, allocations ",Object(r.b)("inlineCode",{parentName:"li"},"a1"),", ",Object(r.b)("inlineCode",{parentName:"li"},"a2")," and ",Object(r.b)("inlineCode",{parentName:"li"},"a4")," will have this field set to the ID of the allocation from the job ",Object(r.b)("inlineCode",{parentName:"li"},"webapp"),".")),Object(r.b)("h1",{className:"g-type-display-2"},Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#integration-with-nomad-plan","aria-label":"integration with nomad plan permalink"}),"\xbb"),Object(r.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"integration-with-nomad-plan","aria-hidden":""})),"Integration with Nomad plan"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"nomad plan")," allows operators to dry run the scheduler. If the scheduler determines that\npreemption is necessary to place the job, it shows additional information in the CLI output for\n",Object(r.b)("inlineCode",{parentName:"p"},"nomad plan")," as seen below."),Object(r.b)("pre",{className:"language-shell-session"},Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(r.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad plan example.nomad")),"\n\n",Object(r.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),'+ Job: "test"\n+ Task Group: "test" (1 create)\n  + Task: "test" (forces create)\n\nScheduler dry-run:\n- All tasks successfully allocated.\n\nPreemptions:\n\nAlloc ID                              Job ID    Task Group\nddef9521                              my-batch   analytics\nae59fe45                              my-batch   analytics\n'))),Object(r.b)("p",null,"Note that, the allocations shown in the ",Object(r.b)("inlineCode",{parentName:"p"},"nomad plan")," output above\nare not guaranteed to be the same ones picked when running the job later.\nThey provide the operator a sample of the type of allocations that could be preempted."))}s.isMDXComponent=!0}},[["g5Wb",0,1,2,4,3,5,6]]]);