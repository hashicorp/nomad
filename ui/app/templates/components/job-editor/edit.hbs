{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
~}}

<div class="boxed-section">
  <Hds::CodeEditor
    data-test-editor
    @value={{@data.job._newDefinition}}
    @onInput={{@fns.onUpdate}}
    @language={{if (eq @data.format "json") "javascript" "ruby"}}
    @hasLineWrapping={{@data.shouldWrap}}
    @onSetup={{fn (mut this.jobDefinitionEditor)}}
    as |CE|
  >
    <CE.Title>Job Definition</CE.Title>

    {{#if @data.cancelable}}
      <CE.Generic class="job-definition-editor-header">
        <span class="header-toggle">
          <Hds::Form::Toggle::Field
            {{keyboard-shortcut
              label="Toggle word wrap"
              action=(action @fns.onToggleWrap)
              pattern=(array "w" "w")
              menuLevel=true
            }}
            checked={{@data.shouldWrap}}
            {{on "change" @fns.onToggleWrap}}
            as |F|
          >
            <F.Label>Word Wrap</F.Label>
          </Hds::Form::Toggle::Field>
        </span>
        
        <Tooltip
          @condition={{unless @data.hasSpecification true false}}
          @isFullText={{true}}
          @text="A jobspec file was not submitted when this job was run. You can still view and edit the expanded JSON format."
        >
          <div
            class="job-definition-select {{unless @data.hasSpecification ' disabled'}}"
            data-test-select={{@data.view}}
          >
            <Hds::Button
              class={{if (eq @data.view 'job-spec') 'is-active'}}
              @size="small"
              @text="Job Spec"
              {{on "click" (fn @fns.onSelect "job-spec")}}
            />
            <Hds::Button
              data-test-select-full
              class={{if (eq @data.view 'full-definition') 'is-active'}}
              @size="small"
              @text="Full Definition"
              {{on "click" (fn @fns.onSelect "full-definition")}}
            />
          </div>
        </Tooltip>
        <Hds::Button
          data-test-cancel-editing
          @size="small"
          @text="Cancel"
          {{on "click" @fns.onCancel}} 
        />
      </CE.Generic>
    {{/if}}
  </Hds::CodeEditor>
  
  {{#if (or (eq @data.view "job-spec") @data.job.isNew)}}
    <Hds::CodeEditor
      style="margin-top: 10px"
      @language="ruby"
      @value={{@data.job._newDefinitionVariables}}
      @hasLineWrapping={{@data.shouldWrap}}
      @onInput={{this.updateHclVariables}}
      @onSetup={{fn (mut this.updateHclVariablesEditor)}}
      as |CE|
    >
      <CE.Title>
        {{if @data.job.isNew "HCL Variable Values" "Edit HCL Variable Values"}}
      </CE.Title>
    </Hds::CodeEditor>
  {{/if}}
</div>
<Hds::ButtonSet class="is-associative buttonset sticky pull-left">
  <Hds::Button
    {{on "click" (perform @fns.onPlan)}}
    disabled={{or @fns.onPlan.isRunning (not @data.job._newDefinition)}}
    data-test-plan
    @text="Plan"
  />
  {{#if (can "write variable" path="nomad/job-templates/*" namespace="*")}}
    {{#if @data.job.isNew}}
      <Hds::Button
        @text="Save as template"
        @color="secondary"
        @route="jobs.run.templates.new"
        {{on "click" @fns.onSaveAs}}
        data-test-save-as-template
      />
    {{/if}}
  {{/if}}
  <Hds::Button
    @text="Save as .nomad.hcl"
    @color="secondary"
    {{on "click" @fns.onSaveFile}}
    disabled={{not @data.job._newDefinition}}
  />
</Hds::ButtonSet>
