(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{"e/qf":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/commands/alloc/status",function(){return t("vBn3")}])},vBn3:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return m}));var n=t("wx14"),s=t("Ff2n"),i=t("q1tI"),l=t.n(i),c=t("7ljp"),r=t("j1un"),b=(l.a.createElement,{}),o=Object(r.a)({layout:"docs",page_title:"Commands: alloc status",sidebar_title:"status",description:"Display status and metadata about existing allocations and their tasks.\n",__resourcePath:"docs/commands/alloc/status.mdx",__scans:{}});function m(e){var a=e.components,t=Object(s.a)(e,["components"]);return Object(c.b)(o,Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(c.b)("h1",{className:"g-type-display-2"},Object(c.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#command-alloc-status","aria-label":"command alloc status permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"command-alloc-status","aria-hidden":""})),"Command: alloc status"),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"alloc status")," command displays status information and metadata\nabout an existing allocation and its tasks. It can be useful while\ndebugging to reveal the underlying reasons for scheduling decisions or\nfailures, as well as the current state of its tasks. As of Nomad\n0.7.1, alloc status also shows allocation modification time in\naddition to create time. As of Nomad 0.8, alloc status shows\ninformation about reschedule attempts. As of Nomad 0.11, alloc status\nshows volume claims when a job claims volumes."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#usage","aria-label":"usage permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"usage","aria-hidden":""})),"Usage"),Object(c.b)("pre",{className:"language-plaintext"},Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-plaintext"}),"nomad alloc status [options] <allocation>\n")),Object(c.b)("p",null,"An allocation ID or prefix must be provided. If there is an exact match, the\nfull details of the allocation will be displayed. Otherwise, a list of matching\nallocations and information will be displayed."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#general-options","aria-label":"general options permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"general-options","aria-hidden":""})),"General Options"),Object(c.b)("ul",null,Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"address",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#address","aria-label":"address permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-address=<addr>")),": The address of the Nomad server. Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_ADDR"),"\nenvironment variable if set. Defaults to ",Object(c.b)("inlineCode",{parentName:"p"},"http://127.0.0.1:4646"),".")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"region",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#region","aria-label":"region permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-region=<region>")),": The region of the Nomad server to forward commands to.\nOverrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_REGION")," environment variable if set. Defaults to the\nAgent's local region.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"namespace",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#namespace","aria-label":"namespace permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-namespace=<namespace>")),": The target namespace for queries and actions bound\nto a namespace. Overrides the NOMAD_NAMESPACE environment variable if set.\nIf set to '*', job and alloc subcommands query all namespacecs authorized to\nuser. Defaults to the \"default\" namespace.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"no-color",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#no-color","aria-label":"no color permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-no-color")),": Disables colored command output. Alternatively,\n",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CLI_NO_COLOR")," may be set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"ca-cert",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-cert","aria-label":"ca cert permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-ca-cert=<path>")),": Path to a PEM encoded CA cert file to use to verify the\nNomad server SSL certificate. Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CACERT")," environment\nvariable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"ca-path",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-path","aria-label":"ca path permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-ca-path=<path>")),": Path to a directory of PEM encoded CA cert files to verify\nthe Nomad server SSL certificate. If both ",Object(c.b)("inlineCode",{parentName:"p"},"-ca-cert")," and ",Object(c.b)("inlineCode",{parentName:"p"},"-ca-path")," are\nspecified, ",Object(c.b)("inlineCode",{parentName:"p"},"-ca-cert")," is used. Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CAPATH")," environment\nvariable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"client-cert",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#client-cert","aria-label":"client cert permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-client-cert=<path>")),": Path to a PEM encoded client certificate for TLS\nauthentication to the Nomad server. Must also specify ",Object(c.b)("inlineCode",{parentName:"p"},"-client-key"),". Overrides\nthe ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_CERT")," environment variable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"client-key",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#client-key","aria-label":"client key permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-client-key=<path>")),": Path to an unencrypted PEM encoded private key matching\nthe client certificate from ",Object(c.b)("inlineCode",{parentName:"p"},"-client-cert"),". Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_KEY"),"\nenvironment variable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"tls-server-name",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-server-name","aria-label":"tls server name permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-tls-server-name=<value>")),": The server name to use as the SNI host when connecting\nvia TLS. Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_TLS_SERVER_NAME")," environment variable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"tls-skip-verify",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-skip-verify","aria-label":"tls skip verify permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-tls-skip-verify")),": Do not verify TLS certificate. This is highly not\nrecommended. Verification will also be skipped if ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_SKIP_VERIFY")," is set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"token",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#token","aria-label":"token permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-token")),": The SecretID of an ACL token to use to authenticate API requests with.\nOverrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_TOKEN")," environment variable if set."))),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#alloc-status-options","aria-label":"alloc status options permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"alloc-status-options","aria-hidden":""})),"Alloc Status Options"),Object(c.b)("ul",null,Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"short",className:"__target-lic","aria-hidden":""})),Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"#short","aria-label":"short permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-short")),": Display short output. Shows only the most recent task event."),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"verbose",className:"__target-lic","aria-hidden":""})),Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"#verbose","aria-label":"verbose permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-verbose")),": Show full information."),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"json",className:"__target-lic","aria-hidden":""})),Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"#json","aria-label":"json permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-json"))," : Output the allocation in its JSON format."),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"t",className:"__target-lic","aria-hidden":""})),Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"#t","aria-label":"t permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-t"))," : Format and display the allocation using a Go template.")),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#examples","aria-label":"examples permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"examples","aria-hidden":""})),"Examples"),Object(c.b)("p",null,"Short status of an alloc:"),Object(c.b)("pre",{className:"language-shell-session"},Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(c.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad alloc status --short 0af996ed")),"\n",Object(c.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"ID                  = 0af996ed\nEval ID             = be9bde98\nName                = example.cache[0]\nNode ID             = 43c0b14e\nJob ID              = example\nJob Version         = 0\nClient Status       = running\nClient Description  = <none>\nDesired Status      = run\nDesired Description = <none>\nCreated At          = 07/25/17 16:12:48 UTC\nDeployment ID       = 0c83a3b1\nDeployment Health   = healthy\n\nTasks\nName   State    Last Event  Time\nredis  running  Started     07/25/17 16:12:48 UTC\nweb    running  Started     07/25/17 16:12:49 UTC\n"))),Object(c.b)("p",null,"Full status of an alloc, which shows one of the tasks dying and then being restarted:"),Object(c.b)("pre",{className:"language-shell-session"},Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(c.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad alloc status 0af996ed")),"\n",Object(c.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),'ID                   = 0af996ed\nEval ID              = be9bde98\nName                 = example.cache[0]\nNode ID              = 43c0b14e\nJob ID               = example\nJob Version          = 0\nClient Status        = running\nClient Description   = <none>\nDesired Status       = run\nDesired Description  = <none>\nCreated              = 5m ago\nModified             = 5m ago\nDeployment ID        = 0c83a3b1\nDeployment Health    = healthy\nReplacement Alloc ID = 0bc894ca\nReschedule Attempts  = 1/3\n\nTask "redis" is "running"\nTask Resources\nCPU        Memory           Disk     Addresses\n1/500 MHz  6.3 MiB/256 MiB  300 MiB  db: 127.0.0.1:27908\n\nCSI Volumes:\nID            Plugin  Provider  Schedulable  Mount Options\nvol-4150af42  ebs0    aws.ebs   true         <none>\n\nTask Events:\nStarted At     = 07/25/17 16:12:48 UTC\nFinished At    = N/A\nTotal Restarts = 0\nLast Restart   = N/A\n\nRecent Events:\nTime                   Type        Description\n07/25/17 16:12:48 UTC  Started     Task started by client\n07/25/17 16:12:48 UTC  Task Setup  Building Task Directory\n07/25/17 16:12:48 UTC  Received    Task received by client\n\nTask "web" is "running"\nTask Resources\nCPU        Memory           Disk     Addresses\n1/500 MHz  6.3 MiB/256 MiB  300 MiB  db: 127.0.0.1:30572\n\nTask Events:\nStarted At     = 07/25/17 16:12:49 UTC\nFinished At    = N/A\nTotal Restarts = 0\nLast Restart   = N/A\n\nRecent Events:\n07/25/17 16:12:49 UTC  Started     Task started by client\n07/25/17 16:12:48 UTC  Task Setup  Building Task Directory\n07/25/17 16:12:48 UTC  Received    Task received by client\n'))),Object(c.b)("p",null,"Verbose status can also be accessed:"),Object(c.b)("pre",{className:"language-shell-session"},Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(c.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad alloc status -verbose 0af996ed")),"\n",Object(c.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),'ID                     = 0af996ed-aff4-8ddb-a566-e55ebf8969c9\nEval ID                = be9bde98-0490-1beb-ced0-012d10ddf22e\nName                   = example.cache[0]\nNode ID                = 43c0b14e-7f96-e432-a7da-06605257ce0c\nJob ID                 = example\nJob Version            = 0\nClient Status          = running\nClient Description     = <none>\nDesired Status         = run\nDesired Description    = <none>\nCreated                = 07/25/17 16:12:48 UTC\nModified               = 07/25/17 16:12:48 UTC\nDeployment ID          = 0c83a3b1-8a7b-136b-0e11-8383dc6c9276\nDeployment Health      = healthy\nReschedule Eligibility = 2m from now\nEvaluated Nodes        = 1\nFiltered Nodes         = 0\nExhausted Nodes        = 0\nAllocation Time        = 38.474\xb5s\nFailures               = 0\n\nTask "redis" is "running"\nTask Resources\nCPU        Memory           Disk     Addresses\n1/500 MHz  6.3 MiB/256 MiB  300 MiB  db: 127.0.0.1:27908\n\nTask Events:\nStarted At     = 07/25/17 16:12:48 UTC\nFinished At    = N/A\nTotal Restarts = 0\nLast Restart   = N/A\n\nRecent Events:\nTime                   Type        Description\n07/25/17 16:12:48 UTC  Started     Task started by client\n07/25/17 16:12:48 UTC  Task Setup  Building Task Directory\n07/25/17 16:12:48 UTC  Received    Task received by client\n\nTask "web" is "running"\nTask Resources\nCPU        Memory           Disk     Addresses\n1/500 MHz  6.3 MiB/256 MiB  300 MiB  db: 127.0.0.1:30572\n\nTask Events:\nStarted At     = 07/25/17 16:12:49 UTC\nFinished At    = N/A\nTotal Restarts = 0\nLast Restart   = N/A\n\nRecent Events:\nTime                   Type        Description\n07/25/17 16:12:49 UTC  Started     Task started by client\n07/25/17 16:12:48 UTC  Task Setup  Building Task Directory\n07/25/17 16:12:48 UTC  Received    Task received by client\n'))))}m.isMDXComponent=!0}},[["e/qf",0,1,2,4,3,5,6]]]);