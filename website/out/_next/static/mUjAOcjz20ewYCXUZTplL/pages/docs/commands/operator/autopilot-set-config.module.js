(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{nfUv:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return p}));var n=t("wx14"),i=t("Ff2n"),r=t("q1tI"),l=t.n(r),c=t("7ljp"),b=t("j1un"),o=(l.a.createElement,{}),s=Object(b.a)({layout:"docs",page_title:"Commands: operator autopilot set-config",sidebar_title:"autopilot set-config",description:"Modify the current Autopilot configuration.\n",__resourcePath:"docs/commands/operator/autopilot-set-config.mdx",__scans:{}});function p(e){var{components:a}=e,t=Object(i.a)(e,["components"]);return Object(c.b)(s,Object(n.a)({},o,t,{components:a,mdxType:"MDXLayout"}),Object(c.b)("h1",{className:"g-type-display-2"},Object(c.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#command-operator-autopilot-set-config","aria-label":"command operator autopilot set config permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"command-operator-autopilot-set-config","aria-hidden":""})),"Command: operator autopilot set-config"),Object(c.b)("p",null,"The Autopilot operator command is used to set the current Autopilot\nconfiguration. See the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://learn.hashicorp.com/nomad/operating-nomad/autopilot"}),"Autopilot Guide")," for more information about Autopilot."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#usage","aria-label":"usage permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"usage","aria-hidden":""})),"Usage"),Object(c.b)("pre",{className:"language-plaintext"},Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-plaintext"}),"nomad operator autopilot set-config [options]\n")),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#general-options","aria-label":"general options permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"general-options","aria-hidden":""})),"General Options"),Object(c.b)("ul",null,Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"address",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#address","aria-label":"address permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-address=<addr>")),": The address of the Nomad server. Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_ADDR"),"\nenvironment variable if set. Defaults to ",Object(c.b)("inlineCode",{parentName:"p"},"http://127.0.0.1:4646"),".")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"region",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#region","aria-label":"region permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-region=<region>")),": The region of the Nomad server to forward commands to.\nOverrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_REGION")," environment variable if set. Defaults to the\nAgent's local region.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"namespace",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#namespace","aria-label":"namespace permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-namespace=<namespace>")),": The target namespace for queries and actions bound\nto a namespace. Overrides the NOMAD_NAMESPACE environment variable if set.\nIf set to '*', job and alloc subcommands query all namespacecs authorized to\nuser. Defaults to the \"default\" namespace.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"no-color",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#no-color","aria-label":"no color permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-no-color")),": Disables colored command output. Alternatively,\n",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CLI_NO_COLOR")," may be set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"ca-cert",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-cert","aria-label":"ca cert permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-ca-cert=<path>")),": Path to a PEM encoded CA cert file to use to verify the\nNomad server SSL certificate. Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CACERT")," environment\nvariable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"ca-path",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-path","aria-label":"ca path permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-ca-path=<path>")),": Path to a directory of PEM encoded CA cert files to verify\nthe Nomad server SSL certificate. If both ",Object(c.b)("inlineCode",{parentName:"p"},"-ca-cert")," and ",Object(c.b)("inlineCode",{parentName:"p"},"-ca-path")," are\nspecified, ",Object(c.b)("inlineCode",{parentName:"p"},"-ca-cert")," is used. Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CAPATH")," environment\nvariable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"client-cert",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#client-cert","aria-label":"client cert permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-client-cert=<path>")),": Path to a PEM encoded client certificate for TLS\nauthentication to the Nomad server. Must also specify ",Object(c.b)("inlineCode",{parentName:"p"},"-client-key"),". Overrides\nthe ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_CERT")," environment variable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"client-key",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#client-key","aria-label":"client key permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-client-key=<path>")),": Path to an unencrypted PEM encoded private key matching\nthe client certificate from ",Object(c.b)("inlineCode",{parentName:"p"},"-client-cert"),". Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_KEY"),"\nenvironment variable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"tls-server-name",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-server-name","aria-label":"tls server name permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-tls-server-name=<value>")),": The server name to use as the SNI host when connecting\nvia TLS. Overrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_TLS_SERVER_NAME")," environment variable if set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"tls-skip-verify",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-skip-verify","aria-label":"tls skip verify permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-tls-skip-verify")),": Do not verify TLS certificate. This is highly not\nrecommended. Verification will also be skipped if ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_SKIP_VERIFY")," is set.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"token",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#token","aria-label":"token permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-token")),": The SecretID of an ACL token to use to authenticate API requests with.\nOverrides the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_TOKEN")," environment variable if set."))),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#set-config-options","aria-label":"set config options permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"set-config-options","aria-hidden":""})),"Set Config Options"),Object(c.b)("ul",null,Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"cleanup-dead-servers",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#cleanup-dead-servers","aria-label":"cleanup dead servers permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-cleanup-dead-servers"))," - Specifies whether to enable automatic removal of\ndead servers upon the successful joining of new servers to the cluster. Must be\none of ",Object(c.b)("inlineCode",{parentName:"p"},"[true|false]"),".")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"last-contact-threshold",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#last-contact-threshold","aria-label":"last contact threshold permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-last-contact-threshold"))," - Controls the maximum amount of time a server can\ngo without contact from the leader before being considered unhealthy. Must be a\nduration value such as ",Object(c.b)("inlineCode",{parentName:"p"},"200ms"),".")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"max-trailing-logs",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#max-trailing-logs","aria-label":"max trailing logs permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-max-trailing-logs"))," - Controls the maximum number of log entries that a\nserver can trail the leader by before being considered unhealthy.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"server-stabilization-time",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#server-stabilization-time","aria-label":"server stabilization time permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-server-stabilization-time"))," - Controls the minimum amount of time a server\nmust be stable in the 'healthy' state before being added to the cluster. Only\ntakes effect if all servers are running Raft protocol version 3 or higher. Must\nbe a duration value such as ",Object(c.b)("inlineCode",{parentName:"p"},"10s"),".")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"disable-upgrade-migration",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#disable-upgrade-migration","aria-label":"disable upgrade migration permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-disable-upgrade-migration"))," - (Enterprise-only) Controls whether Nomad will\navoid promoting new servers until it can perform a migration. Must be one of\n",Object(c.b)("inlineCode",{parentName:"p"},"[true|false]"),".")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"redundancy-zone-tag",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#redundancy-zone-tag","aria-label":"redundancy zone tag permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-redundancy-zone-tag")),"- (Enterprise-only) Controls the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/configuration/server#redundancy_zone"}),Object(c.b)("inlineCode",{parentName:"a"},"redundancy_zone")),"\nused for separating servers into different redundancy zones.")),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"upgrade-version-tag",className:"__target-lic","aria-hidden":""})),Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#upgrade-version-tag","aria-label":"upgrade version tag permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"-upgrade-version-tag"))," - (Enterprise-only) Controls the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/configuration/server#upgrade_version"}),Object(c.b)("inlineCode",{parentName:"a"},"upgrade_version"))," to\nuse for version info when performing upgrade migrations. If left blank, the\nNomad version will be used."))),Object(c.b)("p",null,"The output looks like this:"),Object(c.b)("pre",{className:"language-plaintext"},Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-plaintext"}),"Configuration updated!\n")),Object(c.b)("p",null,"The return code will indicate success or failure."))}p.isMDXComponent=!0},uh2L:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/commands/operator/autopilot-set-config",function(){return t("nfUv")}])}},[["uh2L",0,1,2,4,3,5,6]]]);