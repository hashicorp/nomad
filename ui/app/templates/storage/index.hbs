{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
~}}

{{page-title "Storage"}}

<Breadcrumb @crumb={{hash label="Storage" args=(array "storage.index")}} />{{outlet}}

<StorageSubnav />
<section class="section storage-index">
  {{#if this.isForbidden}}
    <ForbiddenMessage />
  {{else}}
    <Hds::Card::Container @level="base" @hasBorder={{false}} class="storage-index-table-card">
      <header aria-label="CSI Volumes">
        <h3>CSI Volumes</h3>
        <p class="intro">
          Storage configured by plugins run as Nomad jobs, with advanced features like snapshots and resizing.
          <Hds::Link::Inline @href="https://developer.hashicorp.com/nomad/docs/concepts/plugins/csi" @icon="docs-link" @iconPosition="trailing">Read more</Hds::Link::Inline>
        </p>
        <div class="search">
          <Hds::Form::TextInput::Field
            @type="search"
            @value={{this.csiFilter}}
            placeholder="Search CSI Volumes"
            {{on "input"
              (queue
                (action (mut this.csiFilter) value="target.value")
                (action this.handlePageChange "csi" 1)
              )
            }} />
        </div>
      </header>
      {{#if this.sortedCSIVolumes.length}}
        <Hds::Table @caption="CSI Volumes"
          @model={{this.paginatedCSIVolumes}}
          @columns={{this.csiColumns}}
          @sortBy={{this.csiSortProperty}}
          @sortOrder={{if this.csiSortDescending "desc" "asc"}}
          @onSort={{action this.handleSort "csi"}}
          >
          <:body as |B|>
            <B.Tr>
              <B.Td>
                <LinkTo
                  @route="storage.volumes.volume"
                  @model={{B.data.idWithNamespace}}
                  class="is-primary"
                >
                  {{B.data.name}}
                </LinkTo>
              </B.Td>
              {{#if this.system.shouldShowNamespaces}}
                <B.Td>
                  {{B.data.namespace.name}}
                </B.Td>
              {{/if}}
              <B.Td data-test-volume-schedulable>
                {{if B.data.schedulable "Schedulable" "Unschedulable"}}
              </B.Td>
              <B.Td data-test-volume-controller-health>
                {{#if B.data.controllerRequired}}
                  {{if (gt B.data.controllersHealthy 0) "Healthy" "Unhealthy"}}
                  (
                  {{B.data.controllersHealthy}}
                  /
                  {{B.data.controllersExpected}}
                  )
                {{else if (gt B.data.controllersExpected 0)}}
                  {{if (gt B.data.controllersHealthy 0) "Healthy" "Unhealthy"}}
                  (
                  {{B.data.controllersHealthy}}
                  /
                  {{B.data.controllersExpected}}
                  )
                {{else}}
                  <em class="is-faded">
                    Node Only
                  </em>
                {{/if}}
              </B.Td>
              <B.Td data-test-volume-node-health>
                {{if (gt B.data.nodesHealthy 0) "Healthy" "Unhealthy"}}
                (
                {{B.data.nodesHealthy}}
                /
                {{B.data.nodesExpected}}
                )
              </B.Td>
              <B.Td data-test-volume-provider>
                {{B.data.provider}}
              </B.Td>
              <B.Td data-test-volume-allocations>
                {{B.data.allocationCount}}
              </B.Td>
            </B.Tr>
          </:body>
        </Hds::Table>
        {{#if (gt this.sortedCSIVolumes.length this.userSettings.pageSize)}}
          <Hds::Pagination::Numbered
            @totalItems={{this.filteredCSIVolumes.length}}
            @currentPage={{this.csiPage}}
            @pageSizes={{this.pageSizes}}
            @currentPageSize={{this.userSettings.pageSize}}
            @onPageChange={{action this.handlePageChange "csi"}}
            @onPageSizeChange={{action (mut this.userSettings.pageSize)}}
          />
        {{/if}}
      {{else}}
        <div class="empty-message">
          {{#if this.csiFilter}}
            <p>No CSI volumes match your search for "{{this.csiFilter}}"</p>
            <Hds::Button @text="Clear search" @color="secondary" {{on "click" (queue (action (mut this.csiFilter) "") (action this.handlePageChange "csi" 1))}} />
          {{else}}
            <p>No CSI Volumes found</p>
          {{/if}}
        </div>
      {{/if}}
    </Hds::Card::Container>

    <Hds::Card::Container @level="base" @hasBorder={{false}} class="storage-index-table-card">
      <header aria-label="Dynamic Host Volumes">
        <h3>Dynamic Host Volumes</h3>
        <p class="intro">
          Storage provisioned via plugin scripts on a particular client, modifiable without requiring client restart.
          <Hds::Link::Inline @href="https://developer.hashicorp.com/nomad/docs/commands/volume/create" @icon="docs-link" @iconPosition="trailing">Read more</Hds::Link::Inline>
        </p>
        <div class="search">
          <Hds::Form::TextInput::Field
            @type="search"
            @value={{this.dhvFilter}}
            placeholder="Search Dynamic Host Volumes"
            {{on "input"
              (queue
                (action (mut this.dhvFilter) value="target.value")
                (action (mut this.dhvPage) 1)
              )
            }} />
        </div>
      </header>
      {{#if this.sortedDynamicHostVolumes.length}}
        <Hds::Table @caption="Dynamic Host Volumes"
          @model={{this.sortedDynamicHostVolumes}}
          @columns={{this.dhvColumns}}
          @sortBy={{this.dhvSortProperty}}
          @sortOrder={{if this.dhvSortDescending "desc" "asc"}}
          @onSort={{action this.handleSort "dhv"}}
        >
          <:body as |B|>
            <B.Tr data-test-dhv-row>
              <B.Td>
                <LinkTo data-test-dhv-name={{B.data.name}} @route="storage.volumes.dynamic-host-volume"
                  @model={{B.data.idWithNamespace}}>
                    {{B.data.name}}
                  </LinkTo>
              </B.Td>
              {{#if this.system.shouldShowNamespaces}}
                <B.Td>{{B.data.namespace}}</B.Td>
              {{/if}}
              <B.Td>{{B.data.pluginID}}</B.Td>
              <B.Td>{{B.data.state}}</B.Td>
              <B.Td>
                <span class="tooltip" aria-label="{{format-month-ts B.data.modifyTime}}">
                  {{moment-from-now B.data.modifyTime}}
                </span>
              </B.Td>
            </B.Tr>
          </:body>
        </Hds::Table>
        {{#if (gt this.sortedDynamicHostVolumes.length this.userSettings.pageSize)}}
          <Hds::Pagination::Numbered
            @totalItems={{this.filteredDynamicHostVolumes.length}}
            @currentPage={{this.dhvPage}}
            @pageSizes={{this.pageSizes}}
            @currentPageSize={{this.userSettings.pageSize}}
            @onPageChange={{action this.handlePageChange "dhv"}}
            @onPageSizeChange={{action (mut this.userSettings.pageSize)}}
          />
        {{/if}}
      {{else}}
        <div class="empty-message">
          {{#if this.dhvFilter}}
            <p>No dynamic host volumes match your search for "{{this.dhvFilter}}"</p>
            <Hds::Button @text="Clear search" @color="secondary" {{on "click" (queue (action (mut this.dhvFilter) "") (action this.handlePageChange "dhv" 1))}} />
          {{else}}
            <p>No Dynamic Host Volumes found</p>
          {{/if}}
        </div>
      {{/if}}
    </Hds::Card::Container>

    <Hds::Card::Container @level="base" @hasBorder={{false}} class="storage-index-table-card"
      {{keyboard-shortcut
        label="Scan for Static Host Volumes"
        pattern=(array "s" "c" "a" "n")
        action=(action "performScanForStaticHostVolumes")
      }}
    >
      <header aria-label="Static Host Volumes">
        <h3>
          Static Host Volumes
          <Hds::TooltipButton @text="Static Host Volumes are scanned by reading all nodes in your cluster, so this list will not automatically load or update.">
            <Hds::Icon @name="info" />
          </Hds::TooltipButton>
        </h3>
        <div class="actions">
          <Hds::Button
            @color="secondary"
            disabled={{this.scanForStaticHostVolumes.isRunning}}
            @icon={{if this.scanForStaticHostVolumes.isRunning "loading" "search"}}
            @text="{{if this.scanForStaticHostVolumes.isRunning "Scanning" "Scan"}} for Static Host Volumes"
            {{on "click" (perform this.scanForStaticHostVolumes)}}
          />
          {{#if this.scanForStaticHostVolumes.isRunning}}
            <Hds::Button
              autofocus
              @icon="x"
              @iconPosition="trailing"
              @text="cancel"
              @color="tertiary"
              {{on "click" (action this.pauseScanForStaticHostVolumes)}}
            />
          {{/if}}
        </div>
        <p class="intro">
          Defined in the Nomad agent's config file, best for infrequently changing storage
        </p>
        <div class="search">
          {{#if this.fetchedStaticHostVolumes.length}}
            <Hds::Form::TextInput::Field
              @type="search"
              @value={{this.shvFilter}}
              placeholder="Search Static Host Volumes"
              autofocus
              {{on "input"
                (queue
                  (action (mut this.shvFilter) value="target.value")
                  (action this.handlePageChange "shv" 1)
                )
              }} />
          {{/if}}
        </div>
      </header>
      {{#if this.fetchedStaticHostVolumes.length}}
        {{#if this.paginatedStaticHostVolumes.length}}
          <Hds::Table @caption="Static Host Volumes" @model={{this.paginatedStaticHostVolumes}}
            @columns={{array
              (hash key="name" label="Name" isSortable=true)
              (hash key="path" label="Path" isSortable=true)
              (hash key="readOnly" label="Read Only?" isSortable=true)
            }}
            @sortBy={{this.shvSortProperty}}
            @sortOrder={{if this.shvSortDescending "desc" "asc"}}
            @onSort={{action this.handleSort "shv"}}
          >
            <:body as |B|>
              <B.Tr>
                <B.Td>
                  <LinkTo @route="clients.client" @models={{array B.data.nodeID}}>{{B.data.name}}</LinkTo>
                </B.Td>
                <B.Td>{{B.data.path}}</B.Td>
                <B.Td>{{B.data.readOnly}}</B.Td>
              </B.Tr>
            </:body>
          </Hds::Table>
          {{#if (gt this.sortedStaticHostVolumes.length this.userSettings.pageSize)}}
            <Hds::Pagination::Numbered
              @totalItems={{this.filteredStaticHostVolumes.length}}
              @currentPage={{this.shvPage}}
              @pageSizes={{this.pageSizes}}
              @currentPageSize={{this.userSettings.pageSize}}
              @onPageChange={{action this.handlePageChange "shv"}}
              @onPageSizeChange={{action (mut this.userSettings.pageSize)}}
            />
          {{/if}}
        {{else}}
          <div class="empty-message">
            <p>No static host volumes match your search for "{{this.shvFilter}}"</p>
            <Hds::Button @text="Clear search" @color="secondary" {{on "click" (queue (action (mut this.shvFilter) "") (action this.handlePageChange "shv" 1))}} />
          </div>
        {{/if}}
      {{else if
        (and
          (not this.scanForStaticHostVolumes.isRunning)
          this.scanForStaticHostVolumes.lastSuccessful
        )
      }}
        <div class="empty-message">
          <p>No Static Host Volumes found</p>
        </div>
      {{/if}}
    </Hds::Card::Container>

    <Hds::Card::Container @level="base" @hasBorder={{false}} class="storage-index-table-card"
      {{keyboard-shortcut
        label="Scan for Ephemeral Disks"
        pattern=(array "s" "c" "a" "n")
        action=(action "performScanForEphemeralDisks")
      }}
    >
      <header aria-label="Ephemeral Disks">
        <h3>
          Ephemeral Disks
          <Hds::TooltipButton @text="Ephemeral Disks are scanned by reading all allocations in your cluster, so this list will not automatically load or update.">
            <Hds::Icon @name="info" />
          </Hds::TooltipButton>
        </h3>
        <div class="actions">
          <Hds::Button
            @color="secondary"
            disabled={{this.scanForEphemeralDisks.isRunning}}
            @icon={{if this.scanForEphemeralDisks.isRunning "loading" "search"}}
            @text="{{if this.scanForEphemeralDisks.isRunning "Scanning" "Scan"}} for Ephemeral Disks"
            {{on "click" (perform this.scanForEphemeralDisks)}}
          />
          {{#if this.scanForEphemeralDisks.isRunning}}
            <Hds::Button
              autofocus
              @icon="x"
              @iconPosition="trailing"
              @text="cancel"
              @color="tertiary"
              {{on "click" (action this.pauseScanForEphemeralDisks)}}
            />
          {{/if}}
        </div>
        <p class="intro">
          Best-effort persistence, ideal for rebuildable data. Stored in the <code>/alloc/data</code> directory in a given allocation.
        </p>
        {{#if this.fetchedEphemeralDisks.length}}
          <div class="search">
            <Hds::Form::TextInput::Field
              @type="search"
              @value={{this.edFilter}}
              placeholder="Search Ephemeral Disks"
              {{on "input"
                (queue
                  (action (mut this.edFilter) value="target.value")
                  (action this.handlePageChange "ed" 1)
                )
              }} />
          </div>
        {{/if}}
      </header>
      {{#if this.fetchedEphemeralDisks.length}}
        {{#if this.paginatedEphemeralDisks.length}}
          <Hds::Table @caption="Ephemeral Disks"
            @model={{this.paginatedEphemeralDisks}}
            @columns={{array (hash key="name" label="Name" isSortable=true) (hash key="sizeBytes" label="Size" isSortable=true)}}
            @sortBy={{this.edSortProperty}}
            @sortOrder={{if this.edSortDescending "desc" "asc"}}
            @onSort={{action this.handleSort "ed"}}
          >
            <:body as |B|>
              <B.Tr>
                <B.Td>
                  <LinkTo @route="allocations.allocation.fs" @models={{array B.data.id 'alloc/data'}}>{{B.data.name}}</LinkTo>
                </B.Td>
                <B.Td>{{B.data.size}}</B.Td>
              </B.Tr>
            </:body>
          </Hds::Table>
          {{#if (gt this.sortedEphemeralDisks.length this.userSettings.pageSize)}}
            <Hds::Pagination::Numbered
              @totalItems={{this.filteredEphemeralDisks.length}}
              @currentPage={{this.edPage}}
              @pageSizes={{this.pageSizes}}
              @currentPageSize={{this.userSettings.pageSize}}
              @onPageChange={{action this.handlePageChange "ed"}}
              @onPageSizeChange={{action (mut this.userSettings.pageSize)}}
            />
          {{/if}}
        {{else}}
          <div class="empty-message">
            <p>No ephemeral disks match your search for "{{this.edFilter}}"</p>
            <Hds::Button @text="Clear search" @color="secondary" {{on "click" (queue (action (mut this.edFilter) "") (action this.handlePageChange "ed" 1))}} />
          </div>
        {{/if}}
      {{else if
        (and
          (not this.scanForEphemeralDisks.isRunning)
          this.scanForEphemeralDisks.lastSuccessful
        )
      }}
        <div class="empty-message">
          <p>No Ephemeral Disks found</p>
        </div>
      {{/if}}
    </Hds::Card::Container>

  {{/if}}
</section>
