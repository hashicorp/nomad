/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// Resources struct for Resources
type Resources struct {
	CPU *int32 `json:"CPU,omitempty"`
	Cores *int32 `json:"Cores,omitempty"`
	Devices *[]RequestedDevice `json:"Devices,omitempty"`
	DiskMB *int32 `json:"DiskMB,omitempty"`
	IOPS *int32 `json:"IOPS,omitempty"`
	MemoryMB *int32 `json:"MemoryMB,omitempty"`
	MemoryMaxMB *int32 `json:"MemoryMaxMB,omitempty"`
	Networks *[]NetworkResource `json:"Networks,omitempty"`
}

// NewResources instantiates a new Resources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResources() *Resources {
	this := Resources{}
	return &this
}

// NewResourcesWithDefaults instantiates a new Resources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourcesWithDefaults() *Resources {
	this := Resources{}
	return &this
}

// GetCPU returns the CPU field value if set, zero value otherwise.
func (o *Resources) GetCPU() int32 {
	if o == nil || o.CPU == nil {
		var ret int32
		return ret
	}
	return *o.CPU
}

// GetCPUOk returns a tuple with the CPU field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resources) GetCPUOk() (*int32, bool) {
	if o == nil || o.CPU == nil {
		return nil, false
	}
	return o.CPU, true
}

// HasCPU returns a boolean if a field has been set.
func (o *Resources) HasCPU() bool {
	if o != nil && o.CPU != nil {
		return true
	}

	return false
}

// SetCPU gets a reference to the given int32 and assigns it to the CPU field.
func (o *Resources) SetCPU(v int32) {
	o.CPU = &v
}

// GetCores returns the Cores field value if set, zero value otherwise.
func (o *Resources) GetCores() int32 {
	if o == nil || o.Cores == nil {
		var ret int32
		return ret
	}
	return *o.Cores
}

// GetCoresOk returns a tuple with the Cores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resources) GetCoresOk() (*int32, bool) {
	if o == nil || o.Cores == nil {
		return nil, false
	}
	return o.Cores, true
}

// HasCores returns a boolean if a field has been set.
func (o *Resources) HasCores() bool {
	if o != nil && o.Cores != nil {
		return true
	}

	return false
}

// SetCores gets a reference to the given int32 and assigns it to the Cores field.
func (o *Resources) SetCores(v int32) {
	o.Cores = &v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *Resources) GetDevices() []RequestedDevice {
	if o == nil || o.Devices == nil {
		var ret []RequestedDevice
		return ret
	}
	return *o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resources) GetDevicesOk() (*[]RequestedDevice, bool) {
	if o == nil || o.Devices == nil {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *Resources) HasDevices() bool {
	if o != nil && o.Devices != nil {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []RequestedDevice and assigns it to the Devices field.
func (o *Resources) SetDevices(v []RequestedDevice) {
	o.Devices = &v
}

// GetDiskMB returns the DiskMB field value if set, zero value otherwise.
func (o *Resources) GetDiskMB() int32 {
	if o == nil || o.DiskMB == nil {
		var ret int32
		return ret
	}
	return *o.DiskMB
}

// GetDiskMBOk returns a tuple with the DiskMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resources) GetDiskMBOk() (*int32, bool) {
	if o == nil || o.DiskMB == nil {
		return nil, false
	}
	return o.DiskMB, true
}

// HasDiskMB returns a boolean if a field has been set.
func (o *Resources) HasDiskMB() bool {
	if o != nil && o.DiskMB != nil {
		return true
	}

	return false
}

// SetDiskMB gets a reference to the given int32 and assigns it to the DiskMB field.
func (o *Resources) SetDiskMB(v int32) {
	o.DiskMB = &v
}

// GetIOPS returns the IOPS field value if set, zero value otherwise.
func (o *Resources) GetIOPS() int32 {
	if o == nil || o.IOPS == nil {
		var ret int32
		return ret
	}
	return *o.IOPS
}

// GetIOPSOk returns a tuple with the IOPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resources) GetIOPSOk() (*int32, bool) {
	if o == nil || o.IOPS == nil {
		return nil, false
	}
	return o.IOPS, true
}

// HasIOPS returns a boolean if a field has been set.
func (o *Resources) HasIOPS() bool {
	if o != nil && o.IOPS != nil {
		return true
	}

	return false
}

// SetIOPS gets a reference to the given int32 and assigns it to the IOPS field.
func (o *Resources) SetIOPS(v int32) {
	o.IOPS = &v
}

// GetMemoryMB returns the MemoryMB field value if set, zero value otherwise.
func (o *Resources) GetMemoryMB() int32 {
	if o == nil || o.MemoryMB == nil {
		var ret int32
		return ret
	}
	return *o.MemoryMB
}

// GetMemoryMBOk returns a tuple with the MemoryMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resources) GetMemoryMBOk() (*int32, bool) {
	if o == nil || o.MemoryMB == nil {
		return nil, false
	}
	return o.MemoryMB, true
}

// HasMemoryMB returns a boolean if a field has been set.
func (o *Resources) HasMemoryMB() bool {
	if o != nil && o.MemoryMB != nil {
		return true
	}

	return false
}

// SetMemoryMB gets a reference to the given int32 and assigns it to the MemoryMB field.
func (o *Resources) SetMemoryMB(v int32) {
	o.MemoryMB = &v
}

// GetMemoryMaxMB returns the MemoryMaxMB field value if set, zero value otherwise.
func (o *Resources) GetMemoryMaxMB() int32 {
	if o == nil || o.MemoryMaxMB == nil {
		var ret int32
		return ret
	}
	return *o.MemoryMaxMB
}

// GetMemoryMaxMBOk returns a tuple with the MemoryMaxMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resources) GetMemoryMaxMBOk() (*int32, bool) {
	if o == nil || o.MemoryMaxMB == nil {
		return nil, false
	}
	return o.MemoryMaxMB, true
}

// HasMemoryMaxMB returns a boolean if a field has been set.
func (o *Resources) HasMemoryMaxMB() bool {
	if o != nil && o.MemoryMaxMB != nil {
		return true
	}

	return false
}

// SetMemoryMaxMB gets a reference to the given int32 and assigns it to the MemoryMaxMB field.
func (o *Resources) SetMemoryMaxMB(v int32) {
	o.MemoryMaxMB = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *Resources) GetNetworks() []NetworkResource {
	if o == nil || o.Networks == nil {
		var ret []NetworkResource
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resources) GetNetworksOk() (*[]NetworkResource, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *Resources) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []NetworkResource and assigns it to the Networks field.
func (o *Resources) SetNetworks(v []NetworkResource) {
	o.Networks = &v
}

func (o Resources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CPU != nil {
		toSerialize["CPU"] = o.CPU
	}
	if o.Cores != nil {
		toSerialize["Cores"] = o.Cores
	}
	if o.Devices != nil {
		toSerialize["Devices"] = o.Devices
	}
	if o.DiskMB != nil {
		toSerialize["DiskMB"] = o.DiskMB
	}
	if o.IOPS != nil {
		toSerialize["IOPS"] = o.IOPS
	}
	if o.MemoryMB != nil {
		toSerialize["MemoryMB"] = o.MemoryMB
	}
	if o.MemoryMaxMB != nil {
		toSerialize["MemoryMaxMB"] = o.MemoryMaxMB
	}
	if o.Networks != nil {
		toSerialize["Networks"] = o.Networks
	}
	return json.Marshal(toSerialize)
}

type NullableResources struct {
	value *Resources
	isSet bool
}

func (v NullableResources) Get() *Resources {
	return v.value
}

func (v *NullableResources) Set(val *Resources) {
	v.value = val
	v.isSet = true
}

func (v NullableResources) IsSet() bool {
	return v.isSet
}

func (v *NullableResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResources(val *Resources) *NullableResources {
	return &NullableResources{value: val, isSet: true}
}

func (v NullableResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


