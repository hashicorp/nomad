/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// LogConfig struct for LogConfig
type LogConfig struct {
	MaxFileSizeMB *int32 `json:"MaxFileSizeMB,omitempty"`
	MaxFiles *int32 `json:"MaxFiles,omitempty"`
}

// NewLogConfig instantiates a new LogConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogConfig() *LogConfig {
	this := LogConfig{}
	return &this
}

// NewLogConfigWithDefaults instantiates a new LogConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogConfigWithDefaults() *LogConfig {
	this := LogConfig{}
	return &this
}

// GetMaxFileSizeMB returns the MaxFileSizeMB field value if set, zero value otherwise.
func (o *LogConfig) GetMaxFileSizeMB() int32 {
	if o == nil || o.MaxFileSizeMB == nil {
		var ret int32
		return ret
	}
	return *o.MaxFileSizeMB
}

// GetMaxFileSizeMBOk returns a tuple with the MaxFileSizeMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogConfig) GetMaxFileSizeMBOk() (*int32, bool) {
	if o == nil || o.MaxFileSizeMB == nil {
		return nil, false
	}
	return o.MaxFileSizeMB, true
}

// HasMaxFileSizeMB returns a boolean if a field has been set.
func (o *LogConfig) HasMaxFileSizeMB() bool {
	if o != nil && o.MaxFileSizeMB != nil {
		return true
	}

	return false
}

// SetMaxFileSizeMB gets a reference to the given int32 and assigns it to the MaxFileSizeMB field.
func (o *LogConfig) SetMaxFileSizeMB(v int32) {
	o.MaxFileSizeMB = &v
}

// GetMaxFiles returns the MaxFiles field value if set, zero value otherwise.
func (o *LogConfig) GetMaxFiles() int32 {
	if o == nil || o.MaxFiles == nil {
		var ret int32
		return ret
	}
	return *o.MaxFiles
}

// GetMaxFilesOk returns a tuple with the MaxFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogConfig) GetMaxFilesOk() (*int32, bool) {
	if o == nil || o.MaxFiles == nil {
		return nil, false
	}
	return o.MaxFiles, true
}

// HasMaxFiles returns a boolean if a field has been set.
func (o *LogConfig) HasMaxFiles() bool {
	if o != nil && o.MaxFiles != nil {
		return true
	}

	return false
}

// SetMaxFiles gets a reference to the given int32 and assigns it to the MaxFiles field.
func (o *LogConfig) SetMaxFiles(v int32) {
	o.MaxFiles = &v
}

func (o LogConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxFileSizeMB != nil {
		toSerialize["MaxFileSizeMB"] = o.MaxFileSizeMB
	}
	if o.MaxFiles != nil {
		toSerialize["MaxFiles"] = o.MaxFiles
	}
	return json.Marshal(toSerialize)
}

type NullableLogConfig struct {
	value *LogConfig
	isSet bool
}

func (v NullableLogConfig) Get() *LogConfig {
	return v.value
}

func (v *NullableLogConfig) Set(val *LogConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLogConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLogConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogConfig(val *LogConfig) *NullableLogConfig {
	return &NullableLogConfig{value: val, isSet: true}
}

func (v NullableLogConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


