(window.webpackJsonp=window.webpackJsonp||[]).push([[277],{"0owL":function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Web UI","sidebar_title":"Web UI","description":"Visit the Nomad Web UI to inspect jobs, allocations, and more.","__resourcePath":"intro/getting-started/ui.mdx"}')},"8Bhu":function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Introduction","sidebar_title":"What is Nomad?","description":"Welcome to the intro guide to Nomad! This guide is the best place to start with Nomad. We cover what Nomad is, what problems it can solve, how it compares to existing software, and a quick start for using Nomad.","__resourcePath":"intro/index.mdx"}')},"9UVK":function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Next Steps","sidebar_title":"Next Steps","description":"After completing the getting started guide, learn about what to do next with Nomad.","__resourcePath":"intro/getting-started/next-steps.mdx"}')},DLeK:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/intro/getting-started/running",function(){return a("ZvIJ")}])},ES6J:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Install Nomad","sidebar_title":"Getting Started","description":"The first step to using Nomad is to get it installed.","__resourcePath":"intro/getting-started/index.mdx"}')},I4gp:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Nomad vs. Terraform","sidebar_title":"Terraform","description":"Comparison between Nomad and Terraform","__resourcePath":"intro/vs/terraform.mdx"}')},VoyU:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Nomad vs. Mesos with Aurora, Marathon, etc","sidebar_title":"Mesos & Marathon","description":"Comparison between Nomad and Mesos with Marathon","__resourcePath":"intro/vs/mesos.mdx"}')},ZvIJ:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return p}));var n=a("wx14"),r=a("Ff2n"),s=a("q1tI"),o=a.n(s),i=a("7ljp"),c=a("x5xN"),l=(o.a.createElement,{}),d=Object(c.a)({layout:"intro",page_title:"Running Nomad",sidebar_title:"Running Nomad",description:"Learn about the Nomad agent, and the lifecycle of running and stopping.",__resourcePath:"intro/getting-started/running.mdx",__scans:{}});function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)(d,Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{className:"g-type-display-2"},Object(i.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#running-nomad","aria-label":"running nomad permalink"}),"\xbb"),Object(i.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"running-nomad","aria-hidden":""})),"Running Nomad"),Object(i.b)("p",null,"Nomad relies on a long running agent on every machine in the cluster.\nThe agent can run either in server or client mode. Each region must\nhave at least one server, though a cluster of 3 or 5 servers is recommended.\nA single server deployment is ",Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"highly"))," discouraged as data loss is inevitable\nin a failure scenario."),Object(i.b)("p",null,"All other agents run in client mode. A Nomad client is a very lightweight\nprocess that registers the host machine, performs heartbeating, and runs the tasks\nthat are assigned to it by the servers. The agent must be run on every node that\nis part of the cluster so that the servers can assign work to those machines."),Object(i.b)("h2",{className:"g-type-display-3"},Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#starting-the-agent","aria-label":"starting the agent permalink"}),"\xbb"),Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"starting-the-agent","aria-hidden":""})),"Starting the Agent"),Object(i.b)("p",null,"For simplicity, we will run a single Nomad agent in development mode. This mode\nis used to quickly start an agent that is acting as a client and server to test\njob configurations or prototype interactions. It should ",Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"not"))," be used in\nproduction as it does not persist state."),Object(i.b)("pre",{className:"language-shell-session"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(i.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(i.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(i.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),Object(i.b)("span",Object(n.a)({parentName:"span"},{className:"token function"}),"sudo")," nomad agent -dev")),"\n\n",Object(i.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"==> Starting Nomad agent...\n==> Nomad agent configuration:\n\n                Client: true\n             Log Level: DEBUG\n                Region: global (DC: dc1)\n                Server: true\n\n==> Nomad agent started! Log data will stream in below:\n\n    [INFO] serf: EventMemberJoin: nomad.global 127.0.0.1\n    [INFO] nomad: starting 4 scheduling worker(s) for [service batch _core]\n    [INFO] client: using alloc directory /tmp/NomadClient599911093\n    [INFO] raft: Node at 127.0.0.1:4647 [Follower] entering Follower state\n    [INFO] nomad: adding server nomad.global (Addr: 127.0.0.1:4647) (DC: dc1)\n    [WARN] fingerprint.network: Ethtool not found, checking /sys/net speed file\n    [WARN] raft: Heartbeat timeout reached, starting election\n    [INFO] raft: Node at 127.0.0.1:4647 [Candidate] entering Candidate state\n    [DEBUG] raft: Votes needed: 1\n    [DEBUG] raft: Vote granted. Tally: 1\n    [INFO] raft: Election won. Tally: 1\n    [INFO] raft: Node at 127.0.0.1:4647 [Leader] entering Leader state\n    [INFO] raft: Disabling EnableSingleNode (bootstrap)\n    [DEBUG] raft: Node 127.0.0.1:4647 updated peer set (2): [127.0.0.1:4647]\n    [INFO] nomad: cluster leadership acquired\n    [DEBUG] client: applied fingerprints [arch cpu host memory storage network]\n    [DEBUG] client: available drivers [docker exec java]\n    [DEBUG] client: node registration complete\n    [DEBUG] client: updated allocations at index 1 (0 allocs)\n    [DEBUG] client: allocs: (added 0) (removed 0) (updated 0) (ignore 0)\n    [DEBUG] client: state updated to ready\n"))),Object(i.b)("p",null,"As you can see, the Nomad agent has started and has output some log\ndata. From the log data, you can see that our agent is running in both\nclient and server mode, and has claimed leadership of the cluster.\nAdditionally, the local client has been registered and marked as ready."),Object(i.b)("div",{className:"alert alert-info g-type-body",role:"alert"},Object(i.b)("p",{parentName:"div"},"",Object(i.b)("strong",{parentName:"p"},"Note:")," Typically any agent running in client mode must be run with root level\nprivilege. Nomad makes use of operating system primitives for resource isolation\nwhich require elevated permissions. The agent will function as non-root, but\ncertain task drivers will not be available.")),Object(i.b)("h2",{className:"g-type-display-3"},Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#cluster-nodes","aria-label":"cluster nodes permalink"}),"\xbb"),Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"cluster-nodes","aria-hidden":""})),"Cluster Nodes"),Object(i.b)("p",null,"If you run ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/commands/node/status"}),Object(i.b)("inlineCode",{parentName:"a"},"nomad node status"))," in another\nterminal, you can see the registered nodes of the Nomad cluster:"),Object(i.b)("pre",{className:"language-shell-session"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(i.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(i.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(i.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node status")),"\n",Object(i.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"ID        DC   Name   Class   Drain  Eligibility  Status\n171a583b  dc1  nomad  <none>  false  eligible     ready\n"))),Object(i.b)("p",null,"The output shows our Node ID, which is a randomly generated UUID,\nits datacenter, node name, node class, drain mode and current status.\nWe can see that our node is in the ready state, and task draining is\ncurrently off."),Object(i.b)("p",null,"The agent is also running in server mode, which means it is part of\nthe ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/internals/gossip"}),"gossip protocol")," used to connect all\nthe server instances together. We can view the members of the gossip\nring using the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/commands/server/members"}),Object(i.b)("inlineCode",{parentName:"a"},"server members"))," command:"),Object(i.b)("pre",{className:"language-shell-session"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(i.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(i.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(i.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad server members")),"\n",Object(i.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"Name          Address    Port  Status  Leader  Protocol  Build  Datacenter  Region\nnomad.global  127.0.0.1  4648  alive   true    2         0.7.0  dc1         global\n"))),Object(i.b)("p",null,"The output shows our own agent, the address it is running on, its\nhealth state, some version information, and the datacenter and region.\nAdditional metadata can be viewed by providing the ",Object(i.b)("inlineCode",{parentName:"p"},"-detailed")," flag."),Object(i.b)("h2",{className:"g-type-display-3"},Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#stopping","aria-label":"stopping the agent permalink"}),"\xbb"),Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h __compat",id:"stopping","aria-hidden":""})),Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"stopping-the-agent","aria-hidden":""})),"Stopping the Agent"),Object(i.b)("p",null,"You can use ",Object(i.b)("inlineCode",{parentName:"p"},"Ctrl-C")," (the interrupt signal) to halt the agent.\nBy default, all signals will cause the agent to forcefully shutdown.\nThe agent ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/configuration#leave_on_terminate"}),"can be configured")," to\ngracefully leave on either the interrupt or terminate signals."),Object(i.b)("p",null,"After interrupting the agent, you should see it leave the cluster\nand shut down:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"^C==> Caught signal: interrupt\n    [DEBUG] http: Shutting down http server\n    [INFO] agent: requesting shutdown\n    [INFO] client: shutting down\n    [INFO] nomad: shutting down server\n    [WARN] serf: Shutdown without a Leave\n    [INFO] agent: shutdown complete\n")),Object(i.b)("p",null,"By gracefully leaving, Nomad clients update their status to prevent\nfurther tasks from being scheduled and to start migrating any tasks that are\nalready assigned. Nomad servers notify their peers they intend to leave.\nWhen a server leaves, replication to that server stops. If a server fails,\nreplication continues to be attempted until the node recovers. Nomad will\nautomatically try to reconnect to ",Object(i.b)("em",{parentName:"p"},"failed")," nodes, allowing it to recover from\ncertain network conditions, while ",Object(i.b)("em",{parentName:"p"},"left")," nodes are no longer contacted."),Object(i.b)("p",null,"If an agent is operating as a server, ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/configuration#leave_on_terminate"}),Object(i.b)("inlineCode",{parentName:"a"},"leave_on_terminate"))," should only\nbe set if the server will never rejoin the cluster again. The default value of ",Object(i.b)("inlineCode",{parentName:"p"},"false")," for ",Object(i.b)("inlineCode",{parentName:"p"},"leave_on_terminate")," and ",Object(i.b)("inlineCode",{parentName:"p"},"leave_on_interrupt"),"\nwork well for most scenarios. If Nomad servers are part of an auto scaling group where new servers are brought up to replace\nfailed servers, using graceful leave avoids causing a potential availability outage affecting the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/internals/consensus"}),"consensus protocol"),".\nAs of Nomad 0.8, Nomad includes Autopilot which automatically removes failed or dead servers. This allows the operator to skip setting ",Object(i.b)("inlineCode",{parentName:"p"},"leave_on_terminate"),"."),Object(i.b)("p",null,"If a server does forcefully exit and will not be returning into service, the\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/commands/server/force-leave"}),Object(i.b)("inlineCode",{parentName:"a"},"server force-leave")," command")," should\nbe used to force the server from a ",Object(i.b)("em",{parentName:"p"},"failed")," to a ",Object(i.b)("em",{parentName:"p"},"left")," state."),Object(i.b)("h2",{className:"g-type-display-3"},Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#next-steps","aria-label":"next steps permalink"}),"\xbb"),Object(i.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"next-steps","aria-hidden":""})),"Next Steps"),Object(i.b)("p",null,"If you shut down the development Nomad agent as instructed above, ensure that it is back up and running again and let's try to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/intro/getting-started/jobs"}),"run a job"),"!"))}p.isMDXComponent=!0},dVIr:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Nomad vs. AWS ECS","sidebar_title":"AWS ECS","description":"Comparison between Nomad and AWS ECS","__resourcePath":"intro/vs/ecs.mdx"}')},gSz6:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Use Cases","sidebar_title":"Use Cases","description":"This page lists some concrete use cases for Nomad, but the possible use cases\\nare much broader than what we cover.","__resourcePath":"intro/use-cases.mdx"}')},"i+aQ":function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Who Uses Nomad","sidebar_title":"Who Uses Nomad","description":"This page features many ways Nomad is used in production today across many industries to solve critical, real-world business objectives","__resourcePath":"intro/who-uses-nomad.mdx"}')},l4nd:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Running Nomad","sidebar_title":"Running Nomad","description":"Learn about the Nomad agent, and the lifecycle of running and stopping.","__resourcePath":"intro/getting-started/running.mdx"}')},mVx1:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Jobs","sidebar_title":"Jobs","description":"Learn how to submit, modify and stop jobs in Nomad.","__resourcePath":"intro/getting-started/jobs.mdx"}')},oySa:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Nomad vs. Other Software","sidebar_title":"Nomad vs. Other Software","description":"Comparisons between Nomad and other cluster managers.","__resourcePath":"intro/vs/index.mdx"}')},pdIF:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Nomad vs. Kubernetes","sidebar_title":"Kubernetes","description":"Comparison between Nomad and Kubernetes","__resourcePath":"intro/vs/kubernetes.mdx"}')},seji:function(e){e.exports=JSON.parse('{"layout":"intro","page_title":"Clustering","sidebar_title":"Clustering","description":"Join another Nomad client to create your first cluster.","__resourcePath":"intro/getting-started/cluster.mdx"}')},x5xN:function(e,t,a){"use strict";a.d(t,"a",(function(){return U}));var n=a("wx14"),r=a("Ff2n"),s=a("q1tI"),o=a.n(s),i=a("8Kt/"),c=a.n(i),l=a("YFqc"),d=a.n(l),p=a("JrEN"),m=a.n(p),b=a("ZrrF"),u=a("0XJD"),h=a("seji"),g=a("ES6J"),N=a("mVx1"),O=a("9UVK"),f=a("l4nd"),j=a("0owL"),v=a("8Bhu"),_=a("gSz6"),y=a("dVIr"),w=a("oySa"),x=a("pdIF"),k=a("VoyU"),S=a("I4gp"),I=a("i+aQ"),C=a("kw+s"),E=["use-cases","who-uses-nomad",{category:"vs",content:["kubernetes","ecs","mesos","terraform"]},{category:"getting-started",content:["running","jobs","cluster","ui","next-steps"]}],J=o.a.createElement,D=[h,g,N,O,f,j,v,_,y,w,x,k,S,I],F=Object(u.a)({product:"nomad"});function U(e){function t(t){var a=t.children,s=Object(r.a)(t,["children"]);return J(F,null,J(m.a,Object(n.a)({},s,{product:"nomad",head:{is:c.a,title:"".concat(e.page_title," | Nomad by HashiCorp"),description:e.description,siteName:"Nomad by HashiCorp"},sidenav:{Link:d.a,category:"intro",currentPage:t.path,data:D,order:E,disableFilter:!0},resourceURL:"https://github.com/hashicorp/nomad/blob/master/website/pages/".concat(e.__resourcePath)}),J(b.SearchProvider,null,J(C.a,null),a)))}return t.getInitialProps=function(e){return{path:e.asPath}},t}}},[["DLeK",0,1,2,4,3,5]]]);