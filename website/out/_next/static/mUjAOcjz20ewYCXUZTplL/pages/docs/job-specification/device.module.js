(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{XXzm:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/job-specification/device",function(){return t("y7ve")}])},y7ve:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return j}));var n,c=t("wx14"),b=t("Ff2n"),s=t("q1tI"),i=t.n(s),p=t("7ljp"),o=t("j1un"),l=(i.a.createElement,n="Placement",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(p.b)("div",e)}),r={},m=Object(o.a)({layout:"docs",page_title:"device Stanza - Job Specification",sidebar_title:"device",description:'The "device" stanza is used to require a certain device be made available\nto the task.',__resourcePath:"docs/job-specification/device.mdx",__scans:{}});function j(e){var{components:a}=e,t=Object(b.a)(e,["components"]);return Object(p.b)(m,Object(c.a)({},r,t,{components:a,mdxType:"MDXLayout"}),Object(p.b)("h1",{className:"g-type-display-2"},Object(p.b)("a",Object(c.a)({parentName:"h1"},{className:"__permalink-h",href:"#device-stanza","aria-label":"device stanza permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h1"},{className:"__target-h",id:"device-stanza","aria-hidden":""})),Object(p.b)("inlineCode",{parentName:"h1"},"device")," Stanza"),Object(p.b)(l,{groups:["job","group","task","resources","device"],mdxType:"Placement"}),Object(p.b)("p",null,"The ",Object(p.b)("inlineCode",{parentName:"p"},"device")," stanza is used to create both a scheduling and runtime requirement\nthat the given task has access to the specified devices. A device is a hardware\ndevice that is attached to the node and may be made available to the task.\nExamples are GPUs, FPGAs, and TPUs."),Object(p.b)("p",null,"When a ",Object(p.b)("inlineCode",{parentName:"p"},"device")," stanza is added, Nomad will schedule the task onto a node that\ncontains the set of device(s) that meet the specified requirements. The ",Object(p.b)("inlineCode",{parentName:"p"},"device")," stanza\nallows the operator to specify as little as just the type of device required,\nsuch as ",Object(p.b)("inlineCode",{parentName:"p"},"gpu"),", all the way to specifying arbitrary constraints and affinities.\nOnce the scheduler has placed the allocation on a suitable node, the Nomad\nClient will invoke the device plugin to retrieve information on how to mount the\ndevice and what environment variables to expose. For more information on the\nruntime environment, please consult the individual device plugin's documentation."),Object(p.b)("p",null,"See the ",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/devices",title:"Nomad Device Plugins"}),"device plugin's documentation")," for a list of supported devices."),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"job ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"docs"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  group ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"example"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    task ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"server"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"resources")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        device ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nvidia/gpu"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"count")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"2"),"\n\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"constraint")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"device",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"attr",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"memory",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"operator"),"  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'">="'),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"value"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"2 GiB"'),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"affinity")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"device",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"attr",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"memory",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"operator"),"  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'">="'),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"value"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"4 GiB"'),"\n            ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"75"),"\n          ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n        ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n      ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("p",null,"In the above example, the task is requesting two GPUs, from the Nvidia vendor,\nbut is not specifying the specific model required. Instead it is placing a hard\nconstraint that the device has at least 2 GiB of memory and that it would prefer\nto use GPUs that have at least 4 GiB. This examples shows how expressive the\n",Object(p.b)("inlineCode",{parentName:"p"},"device")," stanza can be."),Object(p.b)("div",{className:"alert alert-warning g-type-body",role:"alert"},Object(p.b)("p",{parentName:"div"},"Device supported is currently limited to Linux, and container based drivers\ndue to the ability to isolate devices to specific tasks.")),Object(p.b)("h2",{className:"g-type-display-3"},Object(p.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#device-parameters","aria-label":"device parameters permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"device-parameters","aria-hidden":""})),Object(p.b)("inlineCode",{parentName:"h2"},"device")," Parameters"),Object(p.b)("ul",null,Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"name",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#name","aria-label":"name permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"name"))," ",Object(p.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the device required. The following inputs\nare valid:"),Object(p.b)("ul",{parentName:"li"},Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#","aria-label":" permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"<device_type>")),': If a single value is given, it is assumed to be the device\ntype, such as "gpu", or "fpga".')),Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"-1",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#-1","aria-label":" permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"<vendor>/<device_type>")),": If two values are given separated by a ",Object(p.b)("inlineCode",{parentName:"p"},"/"),', the\ngiven device type will be selected, constraining on the provided vendor.\nExamples include "nvidia/gpu" or "amd/gpu".')),Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"-2",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#-2","aria-label":" permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"<vendor>/<device_type>/<model>")),": If three values are given separated by a ",Object(p.b)("inlineCode",{parentName:"p"},"/"),', the\ngiven device type will be selected, constraining on the provided vendor, and\nmodel name. Examples include "nvidia/gpu/1080ti" or "nvidia/gpu/2080ti".')))),Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"count",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#count","aria-label":"count permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"count"))," ",Object(p.b)("inlineCode",{parentName:"p"},"(int: 1)")," - Specifies the number of instances of the given device\nthat are required.")),Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"constraint",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#constraint","aria-label":"constraint permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"constraint"))," ",Object(p.b)("code",null,"(",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/constraint",title:"Nomad constraint Job Specification"}),"Constraint"),": nil)")," - Constraints to restrict\nwhich devices are eligible. This can be provided multiple times to define\nadditional constraints. See below for available attributes.")),Object(p.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(p.b)("a",Object(c.a)({parentName:"li"},{id:"affinity",className:"__target-lic","aria-hidden":""})),Object(p.b)("p",{parentName:"li"},Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"#affinity","aria-label":"affinity permalink",className:"__permalink-lic"}),Object(p.b)("inlineCode",{parentName:"a"},"affinity"))," ",Object(p.b)("code",null,"(",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/affinity",title:"Nomad affinity Job Specification"}),"Affinity"),": nil)")," - Affinity to specify a preference\nfor which devices get selected. This can be provided multiple times to define\nadditional affinities. See below for available attributes."))),Object(p.b)("h2",{className:"g-type-display-3"},Object(p.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#device-constraint-and-affinity-attributes","aria-label":"device constraint and affinity attributes permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"device-constraint-and-affinity-attributes","aria-hidden":""})),Object(p.b)("inlineCode",{parentName:"h2"},"device")," Constraint and Affinity Attributes"),Object(p.b)("p",null,"The set of attributes available for use in a ",Object(p.b)("inlineCode",{parentName:"p"},"constraint")," or ",Object(p.b)("inlineCode",{parentName:"p"},"affinity")," are as\nfollows:"),Object(p.b)("table",null,Object(p.b)("thead",null,Object(p.b)("tr",null,Object(p.b)("th",null,"Variable"),Object(p.b)("th",null,"Description"),Object(p.b)("th",null,"Example Value"))),Object(p.b)("tbody",null,Object(p.b)("tr",null,Object(p.b)("td",null,Object(p.b)("code",null,"${device.type}")),Object(p.b)("td",null,"The type of device"),Object(p.b)("td",null,Object(p.b)("code",null,'"gpu", "tpu", "fpga"'))),Object(p.b)("tr",null,Object(p.b)("td",null,Object(p.b)("code",null,"${device.vendor}")),Object(p.b)("td",null,"The device's vendor"),Object(p.b)("td",null,Object(p.b)("code",null,'"amd", "nvidia", "intel"'))),Object(p.b)("tr",null,Object(p.b)("td",null,Object(p.b)("code",null,"${device.model}")),Object(p.b)("td",null,"The device's model"),Object(p.b)("td",null,Object(p.b)("code",null,'"1080ti"'))),Object(p.b)("tr",null,Object(p.b)("td",null,Object(p.b)("code",null,"$","{","device.attr.<property>","}")),Object(p.b)("td",null,"Property of the device"),Object(p.b)("td",null,Object(p.b)("code",null,"${device.attr.memory} => 8 GiB"))))),Object(p.b)("p",null,"For the set of attributes available, please see the individual ",Object(p.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/devices",title:"Nomad Device Plugins"}),"device plugin's\ndocumentation"),"."),Object(p.b)("h3",{className:"g-type-display-4"},Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#attribute-units-and-conversions","aria-label":"attribute units and conversions permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"attribute-units-and-conversions","aria-hidden":""})),"Attribute Units and Conversions"),Object(p.b)("p",null,'Devices report their attributes with strict types and can also provide unit\ninformation. For example, when a GPU is reporting its memory, it can report that\nit is "4096 MiB". Since Nomad has the associated unit information, a constraint\nthat requires greater than "3.5 GiB" can match since Nomad can convert between\nthese units.'),Object(p.b)("p",null,"The units Nomad supports is as follows:"),Object(p.b)("table",null,Object(p.b)("thead",null,Object(p.b)("tr",null,Object(p.b)("th",null,"Base Unit"),Object(p.b)("th",null,"Values"))),Object(p.b)("tbody",null,Object(p.b)("tr",null,Object(p.b)("td",null,Object(p.b)("code",null,"Byte")),Object(p.b)("td",null,Object(p.b)("code",null,Object(p.b)("strong",null,"Base 2"),": KiB, MiB, GiB, TiB, PiB, EiB"),Object(p.b)("br",null),Object(p.b)("code",null,Object(p.b)("strong",null,"Base 10"),": kB, KB (equivalent to kB), MB, GB, TB, PB, EB"))),Object(p.b)("tr",null,Object(p.b)("td",null,Object(p.b)("code",null,"Byte Rates")),Object(p.b)("td",null,Object(p.b)("code",null,Object(p.b)("strong",null,"Base 2"),": KiB/s, MiB/s, GiB/s, TiB/s, PiB/s, EiB/s"),Object(p.b)("br",null),Object(p.b)("code",null,Object(p.b)("strong",null,"Base 10"),": kB/s, KB/s (equivalent to kB/s), MB/s, GB/s, TB/s, PB/s,EB/s"))),Object(p.b)("tr",null,Object(p.b)("td",null,Object(p.b)("code",null,"Hertz")),Object(p.b)("td",null,Object(p.b)("code",null,"MHz, GHz"))),Object(p.b)("tr",null,Object(p.b)("td",null,Object(p.b)("code",null,"Watts")),Object(p.b)("td",null,Object(p.b)("code",null,"mW, W, kW, MW, GW"))))),Object(p.b)("p",null,"Conversion is only possible within the same base unit."),Object(p.b)("h2",{className:"g-type-display-3"},Object(p.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#device-examples","aria-label":"device examples permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"device-examples","aria-hidden":""})),Object(p.b)("inlineCode",{parentName:"h2"},"device")," Examples"),Object(p.b)("p",null,"The following examples only show the ",Object(p.b)("inlineCode",{parentName:"p"},"device")," stanzas. Remember that the\n",Object(p.b)("inlineCode",{parentName:"p"},"device")," stanza is only valid in the placements listed above."),Object(p.b)("h3",{className:"g-type-display-4"},Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#single-nvidia-gpu","aria-label":"single nvidia gpu permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"single-nvidia-gpu","aria-hidden":""})),"Single Nvidia GPU"),Object(p.b)("p",null,"This example schedules a task with a single Nvidia GPU made available."),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"device ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nvidia/gpu"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("h3",{className:"g-type-display-4"},Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#multiple-nvidia-gpu","aria-label":"multiple nvidia gpu permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"multiple-nvidia-gpu","aria-hidden":""})),"Multiple Nvidia GPU"),Object(p.b)("p",null,"This example schedules a task with a two Nvidia GPU made available."),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"device ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nvidia/gpu"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"count")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"2"),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("h3",{className:"g-type-display-4"},Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#single-nvidia-gpu-with-specific-model","aria-label":"single nvidia gpu with specific model permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"single-nvidia-gpu-with-specific-model","aria-hidden":""})),"Single Nvidia GPU with Specific Model"),Object(p.b)("p",null,"This example schedules a task with a single Nvidia GPU made available and uses\nthe name to specify the exact model to be used."),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"device ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nvidia/gpu/1080ti"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("p",null,"This is a simplification of the following:"),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"device ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"gpu"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"count")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"1"),"\n\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"constraint")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"device",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"vendor",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"value"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nvidia"'),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"constraint")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"device",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"model",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"value"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"1080ti"'),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("h3",{className:"g-type-display-4"},Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#affinity-with-unit-conversion","aria-label":"affinity with unit conversion permalink"}),"\xbb"),Object(p.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"affinity-with-unit-conversion","aria-hidden":""})),"Affinity with Unit Conversion"),Object(p.b)("p",null,"This example uses an affinity to tell the scheduler it would prefer if the GPU\nhad at least 1.5 GiB of memory. The following are both equivalent as Nomad can\ndo unit conversions."),Object(p.b)("p",null,"Specified in ",Object(p.b)("inlineCode",{parentName:"p"},"GiB"),":"),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"device ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nvidia/gpu"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"affinity")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"device",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"attr",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"memory",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"operator"),"  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'">="'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"value"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"1.5 GiB"'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"75"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(p.b)("p",null,"Specified in ",Object(p.b)("inlineCode",{parentName:"p"},"MiB"),":"),Object(p.b)("pre",{className:"language-hcl"},Object(p.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"device ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nvidia/gpu"')," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"affinity")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"device",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"attr",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"memory",Object(p.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"operator"),"  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'">="'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"value"),"     ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"1500 MiB"'),"\n    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"75"),"\n  ",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")))}j.isMDXComponent=!0}},[["XXzm",0,1,2,4,3,5,6]]]);