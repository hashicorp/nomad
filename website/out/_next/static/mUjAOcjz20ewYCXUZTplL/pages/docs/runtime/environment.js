(window.webpackJsonp=window.webpackJsonp||[]).push([[262],{"0CJ4":function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return m}));var n=a("wx14"),r=a("Ff2n"),b=a("q1tI"),o=a.n(b),c=a("7ljp"),i=a("j1un"),s=(o.a.createElement,{}),d=Object(i.a)({layout:"docs",page_title:"Environment - Runtime",sidebar_title:"Runtime Environment",description:"Learn how to configure the Nomad runtime environment.",__resourcePath:"docs/runtime/environment.mdx",__scans:{}});function m(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)(d,Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{className:"g-type-display-2"},Object(c.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#runtime-environment","aria-label":"runtime environment permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"runtime-environment","aria-hidden":""})),"Runtime Environment"),Object(c.b)("p",null,"Some settings you specify in your ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/job-specification",title:"Nomad Job Specification"}),"job specification")," are passed\nto tasks when they start. Other settings are dynamically allocated when your job\nis scheduled. Both types of values are made available to your job through\nenvironment variables."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#summary","aria-label":"summary permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"summary","aria-hidden":""})),"Summary"),Object(c.b)("table",null,"\n  ",Object(c.b)("thead",{parentName:"table"},"\n    ",Object(c.b)("tr",{parentName:"thead"},"\n      ",Object(c.b)("th",{parentName:"tr"},"Variable"),"\n      ",Object(c.b)("th",{parentName:"tr"},"Description"),"\n    "),"\n  "),"\n  ",Object(c.b)("tbody",{parentName:"table"},"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_ALLOC_DIR"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        The path to the shared ",Object(c.b)("code",{parentName:"td"},"alloc/")," directory. See\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/runtime/environment#task-directories"}),"\n          here for more\n        ")," information.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_TASK_DIR"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        The path to the task ",Object(c.b)("code",{parentName:"td"},"local/")," directory. See\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/runtime/environment#task-directories"}),"here")," for more information.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_SECRETS_DIR"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Path to the task\u2018s secrets directory. See\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/runtime/environment#task-directories"}),"here")," for more information.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_MEMORY_LIMIT"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Memory limit in MB for the task"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_CPU_LIMIT"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"CPU limit in MHz for the task"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_ALLOC_ID"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Allocation ID of the task"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_ALLOC_NAME"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Allocation name of the task"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_ALLOC_INDEX"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Allocation index; useful to distinguish instances of task groups. From 0\n        to (count - 1). The index is unique within a given version of a job, but\n        canaries or failed tasks in a deployment may reuse the index.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_TASK_NAME"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Task\u2018s name"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_GROUP_NAME"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Group\u2018s name"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_JOB_NAME"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Job\u2018s name"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_DC"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Datacenter in which the allocation is running"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_NAMESPACE"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Namespace in which the allocation is running"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_REGION"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"Region in which the allocation is running"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_META_<key>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        The metadata value given by ",Object(c.b)("code",{parentName:"td"},"key")," on the task\u2018s\n        metadata. Note that this is different from\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/runtime/interpolation#node-variables-"}),"\n          ",Object(c.b)("code",{parentName:"a"},"${meta.<key>}"),"\n        "),"\n        which are keys in the node\u2018s metadata.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"VAULT_TOKEN"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        The task\u2018s Vault token. See\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/vault-integration"}),"Vault Integration"),"\n        for more details\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("th",Object(n.a)({parentName:"tr"},{colSpan:"2"}),"Network-related Variables"),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_IP_<label>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Host IP for the given port ",Object(c.b)("code",{parentName:"td"},"label"),". See\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/job-specification/network"}),"here for more")," information.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_PORT_<label>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Port for the given port ",Object(c.b)("code",{parentName:"td"},"label"),". Driver-specified port when a\n        port map is used, otherwise the host\u2018s static or dynamic port\n        allocation. Services should bind to this port. See\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/job-specification/network"}),"here for more")," information.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_ADDR_<label>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Host ",Object(c.b)("code",{parentName:"td"},"IP:Port")," pair for the given port ",Object(c.b)("code",{parentName:"td"},"label"),".\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_HOST_PORT_<label>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Port on the host for the port ",Object(c.b)("code",{parentName:"td"},"label"),". See\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/job-specification/network#mapped-ports"}),"here")," for more\n        information.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_IP_<task>_<label>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Host IP for the given port ",Object(c.b)("code",{parentName:"td"},"label")," and ",Object(c.b)("code",{parentName:"td"},"task")," for\n        tasks in the same task group.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_PORT_<task>_<label>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Port for the given port ",Object(c.b)("code",{parentName:"td"},"label")," and ",Object(c.b)("code",{parentName:"td"},"task")," for\n        tasks in the same task group. Driver-specified port when a port map is\n        used, otherwise the host\u2018s static or dynamic port allocation.\n        Services should bind to this port.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_ADDR_<task>_<label>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Host ",Object(c.b)("code",{parentName:"td"},"IP:Port")," pair for the given port ",Object(c.b)("code",{parentName:"td"},"label")," and\n        ",Object(c.b)("code",{parentName:"td"},"task")," for tasks in the same task group.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_HOST_PORT_<task>_<label>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Port on the host for the port ",Object(c.b)("code",{parentName:"td"},"label")," and ",Object(c.b)("code",{parentName:"td"},"task"),"\n        for tasks in the same task group.\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_UPSTREAM_IP_<service>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        IP for the given ",Object(c.b)("code",{parentName:"td"},"service")," when defined as a Consul Connect\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/job-specification/upstreams"}),"upstream"),".\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_UPSTREAM_PORT_<service>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Port for the given ",Object(c.b)("code",{parentName:"td"},"service")," when defined as a Consul Connect\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/job-specification/upstreams"}),"upstream"),".\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_UPSTREAM_ADDR_<service>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Host ",Object(c.b)("code",{parentName:"td"},"IP:Port")," for the given ",Object(c.b)("code",{parentName:"td"},"service")," when\n        defined as a Consul Connect\n        ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/job-specification/upstreams"}),"upstream"),".\n      "),"\n    "),"\n    ",Object(c.b)("tr",{parentName:"tbody"},"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        ",Object(c.b)("code",{parentName:"td"},"NOMAD_ENVOY_ADMIN_ADDR_<service>"),"\n      "),"\n      ",Object(c.b)("td",{parentName:"tr"},"\n        Local address ",Object(c.b)("code",{parentName:"td"},"localhost:Port")," for the admin port of the\n        envoy sidecar for the given ",Object(c.b)("code",{parentName:"td"},"service")," when defined as a\n        Consul Connect enabled service.\n      "),"\n    "),"\n  ")),Object(c.b)("div",{className:"alert alert-warning g-type-body",role:"alert"},Object(c.b)("p",{parentName:"div"},"Port labels and task names will have any non-alphanumeric or underscore\ncharacters in their names replaced by underscores ",Object(c.b)("inlineCode",{parentName:"p"},"_")," when they're used in\nenvironment variable names such as ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_ADDR_<task>_<label>"),".")),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#task-identifiers","aria-label":"task identifiers permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"task-identifiers","aria-hidden":""})),"Task Identifiers"),Object(c.b)("p",null,"Nomad will pass both the allocation ID and name as well as the task, group and\njob's names. These are given as ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_ALLOC_ID"),", ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_ALLOC_NAME"),",\n",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_ALLOC_INDEX"),", ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_JOB_NAME"),", ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_GROUP_NAME")," and ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_TASK_NAME"),".\nThe allocation ID and index can be useful when the task being run needs a unique\nidentifier or to know its instance count."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#resources","aria-label":"resources permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"resources","aria-hidden":""})),"Resources"),Object(c.b)("p",null,"When you request resources for a job, Nomad creates a resource offer. The final\nresources for your job are not determined until it is scheduled. Nomad will\ntell you which resources have been allocated after evaluation and placement."),Object(c.b)("h3",{className:"g-type-display-4"},Object(c.b)("a",Object(n.a)({parentName:"h3"},{className:"__permalink-h",href:"#cpu-and-memory","aria-label":"cpu and memory permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h3"},{className:"__target-h",id:"cpu-and-memory","aria-hidden":""})),"CPU and Memory"),Object(c.b)("p",null,"Nomad will pass CPU and memory limits to your job as ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_CPU_LIMIT")," and\n",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_MEMORY_LIMIT"),". Your task should use these values to adapt its behavior to\nfit inside the resource allocation that nomad provides. For example, you can use\nthe memory limit to inform how large your in-process cache should be, or to\ndecide when to flush buffers to disk."),Object(c.b)("p",null,"Both CPU and memory are presented as integers. The unit for CPU limit is\n",Object(c.b)("inlineCode",{parentName:"p"},"1024 = 1GHz"),". The unit for memory is ",Object(c.b)("inlineCode",{parentName:"p"},"1 = 1 megabyte"),"."),Object(c.b)("p",null,"Writing your applications to adjust to these values at runtime provides greater\nscheduling flexibility since you can adjust the resource allocations in your\njob specification without needing to change your code. You can also schedule workloads\nthat accept dynamic resource allocations so they can scale down/up as your\ncluster gets more or less busy."),Object(c.b)("h3",{className:"g-type-display-4"},Object(c.b)("a",Object(n.a)({parentName:"h3"},{className:"__permalink-h",href:"#networking","aria-label":"networking permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h3"},{className:"__target-h",id:"networking","aria-hidden":""})),"Networking"),Object(c.b)("p",null,"Nomad assigns IPs and ports to your jobs and exposes them via environment\nvariables. See the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/job-specification/network"}),"Networking")," page for more\ndetails."),Object(c.b)("h3",{className:"g-type-display-4"},Object(c.b)("a",Object(n.a)({parentName:"h3"},{className:"__permalink-h",href:"#task-directories","aria-label":"task directories permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h3"},{className:"__target-h",id:"task-directories","aria-hidden":""})),"Task Directories"),Object(c.b)("p",null,"Nomad makes the following directories available to tasks:"),Object(c.b)("ul",null,Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"alloc",className:"__target-lic","aria-hidden":""})),Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"#alloc","aria-label":"alloc permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"alloc/")),": This directory is shared across all tasks in a task group and can be\nused to store data that needs to be used by multiple tasks, such as a log\nshipper."),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"local",className:"__target-lic","aria-hidden":""})),Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"#local","aria-label":"local permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"local/")),": This directory is private to each task. It can be used to store\narbitrary data that should not be shared by tasks in the task group."),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(c.b)("a",Object(n.a)({parentName:"li"},{id:"secrets",className:"__target-lic","aria-hidden":""})),Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"#secrets","aria-label":"secrets permalink",className:"__permalink-lic"}),Object(c.b)("inlineCode",{parentName:"a"},"secrets/")),": This directory is private to each task, not accessible via the\n",Object(c.b)("inlineCode",{parentName:"li"},"nomad alloc fs")," command or filesystem APIs and where possible backed by an\nin-memory filesystem. It can be used to store secret data that should not be\nvisible outside the task.")),Object(c.b)("p",null,"These directories are persisted until the allocation is removed, which occurs\nhours after all the tasks in the task group enter terminal states. This gives\ntime to view the data produced by tasks."),Object(c.b)("p",null,"Depending on the driver and operating system being targeted, the directories are\nmade available in various ways. For example, on ",Object(c.b)("inlineCode",{parentName:"p"},"docker")," the directories are\nbound to the container, while on ",Object(c.b)("inlineCode",{parentName:"p"},"exec")," on Linux the directories are mounted into the\nchroot. Regardless of how the directories are made available, the path to the\ndirectories can be read through the ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_ALLOC_DIR"),", ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_TASK_DIR"),", and\n",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_SECRETS_DIR")," environment variables."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#meta","aria-label":"meta permalink"}),"\xbb"),Object(c.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"meta","aria-hidden":""})),"Meta"),Object(c.b)("p",null,"The job specification also allows you to specify a ",Object(c.b)("inlineCode",{parentName:"p"},"meta")," block to supply arbitrary\nconfiguration to a task. This allows you to easily provide job-specific\nconfiguration even if you use the same executable unit in multiple jobs. These\nkey-value pairs are passed through to the job as ",Object(c.b)("inlineCode",{parentName:"p"},"NOMAD_META_<key>=<value>"),"\nenvironment variables. Prior to Nomad 0.5.5 the key was uppercased and since\nthen both the original case and an uppercased version are injected. The\nuppercased version will be deprecated in a future release."),Object(c.b)("p",null,"Currently there is no enforcement that the meta keys be lowercase, but using\nmultiple keys with the same uppercased representation will lead to undefined\nbehavior."))}m.isMDXComponent=!0},ZOW6:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/runtime/environment",function(){return a("0CJ4")}])}},[["ZOW6",0,1,2,4,3,5,6]]]);