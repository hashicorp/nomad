{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
~}}

{{page-title "Jobs"}}
<section class="section">
    <Hds::PageHeader id="jobs-list-header" as |PH|>
      <PH.Actions id="jobs-list-actions">

        <Hds::SegmentedGroup as |S|>

          <JobSearchBox
            @searchText={{this.searchText}}
            @onSearchTextChange={{queue
              this.updateSearchText
              this.updateFilter
            }}
            @S={{S}}
          />

          {{#each this.filterFacets as |group|}}
            <S.Dropdown data-test-facet={{group.label}} as |dd|>
              <dd.ToggleButton
                @text={{group.label}}
                @color="secondary"
                @count={{get (filter-by "checked" true group.options) "length"}}
              />
              {{#each group.options as |option|}}
                <dd.Checkbox
                  {{on "change" (fn this.toggleOption option)}}
                  @value={{option.key}}
                  checked={{option.checked}}
                  data-test-dropdown-option={{option.key}}
                >
                  {{option.key}}
                </dd.Checkbox>
              {{else}}
                <dd.Generic data-test-dropdown-empty>
                  No {{group.label}} filters
                </dd.Generic>
              {{/each}}
            </S.Dropdown>
          {{/each}}

          {{#if this.system.shouldShowNamespaces}}
            <S.Dropdown data-test-facet="Namespace" as |dd|>
              <dd.ToggleButton
                @text="Namespace"
                @color="secondary"
                @badge={{get (find-by "checked" true this.namespaceFacet.options) "label"}}
              />
              {{#each this.namespaceFacet.options as |option|}}
                <dd.Radio
                  name={{option.key}}
                  {{on "change" (fn this.toggleNamespaceOption option dd)}}
                  @value={{option.key}}
                  checked={{option.checked}}
                  data-test-dropdown-option={{option.key}}
                >
                  {{option.label}}
                </dd.Radio>
              {{/each}}
            </S.Dropdown>
          {{/if}}

          {{#if this.filter}}
            <S.Button
              @text="Reset Filters"
              @color="critical"
              @icon="delete"
              @size="medium"
              {{on "click" (action this.resetFilters)}}
            />
          {{/if}}

        </Hds::SegmentedGroup>

        {{#if this.pendingJobIDDiff}}
          <Hds::Button
            @size="medium"
            @text="Updates Pending"
            @color="primary"
            @icon="sync"
            {{on "click" (perform this.updateJobList)}}
            data-test-updates-pending-button
          />
        {{/if}}

        <div
          {{keyboard-shortcut
            label="Run Job"
            pattern=(array "r" "u" "n")
            action=(action this.goToRun)
          }}
        >
          <Hds::Button
            data-test-run-job
            @text="Run Job"
            disabled={{not (can "run job")}}
            title={{if (can "run job") null "You donâ€™t have permission to run jobs"}}
            @route="jobs.run"
            @query={{hash namespace=this.qpNamespace}}
          />
        </div>

      </PH.Actions>
    </Hds::PageHeader>

    {{#if this.isForbidden}}
      <ForbiddenMessage />
    {{else if this.jobs.length}}
      <Hds::Table
        @model={{this.jobs}}
        @columns={{this.tableColumns}}
        @valign="middle"
      >
        <:body as |B|>
        {{!-- TODO: use <JobRow> --}}
          <B.Tr
            {{keyboard-shortcut
              enumerated=true
              action=(action "gotoJob" B.data)
            }}
            {{on "click" (action this.gotoJob B.data)}}
            class="job-row is-interactive {{if B.data.assumeGC "assume-gc"}}"
            data-test-job-row={{B.data.plainId}}
            data-test-modify-index={{B.data.modifyIndex}}
          >
            {{!-- {{#each this.tableColumns as |column|}}
              <B.Td>{{get B.data (lowercase column.label)}}</B.Td>
            {{/each}} --}}
            <B.Td data-test-job-name>
              {{#if B.data.assumeGC}}
                {{B.data.name}}
              {{else}}
              <LinkTo
                @route="jobs.job.index"
                @model={{B.data.idWithNamespace}}
                class="is-primary"
              >
                {{B.data.name}}
                {{!-- TODO: going to lose .meta with statuses endpoint! --}}
                {{#if B.data.meta.structured.pack}}
                  <span data-test-pack-tag class="tag is-pack">
                    {{x-icon "box" class= "test"}}
                    <span>Pack</span>
                  </span>
                {{/if}}
              </LinkTo>
              {{/if}}
            </B.Td>
            {{#if this.system.shouldShowNamespaces}}
              <B.Td data-test-job-namespace>{{B.data.namespace.id}}</B.Td>
            {{/if}}
            <B.Td data-test-job-status>
              {{#unless B.data.childStatuses}}
                <Hds::Badge @text="{{capitalize B.data.aggregateAllocStatus.label}}" @color={{B.data.aggregateAllocStatus.state}} @size="large" />
              {{/unless}}
            </B.Td>
            <B.Td data-test-job-type={{B.data.type}}>
              {{B.data.type}}
            </B.Td>
            {{#if this.system.shouldShowNodepools}}
              <B.Td data-test-job-node-pool>{{B.data.nodePool}}</B.Td>
            {{/if}}
            <B.Td>
              <div class="job-status-panel compact">
                {{#unless B.data.assumeGC}}
                  {{#if B.data.childStatuses}}
                    {{B.data.childStatuses.length}} child jobs;<br />
                    {{#each-in B.data.childStatusBreakdown as |status count|}}
                      {{count}} {{status}}<br />
                    {{/each-in}}
                  {{else}}
                    <JobStatus::AllocationStatusRow
                      @allocBlocks={{B.data.allocBlocks}}
                      @steady={{true}}
                      @compact={{true}}
                      @runningAllocs={{B.data.allocBlocks.running.healthy.nonCanary.length}}
                      @groupCountSum={{B.data.expectedRunningAllocCount}}
                    />
                  {{/if}}
                {{/unless}}
              </div>
            </B.Td>
          </B.Tr>
        </:body>
      </Hds::Table>

      <section id="jobs-list-pagination">
        <div class="nav-buttons">
          <span {{keyboard-shortcut
            label="First Page"
            pattern=(array "{" "{")
            action=(action this.handlePageChange "first")}}
          >
            <Hds::Button
              @text="First"
              @color="tertiary"
              @size="small"
              @icon="chevrons-left"
              @iconPosition="leading"
              disabled={{not this.cursorAt}}
              data-test-pager="first"
              {{on "click" (action this.handlePageChange "first")}}
            />
          </span>
          <span {{keyboard-shortcut
            label="Previous Page"
            pattern=(array "[" "[")
            action=(action this.handlePageChange "prev")}}
          >
            <Hds::Button
              @text="Previous"
              @color="tertiary"
              @size="small"
              @icon="chevron-left"
              @iconPosition="leading"
              disabled={{not this.cursorAt}}
              data-test-pager="previous"
              {{on "click" (action this.handlePageChange "prev")}}
            />
          </span>
          <span {{keyboard-shortcut
            label="Next Page"
            pattern=(array "]" "]")
            action=(action this.handlePageChange "next")}}
          >
            <Hds::Button
              @text="Next"
              @color="tertiary"
              @size="small"
              @icon="chevron-right"
              @iconPosition="trailing"
              disabled={{not this.nextToken}}
              data-test-pager="next"
              {{on "click" (action this.handlePageChange "next")}}
            />
          </span>
          <span {{keyboard-shortcut
            label="Last Page"
            pattern=(array "}" "}")
            action=(action this.handlePageChange "last")}}
          >
            <Hds::Button
              @text="Last"
              @color="tertiary"
              @icon="chevrons-right"
              @iconPosition="trailing"
              @size="small"
              disabled={{not this.nextToken}}
              data-test-pager="last"
              {{on "click" (action this.handlePageChange "last")}}
            />
          </span>
        </div>
        <div class="page-size">
          <PageSizeSelect @onChange={{this.handlePageSizeChange}} />
        </div>
      </section>
    {{else}}
      <Hds::ApplicationState data-test-empty-jobs-list as |A|>
        {{#if this.filter}}
          <A.Header data-test-empty-jobs-list-headline @title="No Matches" />
          <A.Body
            @text="No jobs match your current filter selection."
          />
        <A.Footer @hasDivider={{true}}>
          <Hds::Button
            @text="Reset Filters"
            @color="tertiary"
            @icon="arrow-left"
            @size="small"
            {{on "click" (action this.resetFilters)}}
          />

          {{!-- TODO: HDS4.0, convert to F.LinkStandalone --}}
          <Hds::Link::Standalone @icon="plus" @text="Run a New Job" @route="jobs.run" 
            @iconPosition="trailing" />
        </A.Footer>
        {{else}}
          <A.Header data-test-empty-jobs-list-headline @title="No Jobs" />
          <A.Body
            @text="No jobs found."
          />
          <A.Footer @hasDivider={{true}}>
            {{!-- TODO: HDS4.0, convert to F.LinkStandalone --}}
            <Hds::Link::Standalone @icon="plus" @text="Run a New Job" @route="jobs.run" 
              @iconPosition="trailing" />
          </A.Footer>
        {{/if}}
      </Hds::ApplicationState>
    {{/if}}
</section>
