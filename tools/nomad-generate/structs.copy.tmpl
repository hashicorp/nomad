// Code generated by nomad-generate DO NOT EDIT

package {{ .Package }}

import (
       "github.com/hashicorp/nomad/helper"
)

{{ range $targetType := .Targets -}}
{{ if $targetType.IsCopy -}}
{{ $old := $targetType.Abbr }}

func ({{$old}} *{{$targetType.Name}}) Copy() *{{$targetType.Name}} {
	if {{ $old }} == nil {
		return nil
	}
	xx := new({{$targetType.Name}})
	*xx = *{{$old}}

{{- range $field := .Fields -}}
    {{ $nf := printf "xx.%s" $field.Name }}
    {{ $of := printf "%s.%s" $old $field.Name }}
    {{- if $field.IsPointer }}
      {{ $nf }} = {{ $of }}.Copy()
    {{- end}}

    {{- if $field.IsStruct }}
      {{ if $field.IsCopy }}
        {{ $nf }} = {{ $of }}.Copy()
      {{ else }}
        if {{ $of }} == nil {
            {{ $nf }} = nil
        } else {
            {{ $nf }} = new({{$field.TypeName}})
            *{{ $nf }} = *{{ $of }}
        }
      {{- end}}

    {{- else if $field.IsMap }}
      {{ if $field.ValueType.IsCopy }}
      {{ $nf }} = map[{{$field.KeyType.TypeName}}]{{$field.ValueType.TypeName}}{}
        for k, v := range {{ $of }} {
            {{ $nf }}[k] = v.Copy()
        }
      {{ else if and (eq $field.KeyType.TypeName "string") (eq $field.ValueType.TypeName "string") }}
        {{ $nf }} = helper.CopyMapStringString({{ $of }})
      {{ else if and (eq $field.KeyType.Kind "string") (eq $field.ValueType "int") }}
        {{ $nf }} = helper.CopyMapStringInt({{ $of }})
      {{ else if (and (eq $field.KeyType.Kind "string") (eq $field.ValueType "float64") )}}
        {{ $nf }} = helper.CopyMapStringFloat64({{ $of }})
      {{ else }}
        {{ $nf }} = map[{{$field.KeyType.TypeName}}]{{$field.ValueType.TypeName}}{}
        for k, v := range {{ $of }} {
            {{ $nf }}[k] = v
        }
      {{- end }}
    {{- else if $field.IsArray }}
      {{ if and $field.ValueType $field.ValueType.IsCopy }}
        {{ $nf }} = make([]{{$field.ValueType.TypeName}}, len({{ $of }}))
        for _, v := range {{ $of }} {
            {{ $nf }} = append({{ $nf }}, v.Copy())
        }
      {{ else if eq $field.ValueType.TypeName "string" }}
        {{ $nf }} = helper.CopySliceString({{ $of }})
      {{ else if eq $field.ValueType.TypeName "int" }}
        {{ $nf }} = helper.CopySliceInt({{ $of }})
      {{ else }}
        {{ $nf }} = make([]{{$field.ValueType.TypeName}}, len({{ $of }}))
        for _, v := range {{ $of }} {
            {{ $nf }} = append({{ $nf }}, v)
        }
      {{- end}}
    {{- end}}
{{- end }}
	return xx
}
{{- end}}
{{- end}}
