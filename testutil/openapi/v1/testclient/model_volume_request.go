/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// VolumeRequest struct for VolumeRequest
type VolumeRequest struct {
	AccessMode *string `json:"AccessMode,omitempty"`
	AttachmentMode *string `json:"AttachmentMode,omitempty"`
	MountOptions *CSIMountOptions `json:"MountOptions,omitempty"`
	Name *string `json:"Name,omitempty"`
	PerAlloc *bool `json:"PerAlloc,omitempty"`
	ReadOnly *bool `json:"ReadOnly,omitempty"`
	Source *string `json:"Source,omitempty"`
	Type *string `json:"Type,omitempty"`
}

// NewVolumeRequest instantiates a new VolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeRequest() *VolumeRequest {
	this := VolumeRequest{}
	return &this
}

// NewVolumeRequestWithDefaults instantiates a new VolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeRequestWithDefaults() *VolumeRequest {
	this := VolumeRequest{}
	return &this
}

// GetAccessMode returns the AccessMode field value if set, zero value otherwise.
func (o *VolumeRequest) GetAccessMode() string {
	if o == nil || o.AccessMode == nil {
		var ret string
		return ret
	}
	return *o.AccessMode
}

// GetAccessModeOk returns a tuple with the AccessMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeRequest) GetAccessModeOk() (*string, bool) {
	if o == nil || o.AccessMode == nil {
		return nil, false
	}
	return o.AccessMode, true
}

// HasAccessMode returns a boolean if a field has been set.
func (o *VolumeRequest) HasAccessMode() bool {
	if o != nil && o.AccessMode != nil {
		return true
	}

	return false
}

// SetAccessMode gets a reference to the given string and assigns it to the AccessMode field.
func (o *VolumeRequest) SetAccessMode(v string) {
	o.AccessMode = &v
}

// GetAttachmentMode returns the AttachmentMode field value if set, zero value otherwise.
func (o *VolumeRequest) GetAttachmentMode() string {
	if o == nil || o.AttachmentMode == nil {
		var ret string
		return ret
	}
	return *o.AttachmentMode
}

// GetAttachmentModeOk returns a tuple with the AttachmentMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeRequest) GetAttachmentModeOk() (*string, bool) {
	if o == nil || o.AttachmentMode == nil {
		return nil, false
	}
	return o.AttachmentMode, true
}

// HasAttachmentMode returns a boolean if a field has been set.
func (o *VolumeRequest) HasAttachmentMode() bool {
	if o != nil && o.AttachmentMode != nil {
		return true
	}

	return false
}

// SetAttachmentMode gets a reference to the given string and assigns it to the AttachmentMode field.
func (o *VolumeRequest) SetAttachmentMode(v string) {
	o.AttachmentMode = &v
}

// GetMountOptions returns the MountOptions field value if set, zero value otherwise.
func (o *VolumeRequest) GetMountOptions() CSIMountOptions {
	if o == nil || o.MountOptions == nil {
		var ret CSIMountOptions
		return ret
	}
	return *o.MountOptions
}

// GetMountOptionsOk returns a tuple with the MountOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeRequest) GetMountOptionsOk() (*CSIMountOptions, bool) {
	if o == nil || o.MountOptions == nil {
		return nil, false
	}
	return o.MountOptions, true
}

// HasMountOptions returns a boolean if a field has been set.
func (o *VolumeRequest) HasMountOptions() bool {
	if o != nil && o.MountOptions != nil {
		return true
	}

	return false
}

// SetMountOptions gets a reference to the given CSIMountOptions and assigns it to the MountOptions field.
func (o *VolumeRequest) SetMountOptions(v CSIMountOptions) {
	o.MountOptions = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeRequest) SetName(v string) {
	o.Name = &v
}

// GetPerAlloc returns the PerAlloc field value if set, zero value otherwise.
func (o *VolumeRequest) GetPerAlloc() bool {
	if o == nil || o.PerAlloc == nil {
		var ret bool
		return ret
	}
	return *o.PerAlloc
}

// GetPerAllocOk returns a tuple with the PerAlloc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeRequest) GetPerAllocOk() (*bool, bool) {
	if o == nil || o.PerAlloc == nil {
		return nil, false
	}
	return o.PerAlloc, true
}

// HasPerAlloc returns a boolean if a field has been set.
func (o *VolumeRequest) HasPerAlloc() bool {
	if o != nil && o.PerAlloc != nil {
		return true
	}

	return false
}

// SetPerAlloc gets a reference to the given bool and assigns it to the PerAlloc field.
func (o *VolumeRequest) SetPerAlloc(v bool) {
	o.PerAlloc = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *VolumeRequest) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeRequest) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *VolumeRequest) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *VolumeRequest) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *VolumeRequest) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeRequest) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *VolumeRequest) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *VolumeRequest) SetSource(v string) {
	o.Source = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VolumeRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VolumeRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VolumeRequest) SetType(v string) {
	o.Type = &v
}

func (o VolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessMode != nil {
		toSerialize["AccessMode"] = o.AccessMode
	}
	if o.AttachmentMode != nil {
		toSerialize["AttachmentMode"] = o.AttachmentMode
	}
	if o.MountOptions != nil {
		toSerialize["MountOptions"] = o.MountOptions
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.PerAlloc != nil {
		toSerialize["PerAlloc"] = o.PerAlloc
	}
	if o.ReadOnly != nil {
		toSerialize["ReadOnly"] = o.ReadOnly
	}
	if o.Source != nil {
		toSerialize["Source"] = o.Source
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableVolumeRequest struct {
	value *VolumeRequest
	isSet bool
}

func (v NullableVolumeRequest) Get() *VolumeRequest {
	return v.value
}

func (v *NullableVolumeRequest) Set(val *VolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeRequest(val *VolumeRequest) *NullableVolumeRequest {
	return &NullableVolumeRequest{value: val, isSet: true}
}

func (v NullableVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


