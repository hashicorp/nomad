(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{AXmB:function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/commands/node/drain",function(){return n("Bb+a")}])},"Bb+a":function(e,a,n){"use strict";n.r(a),n.d(a,"default",(function(){return m}));var t=n("wx14"),i=n("Ff2n"),l=n("q1tI"),c=n.n(l),b=n("7ljp"),r=n("j1un"),s=(c.a.createElement,{}),o=Object(r.a)({layout:"docs",page_title:"Commands: node drain",sidebar_title:"drain",description:"The node drain command is used to configure a node's drain strategy.\n",__resourcePath:"docs/commands/node/drain.mdx",__scans:{}});function m(e){var{components:a}=e,n=Object(i.a)(e,["components"]);return Object(b.b)(o,Object(t.a)({},s,n,{components:a,mdxType:"MDXLayout"}),Object(b.b)("h1",{className:"g-type-display-2"},Object(b.b)("a",Object(t.a)({parentName:"h1"},{className:"__permalink-h",href:"#command-node-drain","aria-label":"command node drain permalink"}),"\xbb"),Object(b.b)("a",Object(t.a)({parentName:"h1"},{className:"__target-h",id:"command-node-drain","aria-hidden":""})),"Command: node drain"),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"node drain")," command is used to toggle drain mode on a given node. Drain\nmode prevents any new tasks from being allocated to the node, and begins\nmigrating all existing allocations away. Allocations will be migrated according\nto their ",Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/job-specification/migrate"}),Object(b.b)("inlineCode",{parentName:"a"},"migrate"))," stanza until the drain's deadline is reached."),Object(b.b)("p",null,"By default the ",Object(b.b)("inlineCode",{parentName:"p"},"node drain")," command blocks until a node is done draining and\nall allocations have terminated. Canceling the ",Object(b.b)("inlineCode",{parentName:"p"},"node drain")," command ",Object(b.b)("em",{parentName:"p"},"will not"),"\ncancel the drain. Drains may be canceled by using the ",Object(b.b)("inlineCode",{parentName:"p"},"-disable")," parameter\nbelow."),Object(b.b)("p",null,"When draining more than one node at a time, it is recommended you first\ndisable ",Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/commands/node/eligibility"}),"scheduling eligibility")," on all nodes that will be\ndrained. For example if you are decommissioning an entire class of nodes,\nfirst run ",Object(b.b)("inlineCode",{parentName:"p"},"node eligibility -disable")," on all of their node IDs, and then run\n",Object(b.b)("inlineCode",{parentName:"p"},"node drain -enable"),". This will ensure allocations drained from the first node\nare not placed on another node about to be drained."),Object(b.b)("p",null,"The ",Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/commands/node/status"}),"node status")," command compliments this nicely by providing the current drain\nstatus of a given node."),Object(b.b)("p",null,"See the ",Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"https://learn.hashicorp.com/nomad/operating-nomad/node-draining"}),"Workload Migration guide")," for detailed examples of node draining."),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(t.a)({parentName:"h2"},{className:"__permalink-h",href:"#usage","aria-label":"usage permalink"}),"\xbb"),Object(b.b)("a",Object(t.a)({parentName:"h2"},{className:"__target-h",id:"usage","aria-hidden":""})),"Usage"),Object(b.b)("pre",{className:"language-plaintext"},Object(b.b)("code",Object(t.a)({parentName:"pre"},{className:"language-plaintext"}),"nomad node drain [options] <node>\n")),Object(b.b)("p",null,"A ",Object(b.b)("inlineCode",{parentName:"p"},"-self")," flag can be used to drain the local node. If this is not supplied, a\nnode ID or prefix must be provided. If there is an exact match, the drain mode\nwill be adjusted for that node. Otherwise, a list of matching nodes and\ninformation will be displayed."),Object(b.b)("p",null,"It is also required to pass one of ",Object(b.b)("inlineCode",{parentName:"p"},"-enable")," or ",Object(b.b)("inlineCode",{parentName:"p"},"-disable"),", depending on which\noperation is desired."),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(t.a)({parentName:"h2"},{className:"__permalink-h",href:"#general-options","aria-label":"general options permalink"}),"\xbb"),Object(b.b)("a",Object(t.a)({parentName:"h2"},{className:"__target-h",id:"general-options","aria-hidden":""})),"General Options"),Object(b.b)("ul",null,Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"address",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#address","aria-label":"address permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-address=<addr>")),": The address of the Nomad server. Overrides the ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_ADDR"),"\nenvironment variable if set. Defaults to ",Object(b.b)("inlineCode",{parentName:"p"},"http://127.0.0.1:4646"),".")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"region",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#region","aria-label":"region permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-region=<region>")),": The region of the Nomad server to forward commands to.\nOverrides the ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_REGION")," environment variable if set. Defaults to the\nAgent's local region.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"namespace",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#namespace","aria-label":"namespace permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-namespace=<namespace>")),": The target namespace for queries and actions bound\nto a namespace. Overrides the NOMAD_NAMESPACE environment variable if set.\nIf set to '*', job and alloc subcommands query all namespacecs authorized to\nuser. Defaults to the \"default\" namespace.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"no-color",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#no-color","aria-label":"no color permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-no-color")),": Disables colored command output. Alternatively,\n",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_CLI_NO_COLOR")," may be set.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"ca-cert",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#ca-cert","aria-label":"ca cert permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-ca-cert=<path>")),": Path to a PEM encoded CA cert file to use to verify the\nNomad server SSL certificate. Overrides the ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_CACERT")," environment\nvariable if set.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"ca-path",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#ca-path","aria-label":"ca path permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-ca-path=<path>")),": Path to a directory of PEM encoded CA cert files to verify\nthe Nomad server SSL certificate. If both ",Object(b.b)("inlineCode",{parentName:"p"},"-ca-cert")," and ",Object(b.b)("inlineCode",{parentName:"p"},"-ca-path")," are\nspecified, ",Object(b.b)("inlineCode",{parentName:"p"},"-ca-cert")," is used. Overrides the ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_CAPATH")," environment\nvariable if set.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"client-cert",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#client-cert","aria-label":"client cert permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-client-cert=<path>")),": Path to a PEM encoded client certificate for TLS\nauthentication to the Nomad server. Must also specify ",Object(b.b)("inlineCode",{parentName:"p"},"-client-key"),". Overrides\nthe ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_CERT")," environment variable if set.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"client-key",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#client-key","aria-label":"client key permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-client-key=<path>")),": Path to an unencrypted PEM encoded private key matching\nthe client certificate from ",Object(b.b)("inlineCode",{parentName:"p"},"-client-cert"),". Overrides the ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_KEY"),"\nenvironment variable if set.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"tls-server-name",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#tls-server-name","aria-label":"tls server name permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-tls-server-name=<value>")),": The server name to use as the SNI host when connecting\nvia TLS. Overrides the ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_TLS_SERVER_NAME")," environment variable if set.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"tls-skip-verify",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#tls-skip-verify","aria-label":"tls skip verify permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-tls-skip-verify")),": Do not verify TLS certificate. This is highly not\nrecommended. Verification will also be skipped if ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_SKIP_VERIFY")," is set.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"token",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#token","aria-label":"token permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-token")),": The SecretID of an ACL token to use to authenticate API requests with.\nOverrides the ",Object(b.b)("inlineCode",{parentName:"p"},"NOMAD_TOKEN")," environment variable if set."))),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(t.a)({parentName:"h2"},{className:"__permalink-h",href:"#drain-options","aria-label":"drain options permalink"}),"\xbb"),Object(b.b)("a",Object(t.a)({parentName:"h2"},{className:"__target-h",id:"drain-options","aria-hidden":""})),"Drain Options"),Object(b.b)("ul",null,Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"enable",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#enable","aria-label":"enable permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-enable")),": Enable node drain mode.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"disable",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#disable","aria-label":"disable permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-disable")),": Disable node drain mode.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"deadline",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#deadline","aria-label":"deadline permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-deadline")),": Set the deadline by which all allocations must be moved off the\nnode. Remaining allocations after the deadline are force removed from the\nnode. Defaults to 1 hour.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"detach",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#detach","aria-label":"detach permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-detach")),": Return immediately instead of entering monitor mode.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"monitor",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#monitor","aria-label":"monitor permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-monitor")),": Enter monitor mode directly without modifying the drain status.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"force",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#force","aria-label":"force permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-force")),": Force remove allocations off the node immediately.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"no-deadline",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#no-deadline","aria-label":"no deadline permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-no-deadline")),": No deadline allows the allocations to drain off the node\nwithout being force stopped after a certain deadline.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"ignore-system",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#ignore-system","aria-label":"ignore system permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-ignore-system")),": Ignore system allows the drain to complete without\nstopping system job allocations. By default system jobs are stopped\nlast. You should always use this flag when draining a node running\n",Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/internals/plugins/csi"}),"CSI node plugins"),".")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"keep-ineligible",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#keep-ineligible","aria-label":"keep ineligible permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-keep-ineligible")),": Keep ineligible will maintain the node's scheduling\nineligibility even if the drain is being disabled. This is useful when an\nexisting drain is being cancelled but additional scheduling on the node is not\ndesired.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"self",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#self","aria-label":"self permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-self")),": Drain the local node.")),Object(b.b)("li",Object(t.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(t.a)({parentName:"li"},{id:"yes",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(t.a)({parentName:"p"},{href:"#yes","aria-label":"yes permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"-yes")),": Automatic yes to prompts."))),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(t.a)({parentName:"h2"},{className:"__permalink-h",href:"#examples","aria-label":"examples permalink"}),"\xbb"),Object(b.b)("a",Object(t.a)({parentName:"h2"},{className:"__target-h",id:"examples","aria-hidden":""})),"Examples"),Object(b.b)("p",null,'Enable drain mode on node with ID prefix "4d2ba53b":'),Object(b.b)("pre",{className:"language-shell-session"},Object(b.b)("code",Object(t.a)({parentName:"pre"},{className:"language-shell-session"}),Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node drain -enable f4e8a9e5")),"\n",Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token output"}),'Are you sure you want to enable drain mode for node "f4e8a9e5-30d8-3536-1e6f-cda5c869c35e"? [y/N] y\n2018-03-30T23:13:16Z: Ctrl-C to stop monitoring: will not cancel the node drain\n2018-03-30T23:13:16Z: Node "f4e8a9e5-30d8-3536-1e6f-cda5c869c35e" drain strategy set\n2018-03-30T23:13:17Z: Alloc "1877230b-64d3-a7dd-9c31-dc5ad3c93e9a" marked for migration\n2018-03-30T23:13:17Z: Alloc "1877230b-64d3-a7dd-9c31-dc5ad3c93e9a" draining\n2018-03-30T23:13:17Z: Alloc "1877230b-64d3-a7dd-9c31-dc5ad3c93e9a" status running -> complete\n2018-03-30T23:13:29Z: Alloc "3fce5308-818c-369e-0bb7-f61f0a1be9ed" marked for migration\n2018-03-30T23:13:29Z: Alloc "3fce5308-818c-369e-0bb7-f61f0a1be9ed" draining\n2018-03-30T23:13:30Z: Alloc "3fce5308-818c-369e-0bb7-f61f0a1be9ed" status running -> complete\n2018-03-30T23:13:41Z: Alloc "9a98c5aa-a719-2f34-ecfc-0e6268b5d537" marked for migration\n2018-03-30T23:13:41Z: Alloc "9a98c5aa-a719-2f34-ecfc-0e6268b5d537" draining\n2018-03-30T23:13:41Z: Node "f4e8a9e5-30d8-3536-1e6f-cda5c869c35e" has marked all allocations for migration\n2018-03-30T23:13:42Z: Alloc "9a98c5aa-a719-2f34-ecfc-0e6268b5d537" status running -> complete\n2018-03-30T23:13:42Z: All allocations on node "f4e8a9e5-30d8-3536-1e6f-cda5c869c35e" have stopped.\n'))),Object(b.b)("p",null,"Enable drain mode on the local node:"),Object(b.b)("pre",{className:"language-shell-session"},Object(b.b)("code",Object(t.a)({parentName:"pre"},{className:"language-shell-session"}),Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node drain -enable -self")),"\n",Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token output"}),"...\n"))),Object(b.b)("p",null,"Enable drain mode but do not stop system jobs:"),Object(b.b)("pre",{className:"language-shell-session"},Object(b.b)("code",Object(t.a)({parentName:"pre"},{className:"language-shell-session"}),Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node drain -enable -ignore-system 4d2ba53b")),"\n",Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token output"}),"...\n"))),Object(b.b)("p",null,"Disable drain mode but keep the node ineligible for scheduling. Useful for\ninspecting the current state of a misbehaving node without Nomad trying to\nstart or migrate allocations:"),Object(b.b)("pre",{className:"language-shell-session"},Object(b.b)("code",Object(t.a)({parentName:"pre"},{className:"language-shell-session"}),Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node drain -disable -keep-ineligible 4d2ba53b")),"\n",Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token output"}),"...\n"))),Object(b.b)("p",null,"Enable drain mode and detach from monitoring, then reattach later:"),Object(b.b)("pre",{className:"language-shell-session"},Object(b.b)("code",Object(t.a)({parentName:"pre"},{className:"language-shell-session"}),Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node drain -enable -detach -self")),"\n",Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token output"}),"...\n"),Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(t.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node drain -self -monitor")),"\n",Object(b.b)("span",Object(t.a)({parentName:"code"},{className:"token output"}),"...\n"))))}m.isMDXComponent=!0}},[["AXmB",0,1,2,4,3,5,6]]]);