# This file was autogenerate by the BETA 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# All generated input variables will be of string type as this how Packer JSON
# views them; you can later on change their type. Read the variables type
# constraints documentation
# https://www.packer.io/docs/from-1.5/variables#type-constraints for more info.
# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors onto a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/from-1.5/blocks/source
source "amazon-ebs" "autogenerated_1" {
  ami_name      = "nomad-e2e-windows-2016-amd64-${local.timestamp}"
  communicator  = "winrm"
  instance_type = "t2.medium"
  region        = "us-east-1"
  source_ami_filter {
    filters = {
      name                = "Windows_Server-2016-English-Full-Base-*"
      root-device-type    = "ebs"
      virtualization-type = "hvm"
    }
    most_recent = true
    owners      = ["amazon"]
  }
  tags = {
    OS = "Windows2016"
  }
  user_data_file = "windows-2016-amd64/setupwinrm.ps1"
  winrm_insecure = true
  winrm_use_ssl  = true
  winrm_username = "Administrator"
}

# a build block invokes sources and runs provisionning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  sources = ["source.amazon-ebs.autogenerated_1"]


  #could not parse template for following block: "template: generated:2:25: executing \"generated\" at <.WinRMPassword>: can't evaluate field WinRMPassword in type struct { HTTPIP string; HTTPPort string }"
  provisioner "powershell" {
    elevated_password = "{{.WinRMPassword}}"
    elevated_user     = "Administrator"
    scripts           = ["windows-2016-amd64/disable-windows-updates.ps1", "windows-2016-amd64/fix-tls.ps1", "windows-2016-amd64/install-nuget.ps1", "windows-2016-amd64/install-tools.ps1", "windows-2016-amd64/install-docker.ps1", "windows-2016-amd64/setup-directories.ps1", "windows-2016-amd64/install-openssh.ps1", "windows-2016-amd64/install-consul.ps1"]
  }
  provisioner "windows-restart" {
  }
  provisioner "file" {
    destination = "/opt"
    source      = "../config"
  }
  provisioner "file" {
    destination = "/opt/provision.ps1"
    source      = "./windows-2016-amd64/provision.ps1"
  }

  #could not parse template for following block: "template: generated:2:25: executing \"generated\" at <.WinRMPassword>: can't evaluate field WinRMPassword in type struct { HTTPIP string; HTTPPort string }"
  provisioner "powershell" {
    elevated_password = "{{.WinRMPassword}}"
    elevated_user     = "Administrator"
    inline            = ["/opt/provision.ps1 -nomad_version 0.12.7 -nostart"]
  }
  provisioner "powershell" {
    inline = ["C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\SendWindowsIsReady.ps1 -Schedule", "C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeInstance.ps1 -Schedule", "C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\SysprepInstance.ps1 -NoShutdown"]
  }
}
