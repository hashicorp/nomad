/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// TaskHandle struct for TaskHandle
type TaskHandle struct {
	DriverState *string `json:"DriverState,omitempty"`
	Version *int32 `json:"Version,omitempty"`
}

// NewTaskHandle instantiates a new TaskHandle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskHandle() *TaskHandle {
	this := TaskHandle{}
	return &this
}

// NewTaskHandleWithDefaults instantiates a new TaskHandle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskHandleWithDefaults() *TaskHandle {
	this := TaskHandle{}
	return &this
}

// GetDriverState returns the DriverState field value if set, zero value otherwise.
func (o *TaskHandle) GetDriverState() string {
	if o == nil || o.DriverState == nil {
		var ret string
		return ret
	}
	return *o.DriverState
}

// GetDriverStateOk returns a tuple with the DriverState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskHandle) GetDriverStateOk() (*string, bool) {
	if o == nil || o.DriverState == nil {
		return nil, false
	}
	return o.DriverState, true
}

// HasDriverState returns a boolean if a field has been set.
func (o *TaskHandle) HasDriverState() bool {
	if o != nil && o.DriverState != nil {
		return true
	}

	return false
}

// SetDriverState gets a reference to the given string and assigns it to the DriverState field.
func (o *TaskHandle) SetDriverState(v string) {
	o.DriverState = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *TaskHandle) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskHandle) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *TaskHandle) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *TaskHandle) SetVersion(v int32) {
	o.Version = &v
}

func (o TaskHandle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DriverState != nil {
		toSerialize["DriverState"] = o.DriverState
	}
	if o.Version != nil {
		toSerialize["Version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableTaskHandle struct {
	value *TaskHandle
	isSet bool
}

func (v NullableTaskHandle) Get() *TaskHandle {
	return v.value
}

func (v *NullableTaskHandle) Set(val *TaskHandle) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskHandle) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskHandle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskHandle(val *TaskHandle) *NullableTaskHandle {
	return &NullableTaskHandle{value: val, isSet: true}
}

func (v NullableTaskHandle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskHandle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


