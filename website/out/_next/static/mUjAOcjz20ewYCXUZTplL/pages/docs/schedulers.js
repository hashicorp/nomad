(window.webpackJsonp=window.webpackJsonp||[]).push([[264],{"O/CG":function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return b}));var s=a("wx14"),n=a("Ff2n"),r=a("q1tI"),i=a.n(r),c=a("7ljp"),o=a("j1un"),l=(i.a.createElement,{}),h=Object(o.a)({layout:"docs",page_title:"Schedulers",sidebar_title:"Schedulers",description:"Learn about Nomad's various schedulers.",__resourcePath:"docs/schedulers.mdx",__scans:{}});function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)(h,Object(s.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{className:"g-type-display-2"},Object(c.b)("a",Object(s.a)({parentName:"h1"},{className:"__permalink-h",href:"#schedulers","aria-label":"schedulers permalink"}),"\xbb"),Object(c.b)("a",Object(s.a)({parentName:"h1"},{className:"__target-h",id:"schedulers","aria-hidden":""})),"Schedulers"),Object(c.b)("p",null,"Nomad has three scheduler types that can be used when creating your job:\n",Object(c.b)("inlineCode",{parentName:"p"},"service"),", ",Object(c.b)("inlineCode",{parentName:"p"},"batch")," and ",Object(c.b)("inlineCode",{parentName:"p"},"system"),". Here we will describe the differences between\neach of these schedulers."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(s.a)({parentName:"h2"},{className:"__permalink-h",href:"#service","aria-label":"service permalink"}),"\xbb"),Object(c.b)("a",Object(s.a)({parentName:"h2"},{className:"__target-h",id:"service","aria-hidden":""})),"Service"),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"service")," scheduler is designed for scheduling long lived services that\nshould never go down. As such, the ",Object(c.b)("inlineCode",{parentName:"p"},"service")," scheduler ranks a large portion\nof the nodes that meet the job's constraints and selects the optimal node to\nplace a task group on. The ",Object(c.b)("inlineCode",{parentName:"p"},"service")," scheduler uses a best fit scoring algorithm\ninfluenced by Google's work on ",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"https://research.google.com/pubs/pub43438.html"}),"Borg"),". Ranking this larger set of candidate\nnodes increases scheduling time but provides greater guarantees about the\noptimality of a job placement, which given the service workload is highly\ndesirable."),Object(c.b)("p",null,"Service jobs are intended to run until explicitly stopped by an operator. If a\nservice task exits it is considered a failure and handled according to the job's\n",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"/docs/job-specification/restart"}),"restart")," and ",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"/docs/job-specification/reschedule"}),"reschedule")," stanzas."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(s.a)({parentName:"h2"},{className:"__permalink-h",href:"#batch","aria-label":"batch permalink"}),"\xbb"),Object(c.b)("a",Object(s.a)({parentName:"h2"},{className:"__target-h",id:"batch","aria-hidden":""})),"Batch"),Object(c.b)("p",null,"Batch jobs are much less sensitive to short term performance fluctuations and\nare short lived, finishing in a few minutes to a few days. Although the ",Object(c.b)("inlineCode",{parentName:"p"},"batch"),"\nscheduler is very similar to the ",Object(c.b)("inlineCode",{parentName:"p"},"service")," scheduler, it makes certain\noptimizations for the batch workload. The main distinction is that after finding\nthe set of nodes that meet the job's constraints it uses the power of two\nchoices described in Berkeley's ",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"https://cs.stanford.edu/~matei/papers/2013/sosp_sparrow.pdf"}),"Sparrow")," scheduler to limit the number of nodes\nthat are ranked."),Object(c.b)("p",null,"Batch jobs are intended to run until they exit successfully. Batch tasks that\nexit with an error are handled according to the job's ",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"/docs/job-specification/restart"}),"restart")," and ",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"/docs/job-specification/reschedule"}),"reschedule"),"\nstanzas."),Object(c.b)("h2",{className:"g-type-display-3"},Object(c.b)("a",Object(s.a)({parentName:"h2"},{className:"__permalink-h",href:"#system","aria-label":"system permalink"}),"\xbb"),Object(c.b)("a",Object(s.a)({parentName:"h2"},{className:"__target-h",id:"system","aria-hidden":""})),"System"),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"system")," scheduler is used to register jobs that should be run on all\nclients that meet the job's constraints. The ",Object(c.b)("inlineCode",{parentName:"p"},"system")," scheduler is also invoked\nwhen clients join the cluster or transition into the ready state. This means\nthat all registered ",Object(c.b)("inlineCode",{parentName:"p"},"system")," jobs will be re-evaluated and their tasks will be\nplaced on the newly available nodes if the constraints are met."),Object(c.b)("p",null,"This scheduler type is extremely useful for deploying and managing tasks that\nshould be present on every node in the cluster. Since these tasks are\nmanaged by Nomad, they can take advantage of job updating,\nservice discovery, and more."),Object(c.b)("p",null,"Since Nomad 0.9, the system scheduler will preempt eligible lower priority\ntasks running on a node if there isn't enough capacity to place a system job.\nSee ",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"/docs/internals/scheduling/preemption"}),"preemption")," for details on how tasks that get preempted are chosen."),Object(c.b)("p",null,"Systems jobs are intended to run until explicitly stopped either by an operator\nor ",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"/docs/internals/scheduling/preemption"}),"preemption"),". If a system task exits it is considered a failure and handled\naccording to the job's ",Object(c.b)("a",Object(s.a)({parentName:"p"},{href:"/docs/job-specification/restart"}),"restart")," stanza; system jobs do not have rescheduling."))}b.isMDXComponent=!0},rXwm:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/schedulers",function(){return a("O/CG")}])}},[["rXwm",0,1,2,4,3,5,6]]]);