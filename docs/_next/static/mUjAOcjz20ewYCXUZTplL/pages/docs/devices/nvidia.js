(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{"/gd/":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/devices/nvidia",function(){return t("029A")}])},"029A":function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return p}));var n=t("wx14"),c=t("Ff2n"),s=t("q1tI"),i=t.n(s),b=t("7ljp"),r=t("j1un"),o=(i.a.createElement,{}),l=Object(r.a)({layout:"docs",page_title:"Device Plugins: Nvidia",sidebar_title:"Nvidia",description:"The Nvidia Device Plugin detects and makes Nvidia devices available to tasks.",__resourcePath:"docs/devices/nvidia.mdx",__scans:{}});function p(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(b.b)(l,Object(n.a)({},o,t,{components:a,mdxType:"MDXLayout"}),Object(b.b)("h1",{className:"g-type-display-2"},Object(b.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#nvidia-gpu-device-plugin","aria-label":"nvidia gpu device plugin permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"nvidia-gpu-device-plugin","aria-hidden":""})),"Nvidia GPU Device Plugin"),Object(b.b)("p",null,"Name: ",Object(b.b)("inlineCode",{parentName:"p"},"nvidia-gpu")),Object(b.b)("p",null,"The Nvidia device plugin is used to expose Nvidia GPUs to Nomad. The Nvidia\nplugin is built into Nomad and does not need to be downloaded separately."),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#fingerprinted-attributes","aria-label":"fingerprinted attributes permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"fingerprinted-attributes","aria-hidden":""})),"Fingerprinted Attributes"),Object(b.b)("table",null,Object(b.b)("thead",null,Object(b.b)("tr",null,Object(b.b)("th",null,"Attribute"),Object(b.b)("th",null,"Unit"))),Object(b.b)("tbody",null,Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"memory")),Object(b.b)("td",null,"MiB")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"power")),Object(b.b)("td",null,"W (Watt)")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"bar1")),Object(b.b)("td",null,"MiB")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"driver_version")),Object(b.b)("td",null,"string")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"cores_clock")),Object(b.b)("td",null,"MHz")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"memory_clock")),Object(b.b)("td",null,"MHz")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"pci_bandwidth")),Object(b.b)("td",null,"MB/s")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"display_state")),Object(b.b)("td",null,"string")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("tt",null,"persistence_mode")),Object(b.b)("td",null,"string")))),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#runtime-environment","aria-label":"runtime environment permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"runtime-environment","aria-hidden":""})),"Runtime Environment"),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"nvidia-gpu")," device plugin exposes the following environment variables:"),Object(b.b)("ul",null,Object(b.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(n.a)({parentName:"li"},{id:"nvidia_visible_devices",className:"__target-lic","aria-hidden":""})),Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#nvidia_visible_devices","aria-label":"nvidia_visible_devices permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"NVIDIA_VISIBLE_DEVICES"))," - List of Nvidia GPU IDs available to the task.")),Object(b.b)("h3",{className:"g-type-display-4"},Object(b.b)("a",Object(n.a)({parentName:"h3"},{className:"__permalink-h",href:"#additional-task-configurations","aria-label":"additional task configurations permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h3"},{className:"__target-h",id:"additional-task-configurations","aria-hidden":""})),"Additional Task Configurations"),Object(b.b)("p",null,"Additional environment variables can be set by the task to influence the runtime\nenvironment. See ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/NVIDIA/nvidia-container-runtime#environment-variables-oci-spec"}),"Nvidia's\ndocumentation"),"."),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#installation-requirements","aria-label":"installation requirements permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"installation-requirements","aria-hidden":""})),"Installation Requirements"),Object(b.b)("p",null,"In order to use the ",Object(b.b)("inlineCode",{parentName:"p"},"nvidia-gpu")," the following prerequisites must be met:"),Object(b.b)("ol",null,Object(b.b)("li",Object(n.a)({parentName:"ol"},{className:"g-type-long-body"}),"GNU/Linux x86_64 with kernel version > 3.10"),Object(b.b)("li",Object(n.a)({parentName:"ol"},{className:"g-type-long-body"}),"NVIDIA GPU with Architecture > Fermi (2.1)"),Object(b.b)("li",Object(n.a)({parentName:"ol"},{className:"g-type-long-body"}),"NVIDIA drivers >= 340.29 with binary ",Object(b.b)("inlineCode",{parentName:"li"},"nvidia-smi"))),Object(b.b)("h3",{className:"g-type-display-4"},Object(b.b)("a",Object(n.a)({parentName:"h3"},{className:"__permalink-h",href:"#docker-driver-requirements","aria-label":"docker driver requirements permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h3"},{className:"__target-h",id:"docker-driver-requirements","aria-hidden":""})),"Docker Driver Requirements"),Object(b.b)("p",null,"In order to use the Nvidia driver plugin with the Docker driver, please follow\nthe installation instructions for\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/NVIDIA/nvidia-docker/wiki/Installation-(version-1.0)"}),Object(b.b)("inlineCode",{parentName:"a"},"nvidia-docker")),"."),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#plugin-configuration","aria-label":"plugin configuration permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"plugin-configuration","aria-hidden":""})),"Plugin Configuration"),Object(b.b)("pre",{className:"language-hcl"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-hcl"}),"plugin ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"nvidia-gpu"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"config")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"enabled"),"            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"ignored_gpu_ids"),"    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"GPU-fef8089b"'),", ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"GPU-ac81e44d"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"fingerprint_period")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"1m"'),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"nvidia-gpu")," device plugin supports the following configuration in the agent\nconfig:"),Object(b.b)("ul",null,Object(b.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(n.a)({parentName:"li"},{id:"enabled",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#enabled","aria-label":"enabled permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"enabled"))," ",Object(b.b)("inlineCode",{parentName:"p"},"(bool: true)")," - Control whether the plugin should be enabled and running.")),Object(b.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(n.a)({parentName:"li"},{id:"ignored_gpu_ids",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#ignored_gpu_ids","aria-label":"ignored_gpu_ids permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"ignored_gpu_ids"))," ",Object(b.b)("inlineCode",{parentName:"p"},"(array<string>: [])")," - Specifies the set of GPU UUIDs that\nshould be ignored when fingerprinting.")),Object(b.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(b.b)("a",Object(n.a)({parentName:"li"},{id:"fingerprint_period",className:"__target-lic","aria-hidden":""})),Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#fingerprint_period","aria-label":"fingerprint_period permalink",className:"__permalink-lic"}),Object(b.b)("inlineCode",{parentName:"a"},"fingerprint_period"))," ",Object(b.b)("inlineCode",{parentName:"p"},'(string: "1m")')," - The period in which to fingerprint for\ndevice changes."))),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#restrictions","aria-label":"restrictions permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"restrictions","aria-hidden":""})),"Restrictions"),Object(b.b)("p",null,"The Nvidia integration only works with drivers who natively integrate with\nNvidia's ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/NVIDIA/libnvidia-container"}),"container runtime\nlibrary"),"."),Object(b.b)("p",null,"Nomad has tested support with the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/drivers/docker",title:"Nomad docker Driver"}),Object(b.b)("inlineCode",{parentName:"a"},"docker")," driver")," and plans to\nbring support to the built-in ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/drivers/exec",title:"Nomad exec Driver"}),Object(b.b)("inlineCode",{parentName:"a"},"exec"))," and ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/drivers/java",title:"Nomad java Driver"}),Object(b.b)("inlineCode",{parentName:"a"},"java")),"\ndrivers. Support for ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/drivers/external/lxc",title:"Nomad lxc Driver"}),Object(b.b)("inlineCode",{parentName:"a"},"lxc"))," should be possible by installing the\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/lxc/lxc/blob/master/hooks/nvidia"}),"Nvidia hook")," but is not\ntested or documented by Nomad."),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#examples","aria-label":"examples permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"examples","aria-hidden":""})),"Examples"),Object(b.b)("p",null,"Inspect a node with a GPU:"),Object(b.b)("pre",{className:"language-shell-session"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node status 4d46e59f")),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"ID            = 4d46e59f\nName          = nomad\nClass         = <none>\nDC            = dc1\nDrain         = false\nEligibility   = eligible\nStatus        = ready\nUptime        = 19m43s\nDriver Status = docker,mock_driver,raw_exec\n\nNode Events\nTime                  Subsystem  Message\n2019-01-23T18:25:18Z  Cluster    Node registered\n\nAllocated Resources\nCPU          Memory      Disk\n0/15576 MHz  0 B/55 GiB  0 B/28 GiB\n\nAllocation Resource Utilization\nCPU          Memory\n0/15576 MHz  0 B/55 GiB\n\nHost Resource Utilization\nCPU             Memory          Disk\n2674/15576 MHz  1.5 GiB/55 GiB  3.0 GiB/31 GiB\n\nDevice Resource Utilization\nnvidia/gpu/Tesla K80[GPU-e1f6f4f1-1ea5-7b9d-5f03-338a9dc32416]  0 / 11441 MiB\n\nAllocations\nNo allocations placed\n"))),Object(b.b)("p",null,"Display detailed statistics on a node with a GPU:"),Object(b.b)("pre",{className:"language-shell-session"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node status -stats 4d46e59f")),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"ID            = 4d46e59f\nName          = nomad\nClass         = <none>\nDC            = dc1\nDrain         = false\nEligibility   = eligible\nStatus        = ready\nUptime        = 19m59s\nDriver Status = docker,mock_driver,raw_exec\n\nNode Events\nTime                  Subsystem  Message\n2019-01-23T18:25:18Z  Cluster    Node registered\n\nAllocated Resources\nCPU          Memory      Disk\n0/15576 MHz  0 B/55 GiB  0 B/28 GiB\n\nAllocation Resource Utilization\nCPU          Memory\n0/15576 MHz  0 B/55 GiB\n\nHost Resource Utilization\nCPU             Memory          Disk\n2673/15576 MHz  1.5 GiB/55 GiB  3.0 GiB/31 GiB\n\nDevice Resource Utilization\nnvidia/gpu/Tesla K80[GPU-e1f6f4f1-1ea5-7b9d-5f03-338a9dc32416]  0 / 11441 MiB\n\n// ...TRUNCATED...\n\nDevice Stats\nDevice              = nvidia/gpu/Tesla K80[GPU-e1f6f4f1-1ea5-7b9d-5f03-338a9dc32416]\nBAR1 buffer state   = 2 / 16384 MiB\nDecoder utilization = 0 %\nECC L1 errors       = 0\nECC L2 errors       = 0\nECC memory errors   = 0\nEncoder utilization = 0 %\nGPU utilization     = 0 %\nMemory state        = 0 / 11441 MiB\nMemory utilization  = 0 %\nPower usage         = 37 / 149 W\nTemperature         = 34 C\n\nAllocations\nNo allocations placed\n"))),Object(b.b)("p",null,"Run the following example job to see that that the GPU was mounted in the\ncontainer:"),Object(b.b)("pre",{className:"language-hcl"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-hcl"}),"job ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"gpu-test"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"datacenters")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"dc1"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"type")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"batch"'),"\n\n  group ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"smi"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    task ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"smi"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"driver")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"docker"'),"\n\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"config")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"image")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"nvidia/cuda:9.0-base"'),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"command")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"nvidia-smi"'),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"resources")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        device ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"nvidia/gpu"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"count")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1"),"\n\n          ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# Add an affinity for a particular model"),"\n          ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"affinity")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"',Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token interpolation"}),Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"{"),"device",Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"."),"model",Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"value"),"     ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"Tesla K80"'),"\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"50"),"\n          ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("pre",{className:"language-shell-session"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad run example.nomad")),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),'==> Monitoring evaluation "21bd7584"\n    Evaluation triggered by job "gpu-test"\n    Allocation "d250baed" created: node "4d46e59f", group "smi"\n    Evaluation status changed: "pending" -> "complete"\n==> Evaluation "21bd7584" finished with status "complete"\n\n'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad alloc status d250baed")),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),'ID                  = d250baed\nEval ID             = 21bd7584\nName                = gpu-test.smi[0]\nNode ID             = 4d46e59f\nJob ID              = example\nJob Version         = 0\nClient Status       = complete\nClient Description  = All tasks have completed\nDesired Status      = run\nDesired Description = <none>\nCreated             = 7s ago\nModified            = 2s ago\n\nTask "smi" is "dead"\nTask Resources\nCPU        Memory       Disk     Addresses\n0/100 MHz  0 B/300 MiB  300 MiB\n\nDevice Stats\nnvidia/gpu/Tesla K80[GPU-e1f6f4f1-1ea5-7b9d-5f03-338a9dc32416]  0 / 11441 MiB\n\nTask Events:\nStarted At     = 2019-01-23T18:25:32Z\nFinished At    = 2019-01-23T18:25:34Z\nTotal Restarts = 0\nLast Restart   = N/A\n\nRecent Events:\nTime                  Type        Description\n2019-01-23T18:25:34Z  Terminated  Exit Code: 0\n2019-01-23T18:25:32Z  Started     Task started by client\n2019-01-23T18:25:29Z  Task Setup  Building Task Directory\n2019-01-23T18:25:29Z  Received    Task received by client\n\n'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(b.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad alloc logs d250baed")),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"Wed Jan 23 18:25:32 2019\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 410.48                 Driver Version: 410.48                    |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  Tesla K80           On   | 00004477:00:00.0 Off |                    0 |\n| N/A   33C    P8    37W / 149W |      0MiB / 11441MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID   Type   Process name                             Usage      |\n|=============================================================================|\n|  No running processes found                                                 |\n+-----------------------------------------------------------------------------+\n"))))}p.isMDXComponent=!0}},[["/gd/",0,1,2,4,3,5,6]]]);