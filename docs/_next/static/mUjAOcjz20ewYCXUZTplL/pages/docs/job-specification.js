(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{"4hii":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/job-specification",function(){return t("6GzQ")}])},"6GzQ":function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return j}));var n=t("wx14"),c=t("Ff2n"),s=t("q1tI"),o=t.n(s),b=t("7ljp"),p=t("j1un"),m=(o.a.createElement,{}),r=Object(p.a)({layout:"docs",page_title:"Job Specification",sidebar_title:"Job Specification",description:"Learn about the Job specification used to submit jobs to Nomad.",__resourcePath:"docs/job-specification/index.mdx",__scans:{}});function j(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(b.b)(r,Object(n.a)({},m,t,{components:a,mdxType:"MDXLayout"}),Object(b.b)("h1",{className:"g-type-display-2"},Object(b.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#job-specification","aria-label":"job specification permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"job-specification","aria-hidden":""})),"Job Specification"),Object(b.b)("p",null,'The Nomad job specification (or "jobspec" for short) defines the schema for\nNomad jobs. Nomad jobs are specified in ',Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/hashicorp/hcl",title:"HashiCorp Configuration Language"}),"HCL"),", which aims to strike a balance\nbetween human readable and editable, and machine-friendly."),Object(b.b)("p",null,"The job specification is broken down into smaller pieces, which you will find\nexpanded in the navigation menu. We recommend getting started at the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/job-specification/job",title:"Nomad job Job Specification"}),"job"),"\nstanza. Alternatively, you can keep reading to see a few examples."),Object(b.b)("p",null,"For machine-friendliness, Nomad can also read JSON-equivalent configurations. In\ngeneral, we recommend using the HCL syntax."),Object(b.b)("p",null,"The general hierarchy for a job is:"),Object(b.b)("pre",{className:"language-text"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"job\n  \\_ group\n        \\_ task\n")),Object(b.b)("p",null,"Each job file has only a single job, however a job may have multiple groups, and\neach group may have multiple tasks. Groups contain a set of tasks that are\nco-located on a machine."),Object(b.b)("h2",{className:"g-type-display-3"},Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#example","aria-label":"example permalink"}),"\xbb"),Object(b.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"example","aria-hidden":""})),"Example"),Object(b.b)("p",null,"This example shows a sample job file. We tried to keep it as simple as possible,\nwhile still showcasing the power of Nomad. For a more detailed explanation of\nany of these fields, please use the navigation to dive deeper."),Object(b.b)("pre",{className:"language-hcl"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-hcl"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),'# This declares a job named "docs". There can be exactly one'),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# job declaration per job file."),"\njob ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"docs"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),'# Specify this job should run in the region named "us". Regions'),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# are defined by the Nomad servers' configuration."),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"region")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"us"'),"\n\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# Spread the tasks in this job between us-west-1 and us-east-1."),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"datacenters")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"us-west-1"'),", ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"us-east-1"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),'# Run this job as a "service" type. Each job type has different'),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# properties. See the documentation below for more examples."),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"type")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"service"'),"\n\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# Specify this job to have rolling updates, two-at-a-time, with"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# 30 second intervals."),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"update")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"stagger"),"      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"30s"'),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"max_parallel")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"2"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# A group defines a series of tasks that should be co-located"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# on the same client (host). All tasks within a group will be"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# placed on the same host."),"\n  group ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"webs"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# Specify the number of these tasks we want."),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"count")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"5"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"network")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),'# This requests a dynamic port named "http". This will'),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),'# be something like "46283", but we refer to it via the'),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),'# label "http".'),"\n      port ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"http"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# This requests a static port on 443 on the host. This"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# will restrict this task to running once per host, since"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# there is only one port 443 on each host."),"\n      port ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"https"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"static")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"443"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# The service block tells Nomad how to register this service"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# with Consul for service discovery and monitoring."),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"service")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# This tells Consul to monitor the service on the port"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),'# labelled "http". Since Nomad allocates high dynamic port'),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# numbers, we use labels to refer to them."),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"port")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"http"'),"\n\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"check")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"type"),"     ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"http"'),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"path"),"     ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"/health"'),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"interval")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"10s"'),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"timeout"),"  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"2s"'),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# Create an individual task (unit of work). This particular"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# task utilizes a Docker container to front a web application."),"\n    task ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"frontend"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),'# Specify the driver to be "docker". Nomad supports'),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# multiple drivers."),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"driver")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"docker"'),"\n\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# Configuration is specific to each driver."),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"config")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"image")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"hashicorp/web-frontend"'),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# It is possible to set environment variables which will be"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# available to the task when it runs."),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"env")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),'"DB_HOST"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"db01.example.com"'),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),'"DB_USER"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"web"'),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),'"DB_PASS"')," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"loremipsum"'),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# Specify the maximum resources required to run the task,"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# include CPU and memory."),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"resources")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"cpu"),"    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"500")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# MHz"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"memory")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"128")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"# MB"),"\n      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("p",null,"Note that starting with Nomad 0.10, the ",Object(b.b)("inlineCode",{parentName:"p"},"service")," stanza can also be specified at the group level. This\nallows job specification authors to create and register services with Consul Connect support. A service\nstanza specified at the group level must include a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/job-specification/connect",title:"Connect Stanza Specification"}),"connect")," stanza, like the following snippet."),Object(b.b)("pre",{className:"language-hcl"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-hcl"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"service")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n       ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"name")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"count-api"'),"\n       ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"port")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"9001"'),"\n\n       ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"connect")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n         ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"sidecar_service")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n       ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n     ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")))}j.isMDXComponent=!0}},[["4hii",0,1,2,4,3,5,6]]]);