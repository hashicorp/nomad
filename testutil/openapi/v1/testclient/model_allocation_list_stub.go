/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// AllocationListStub struct for AllocationListStub
type AllocationListStub struct {
	AllocatedResources *AllocatedResources `json:"AllocatedResources,omitempty"`
	ClientDescription *string `json:"ClientDescription,omitempty"`
	ClientStatus *string `json:"ClientStatus,omitempty"`
	CreateIndex *int32 `json:"CreateIndex,omitempty"`
	CreateTime *int64 `json:"CreateTime,omitempty"`
	DeploymentStatus *AllocDeploymentStatus `json:"DeploymentStatus,omitempty"`
	DesiredDescription *string `json:"DesiredDescription,omitempty"`
	DesiredStatus *string `json:"DesiredStatus,omitempty"`
	EvalID *string `json:"EvalID,omitempty"`
	FollowupEvalID *string `json:"FollowupEvalID,omitempty"`
	ID *string `json:"ID,omitempty"`
	JobID *string `json:"JobID,omitempty"`
	JobType *string `json:"JobType,omitempty"`
	JobVersion *int32 `json:"JobVersion,omitempty"`
	ModifyIndex *int32 `json:"ModifyIndex,omitempty"`
	ModifyTime *int64 `json:"ModifyTime,omitempty"`
	Name *string `json:"Name,omitempty"`
	Namespace *string `json:"Namespace,omitempty"`
	NodeID *string `json:"NodeID,omitempty"`
	NodeName *string `json:"NodeName,omitempty"`
	PreemptedAllocations *[]string `json:"PreemptedAllocations,omitempty"`
	PreemptedByAllocation *string `json:"PreemptedByAllocation,omitempty"`
	RescheduleTracker *RescheduleTracker `json:"RescheduleTracker,omitempty"`
	TaskGroup *string `json:"TaskGroup,omitempty"`
	TaskStates *map[string]TaskState `json:"TaskStates,omitempty"`
}

// NewAllocationListStub instantiates a new AllocationListStub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationListStub() *AllocationListStub {
	this := AllocationListStub{}
	return &this
}

// NewAllocationListStubWithDefaults instantiates a new AllocationListStub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationListStubWithDefaults() *AllocationListStub {
	this := AllocationListStub{}
	return &this
}

// GetAllocatedResources returns the AllocatedResources field value if set, zero value otherwise.
func (o *AllocationListStub) GetAllocatedResources() AllocatedResources {
	if o == nil || o.AllocatedResources == nil {
		var ret AllocatedResources
		return ret
	}
	return *o.AllocatedResources
}

// GetAllocatedResourcesOk returns a tuple with the AllocatedResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetAllocatedResourcesOk() (*AllocatedResources, bool) {
	if o == nil || o.AllocatedResources == nil {
		return nil, false
	}
	return o.AllocatedResources, true
}

// HasAllocatedResources returns a boolean if a field has been set.
func (o *AllocationListStub) HasAllocatedResources() bool {
	if o != nil && o.AllocatedResources != nil {
		return true
	}

	return false
}

// SetAllocatedResources gets a reference to the given AllocatedResources and assigns it to the AllocatedResources field.
func (o *AllocationListStub) SetAllocatedResources(v AllocatedResources) {
	o.AllocatedResources = &v
}

// GetClientDescription returns the ClientDescription field value if set, zero value otherwise.
func (o *AllocationListStub) GetClientDescription() string {
	if o == nil || o.ClientDescription == nil {
		var ret string
		return ret
	}
	return *o.ClientDescription
}

// GetClientDescriptionOk returns a tuple with the ClientDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetClientDescriptionOk() (*string, bool) {
	if o == nil || o.ClientDescription == nil {
		return nil, false
	}
	return o.ClientDescription, true
}

// HasClientDescription returns a boolean if a field has been set.
func (o *AllocationListStub) HasClientDescription() bool {
	if o != nil && o.ClientDescription != nil {
		return true
	}

	return false
}

// SetClientDescription gets a reference to the given string and assigns it to the ClientDescription field.
func (o *AllocationListStub) SetClientDescription(v string) {
	o.ClientDescription = &v
}

// GetClientStatus returns the ClientStatus field value if set, zero value otherwise.
func (o *AllocationListStub) GetClientStatus() string {
	if o == nil || o.ClientStatus == nil {
		var ret string
		return ret
	}
	return *o.ClientStatus
}

// GetClientStatusOk returns a tuple with the ClientStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetClientStatusOk() (*string, bool) {
	if o == nil || o.ClientStatus == nil {
		return nil, false
	}
	return o.ClientStatus, true
}

// HasClientStatus returns a boolean if a field has been set.
func (o *AllocationListStub) HasClientStatus() bool {
	if o != nil && o.ClientStatus != nil {
		return true
	}

	return false
}

// SetClientStatus gets a reference to the given string and assigns it to the ClientStatus field.
func (o *AllocationListStub) SetClientStatus(v string) {
	o.ClientStatus = &v
}

// GetCreateIndex returns the CreateIndex field value if set, zero value otherwise.
func (o *AllocationListStub) GetCreateIndex() int32 {
	if o == nil || o.CreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.CreateIndex
}

// GetCreateIndexOk returns a tuple with the CreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetCreateIndexOk() (*int32, bool) {
	if o == nil || o.CreateIndex == nil {
		return nil, false
	}
	return o.CreateIndex, true
}

// HasCreateIndex returns a boolean if a field has been set.
func (o *AllocationListStub) HasCreateIndex() bool {
	if o != nil && o.CreateIndex != nil {
		return true
	}

	return false
}

// SetCreateIndex gets a reference to the given int32 and assigns it to the CreateIndex field.
func (o *AllocationListStub) SetCreateIndex(v int32) {
	o.CreateIndex = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *AllocationListStub) GetCreateTime() int64 {
	if o == nil || o.CreateTime == nil {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetCreateTimeOk() (*int64, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *AllocationListStub) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *AllocationListStub) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetDeploymentStatus returns the DeploymentStatus field value if set, zero value otherwise.
func (o *AllocationListStub) GetDeploymentStatus() AllocDeploymentStatus {
	if o == nil || o.DeploymentStatus == nil {
		var ret AllocDeploymentStatus
		return ret
	}
	return *o.DeploymentStatus
}

// GetDeploymentStatusOk returns a tuple with the DeploymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetDeploymentStatusOk() (*AllocDeploymentStatus, bool) {
	if o == nil || o.DeploymentStatus == nil {
		return nil, false
	}
	return o.DeploymentStatus, true
}

// HasDeploymentStatus returns a boolean if a field has been set.
func (o *AllocationListStub) HasDeploymentStatus() bool {
	if o != nil && o.DeploymentStatus != nil {
		return true
	}

	return false
}

// SetDeploymentStatus gets a reference to the given AllocDeploymentStatus and assigns it to the DeploymentStatus field.
func (o *AllocationListStub) SetDeploymentStatus(v AllocDeploymentStatus) {
	o.DeploymentStatus = &v
}

// GetDesiredDescription returns the DesiredDescription field value if set, zero value otherwise.
func (o *AllocationListStub) GetDesiredDescription() string {
	if o == nil || o.DesiredDescription == nil {
		var ret string
		return ret
	}
	return *o.DesiredDescription
}

// GetDesiredDescriptionOk returns a tuple with the DesiredDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetDesiredDescriptionOk() (*string, bool) {
	if o == nil || o.DesiredDescription == nil {
		return nil, false
	}
	return o.DesiredDescription, true
}

// HasDesiredDescription returns a boolean if a field has been set.
func (o *AllocationListStub) HasDesiredDescription() bool {
	if o != nil && o.DesiredDescription != nil {
		return true
	}

	return false
}

// SetDesiredDescription gets a reference to the given string and assigns it to the DesiredDescription field.
func (o *AllocationListStub) SetDesiredDescription(v string) {
	o.DesiredDescription = &v
}

// GetDesiredStatus returns the DesiredStatus field value if set, zero value otherwise.
func (o *AllocationListStub) GetDesiredStatus() string {
	if o == nil || o.DesiredStatus == nil {
		var ret string
		return ret
	}
	return *o.DesiredStatus
}

// GetDesiredStatusOk returns a tuple with the DesiredStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetDesiredStatusOk() (*string, bool) {
	if o == nil || o.DesiredStatus == nil {
		return nil, false
	}
	return o.DesiredStatus, true
}

// HasDesiredStatus returns a boolean if a field has been set.
func (o *AllocationListStub) HasDesiredStatus() bool {
	if o != nil && o.DesiredStatus != nil {
		return true
	}

	return false
}

// SetDesiredStatus gets a reference to the given string and assigns it to the DesiredStatus field.
func (o *AllocationListStub) SetDesiredStatus(v string) {
	o.DesiredStatus = &v
}

// GetEvalID returns the EvalID field value if set, zero value otherwise.
func (o *AllocationListStub) GetEvalID() string {
	if o == nil || o.EvalID == nil {
		var ret string
		return ret
	}
	return *o.EvalID
}

// GetEvalIDOk returns a tuple with the EvalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetEvalIDOk() (*string, bool) {
	if o == nil || o.EvalID == nil {
		return nil, false
	}
	return o.EvalID, true
}

// HasEvalID returns a boolean if a field has been set.
func (o *AllocationListStub) HasEvalID() bool {
	if o != nil && o.EvalID != nil {
		return true
	}

	return false
}

// SetEvalID gets a reference to the given string and assigns it to the EvalID field.
func (o *AllocationListStub) SetEvalID(v string) {
	o.EvalID = &v
}

// GetFollowupEvalID returns the FollowupEvalID field value if set, zero value otherwise.
func (o *AllocationListStub) GetFollowupEvalID() string {
	if o == nil || o.FollowupEvalID == nil {
		var ret string
		return ret
	}
	return *o.FollowupEvalID
}

// GetFollowupEvalIDOk returns a tuple with the FollowupEvalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetFollowupEvalIDOk() (*string, bool) {
	if o == nil || o.FollowupEvalID == nil {
		return nil, false
	}
	return o.FollowupEvalID, true
}

// HasFollowupEvalID returns a boolean if a field has been set.
func (o *AllocationListStub) HasFollowupEvalID() bool {
	if o != nil && o.FollowupEvalID != nil {
		return true
	}

	return false
}

// SetFollowupEvalID gets a reference to the given string and assigns it to the FollowupEvalID field.
func (o *AllocationListStub) SetFollowupEvalID(v string) {
	o.FollowupEvalID = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *AllocationListStub) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *AllocationListStub) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *AllocationListStub) SetID(v string) {
	o.ID = &v
}

// GetJobID returns the JobID field value if set, zero value otherwise.
func (o *AllocationListStub) GetJobID() string {
	if o == nil || o.JobID == nil {
		var ret string
		return ret
	}
	return *o.JobID
}

// GetJobIDOk returns a tuple with the JobID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetJobIDOk() (*string, bool) {
	if o == nil || o.JobID == nil {
		return nil, false
	}
	return o.JobID, true
}

// HasJobID returns a boolean if a field has been set.
func (o *AllocationListStub) HasJobID() bool {
	if o != nil && o.JobID != nil {
		return true
	}

	return false
}

// SetJobID gets a reference to the given string and assigns it to the JobID field.
func (o *AllocationListStub) SetJobID(v string) {
	o.JobID = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *AllocationListStub) GetJobType() string {
	if o == nil || o.JobType == nil {
		var ret string
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetJobTypeOk() (*string, bool) {
	if o == nil || o.JobType == nil {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *AllocationListStub) HasJobType() bool {
	if o != nil && o.JobType != nil {
		return true
	}

	return false
}

// SetJobType gets a reference to the given string and assigns it to the JobType field.
func (o *AllocationListStub) SetJobType(v string) {
	o.JobType = &v
}

// GetJobVersion returns the JobVersion field value if set, zero value otherwise.
func (o *AllocationListStub) GetJobVersion() int32 {
	if o == nil || o.JobVersion == nil {
		var ret int32
		return ret
	}
	return *o.JobVersion
}

// GetJobVersionOk returns a tuple with the JobVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetJobVersionOk() (*int32, bool) {
	if o == nil || o.JobVersion == nil {
		return nil, false
	}
	return o.JobVersion, true
}

// HasJobVersion returns a boolean if a field has been set.
func (o *AllocationListStub) HasJobVersion() bool {
	if o != nil && o.JobVersion != nil {
		return true
	}

	return false
}

// SetJobVersion gets a reference to the given int32 and assigns it to the JobVersion field.
func (o *AllocationListStub) SetJobVersion(v int32) {
	o.JobVersion = &v
}

// GetModifyIndex returns the ModifyIndex field value if set, zero value otherwise.
func (o *AllocationListStub) GetModifyIndex() int32 {
	if o == nil || o.ModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.ModifyIndex
}

// GetModifyIndexOk returns a tuple with the ModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetModifyIndexOk() (*int32, bool) {
	if o == nil || o.ModifyIndex == nil {
		return nil, false
	}
	return o.ModifyIndex, true
}

// HasModifyIndex returns a boolean if a field has been set.
func (o *AllocationListStub) HasModifyIndex() bool {
	if o != nil && o.ModifyIndex != nil {
		return true
	}

	return false
}

// SetModifyIndex gets a reference to the given int32 and assigns it to the ModifyIndex field.
func (o *AllocationListStub) SetModifyIndex(v int32) {
	o.ModifyIndex = &v
}

// GetModifyTime returns the ModifyTime field value if set, zero value otherwise.
func (o *AllocationListStub) GetModifyTime() int64 {
	if o == nil || o.ModifyTime == nil {
		var ret int64
		return ret
	}
	return *o.ModifyTime
}

// GetModifyTimeOk returns a tuple with the ModifyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetModifyTimeOk() (*int64, bool) {
	if o == nil || o.ModifyTime == nil {
		return nil, false
	}
	return o.ModifyTime, true
}

// HasModifyTime returns a boolean if a field has been set.
func (o *AllocationListStub) HasModifyTime() bool {
	if o != nil && o.ModifyTime != nil {
		return true
	}

	return false
}

// SetModifyTime gets a reference to the given int64 and assigns it to the ModifyTime field.
func (o *AllocationListStub) SetModifyTime(v int64) {
	o.ModifyTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AllocationListStub) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AllocationListStub) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AllocationListStub) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *AllocationListStub) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *AllocationListStub) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *AllocationListStub) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNodeID returns the NodeID field value if set, zero value otherwise.
func (o *AllocationListStub) GetNodeID() string {
	if o == nil || o.NodeID == nil {
		var ret string
		return ret
	}
	return *o.NodeID
}

// GetNodeIDOk returns a tuple with the NodeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetNodeIDOk() (*string, bool) {
	if o == nil || o.NodeID == nil {
		return nil, false
	}
	return o.NodeID, true
}

// HasNodeID returns a boolean if a field has been set.
func (o *AllocationListStub) HasNodeID() bool {
	if o != nil && o.NodeID != nil {
		return true
	}

	return false
}

// SetNodeID gets a reference to the given string and assigns it to the NodeID field.
func (o *AllocationListStub) SetNodeID(v string) {
	o.NodeID = &v
}

// GetNodeName returns the NodeName field value if set, zero value otherwise.
func (o *AllocationListStub) GetNodeName() string {
	if o == nil || o.NodeName == nil {
		var ret string
		return ret
	}
	return *o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetNodeNameOk() (*string, bool) {
	if o == nil || o.NodeName == nil {
		return nil, false
	}
	return o.NodeName, true
}

// HasNodeName returns a boolean if a field has been set.
func (o *AllocationListStub) HasNodeName() bool {
	if o != nil && o.NodeName != nil {
		return true
	}

	return false
}

// SetNodeName gets a reference to the given string and assigns it to the NodeName field.
func (o *AllocationListStub) SetNodeName(v string) {
	o.NodeName = &v
}

// GetPreemptedAllocations returns the PreemptedAllocations field value if set, zero value otherwise.
func (o *AllocationListStub) GetPreemptedAllocations() []string {
	if o == nil || o.PreemptedAllocations == nil {
		var ret []string
		return ret
	}
	return *o.PreemptedAllocations
}

// GetPreemptedAllocationsOk returns a tuple with the PreemptedAllocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetPreemptedAllocationsOk() (*[]string, bool) {
	if o == nil || o.PreemptedAllocations == nil {
		return nil, false
	}
	return o.PreemptedAllocations, true
}

// HasPreemptedAllocations returns a boolean if a field has been set.
func (o *AllocationListStub) HasPreemptedAllocations() bool {
	if o != nil && o.PreemptedAllocations != nil {
		return true
	}

	return false
}

// SetPreemptedAllocations gets a reference to the given []string and assigns it to the PreemptedAllocations field.
func (o *AllocationListStub) SetPreemptedAllocations(v []string) {
	o.PreemptedAllocations = &v
}

// GetPreemptedByAllocation returns the PreemptedByAllocation field value if set, zero value otherwise.
func (o *AllocationListStub) GetPreemptedByAllocation() string {
	if o == nil || o.PreemptedByAllocation == nil {
		var ret string
		return ret
	}
	return *o.PreemptedByAllocation
}

// GetPreemptedByAllocationOk returns a tuple with the PreemptedByAllocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetPreemptedByAllocationOk() (*string, bool) {
	if o == nil || o.PreemptedByAllocation == nil {
		return nil, false
	}
	return o.PreemptedByAllocation, true
}

// HasPreemptedByAllocation returns a boolean if a field has been set.
func (o *AllocationListStub) HasPreemptedByAllocation() bool {
	if o != nil && o.PreemptedByAllocation != nil {
		return true
	}

	return false
}

// SetPreemptedByAllocation gets a reference to the given string and assigns it to the PreemptedByAllocation field.
func (o *AllocationListStub) SetPreemptedByAllocation(v string) {
	o.PreemptedByAllocation = &v
}

// GetRescheduleTracker returns the RescheduleTracker field value if set, zero value otherwise.
func (o *AllocationListStub) GetRescheduleTracker() RescheduleTracker {
	if o == nil || o.RescheduleTracker == nil {
		var ret RescheduleTracker
		return ret
	}
	return *o.RescheduleTracker
}

// GetRescheduleTrackerOk returns a tuple with the RescheduleTracker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetRescheduleTrackerOk() (*RescheduleTracker, bool) {
	if o == nil || o.RescheduleTracker == nil {
		return nil, false
	}
	return o.RescheduleTracker, true
}

// HasRescheduleTracker returns a boolean if a field has been set.
func (o *AllocationListStub) HasRescheduleTracker() bool {
	if o != nil && o.RescheduleTracker != nil {
		return true
	}

	return false
}

// SetRescheduleTracker gets a reference to the given RescheduleTracker and assigns it to the RescheduleTracker field.
func (o *AllocationListStub) SetRescheduleTracker(v RescheduleTracker) {
	o.RescheduleTracker = &v
}

// GetTaskGroup returns the TaskGroup field value if set, zero value otherwise.
func (o *AllocationListStub) GetTaskGroup() string {
	if o == nil || o.TaskGroup == nil {
		var ret string
		return ret
	}
	return *o.TaskGroup
}

// GetTaskGroupOk returns a tuple with the TaskGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetTaskGroupOk() (*string, bool) {
	if o == nil || o.TaskGroup == nil {
		return nil, false
	}
	return o.TaskGroup, true
}

// HasTaskGroup returns a boolean if a field has been set.
func (o *AllocationListStub) HasTaskGroup() bool {
	if o != nil && o.TaskGroup != nil {
		return true
	}

	return false
}

// SetTaskGroup gets a reference to the given string and assigns it to the TaskGroup field.
func (o *AllocationListStub) SetTaskGroup(v string) {
	o.TaskGroup = &v
}

// GetTaskStates returns the TaskStates field value if set, zero value otherwise.
func (o *AllocationListStub) GetTaskStates() map[string]TaskState {
	if o == nil || o.TaskStates == nil {
		var ret map[string]TaskState
		return ret
	}
	return *o.TaskStates
}

// GetTaskStatesOk returns a tuple with the TaskStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationListStub) GetTaskStatesOk() (*map[string]TaskState, bool) {
	if o == nil || o.TaskStates == nil {
		return nil, false
	}
	return o.TaskStates, true
}

// HasTaskStates returns a boolean if a field has been set.
func (o *AllocationListStub) HasTaskStates() bool {
	if o != nil && o.TaskStates != nil {
		return true
	}

	return false
}

// SetTaskStates gets a reference to the given map[string]TaskState and assigns it to the TaskStates field.
func (o *AllocationListStub) SetTaskStates(v map[string]TaskState) {
	o.TaskStates = &v
}

func (o AllocationListStub) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllocatedResources != nil {
		toSerialize["AllocatedResources"] = o.AllocatedResources
	}
	if o.ClientDescription != nil {
		toSerialize["ClientDescription"] = o.ClientDescription
	}
	if o.ClientStatus != nil {
		toSerialize["ClientStatus"] = o.ClientStatus
	}
	if o.CreateIndex != nil {
		toSerialize["CreateIndex"] = o.CreateIndex
	}
	if o.CreateTime != nil {
		toSerialize["CreateTime"] = o.CreateTime
	}
	if o.DeploymentStatus != nil {
		toSerialize["DeploymentStatus"] = o.DeploymentStatus
	}
	if o.DesiredDescription != nil {
		toSerialize["DesiredDescription"] = o.DesiredDescription
	}
	if o.DesiredStatus != nil {
		toSerialize["DesiredStatus"] = o.DesiredStatus
	}
	if o.EvalID != nil {
		toSerialize["EvalID"] = o.EvalID
	}
	if o.FollowupEvalID != nil {
		toSerialize["FollowupEvalID"] = o.FollowupEvalID
	}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.JobID != nil {
		toSerialize["JobID"] = o.JobID
	}
	if o.JobType != nil {
		toSerialize["JobType"] = o.JobType
	}
	if o.JobVersion != nil {
		toSerialize["JobVersion"] = o.JobVersion
	}
	if o.ModifyIndex != nil {
		toSerialize["ModifyIndex"] = o.ModifyIndex
	}
	if o.ModifyTime != nil {
		toSerialize["ModifyTime"] = o.ModifyTime
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["Namespace"] = o.Namespace
	}
	if o.NodeID != nil {
		toSerialize["NodeID"] = o.NodeID
	}
	if o.NodeName != nil {
		toSerialize["NodeName"] = o.NodeName
	}
	if o.PreemptedAllocations != nil {
		toSerialize["PreemptedAllocations"] = o.PreemptedAllocations
	}
	if o.PreemptedByAllocation != nil {
		toSerialize["PreemptedByAllocation"] = o.PreemptedByAllocation
	}
	if o.RescheduleTracker != nil {
		toSerialize["RescheduleTracker"] = o.RescheduleTracker
	}
	if o.TaskGroup != nil {
		toSerialize["TaskGroup"] = o.TaskGroup
	}
	if o.TaskStates != nil {
		toSerialize["TaskStates"] = o.TaskStates
	}
	return json.Marshal(toSerialize)
}

type NullableAllocationListStub struct {
	value *AllocationListStub
	isSet bool
}

func (v NullableAllocationListStub) Get() *AllocationListStub {
	return v.value
}

func (v *NullableAllocationListStub) Set(val *AllocationListStub) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationListStub) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationListStub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationListStub(val *AllocationListStub) *NullableAllocationListStub {
	return &NullableAllocationListStub{value: val, isSet: true}
}

func (v NullableAllocationListStub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationListStub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


