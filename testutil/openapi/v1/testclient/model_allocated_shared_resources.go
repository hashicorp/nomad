/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// AllocatedSharedResources struct for AllocatedSharedResources
type AllocatedSharedResources struct {
	DiskMB *int64 `json:"DiskMB,omitempty"`
	Networks *[]NetworkResource `json:"Networks,omitempty"`
	Ports *[]PortMapping `json:"Ports,omitempty"`
}

// NewAllocatedSharedResources instantiates a new AllocatedSharedResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocatedSharedResources() *AllocatedSharedResources {
	this := AllocatedSharedResources{}
	return &this
}

// NewAllocatedSharedResourcesWithDefaults instantiates a new AllocatedSharedResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocatedSharedResourcesWithDefaults() *AllocatedSharedResources {
	this := AllocatedSharedResources{}
	return &this
}

// GetDiskMB returns the DiskMB field value if set, zero value otherwise.
func (o *AllocatedSharedResources) GetDiskMB() int64 {
	if o == nil || o.DiskMB == nil {
		var ret int64
		return ret
	}
	return *o.DiskMB
}

// GetDiskMBOk returns a tuple with the DiskMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedSharedResources) GetDiskMBOk() (*int64, bool) {
	if o == nil || o.DiskMB == nil {
		return nil, false
	}
	return o.DiskMB, true
}

// HasDiskMB returns a boolean if a field has been set.
func (o *AllocatedSharedResources) HasDiskMB() bool {
	if o != nil && o.DiskMB != nil {
		return true
	}

	return false
}

// SetDiskMB gets a reference to the given int64 and assigns it to the DiskMB field.
func (o *AllocatedSharedResources) SetDiskMB(v int64) {
	o.DiskMB = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *AllocatedSharedResources) GetNetworks() []NetworkResource {
	if o == nil || o.Networks == nil {
		var ret []NetworkResource
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedSharedResources) GetNetworksOk() (*[]NetworkResource, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *AllocatedSharedResources) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []NetworkResource and assigns it to the Networks field.
func (o *AllocatedSharedResources) SetNetworks(v []NetworkResource) {
	o.Networks = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *AllocatedSharedResources) GetPorts() []PortMapping {
	if o == nil || o.Ports == nil {
		var ret []PortMapping
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedSharedResources) GetPortsOk() (*[]PortMapping, bool) {
	if o == nil || o.Ports == nil {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *AllocatedSharedResources) HasPorts() bool {
	if o != nil && o.Ports != nil {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []PortMapping and assigns it to the Ports field.
func (o *AllocatedSharedResources) SetPorts(v []PortMapping) {
	o.Ports = &v
}

func (o AllocatedSharedResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DiskMB != nil {
		toSerialize["DiskMB"] = o.DiskMB
	}
	if o.Networks != nil {
		toSerialize["Networks"] = o.Networks
	}
	if o.Ports != nil {
		toSerialize["Ports"] = o.Ports
	}
	return json.Marshal(toSerialize)
}

type NullableAllocatedSharedResources struct {
	value *AllocatedSharedResources
	isSet bool
}

func (v NullableAllocatedSharedResources) Get() *AllocatedSharedResources {
	return v.value
}

func (v *NullableAllocatedSharedResources) Set(val *AllocatedSharedResources) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocatedSharedResources) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocatedSharedResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocatedSharedResources(val *AllocatedSharedResources) *NullableAllocatedSharedResources {
	return &NullableAllocatedSharedResources{value: val, isSet: true}
}

func (v NullableAllocatedSharedResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocatedSharedResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


