(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{"8RNa":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/configuration/tls",function(){return t("QhZk")}])},QhZk:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return d}));var n,c=t("wx14"),i=t("Ff2n"),s=t("q1tI"),r=t.n(s),l=t("7ljp"),b=t("j1un"),p=(r.a.createElement,n="Placement",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(l.b)("div",e)}),o={},m=Object(b.a)({layout:"docs",page_title:"tls Stanza - Agent Configuration",sidebar_title:"tls",description:'The "tls" stanza configures Nomad\'s TLS communication via HTTP and RPC to\nenforce secure cluster communication between servers, clients, and between.',__resourcePath:"docs/configuration/tls.mdx",__scans:{}});function d(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.b)(m,Object(c.a)({},o,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("h1",{className:"g-type-display-2"},Object(l.b)("a",Object(c.a)({parentName:"h1"},{className:"__permalink-h",href:"#tls-stanza","aria-label":"tls stanza permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h1"},{className:"__target-h",id:"tls-stanza","aria-hidden":""})),Object(l.b)("inlineCode",{parentName:"h1"},"tls")," Stanza"),Object(l.b)(p,{groups:["tls"],mdxType:"Placement"}),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"tls")," stanza configures Nomad's TLS communication via HTTP and RPC to\nenforce secure cluster communication between servers, clients, and between."),Object(l.b)("pre",{className:"language-hcl"},Object(l.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"tls")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"http")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"rpc"),"  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(l.b)("div",{className:"alert alert-warning g-type-body",role:"alert"},Object(l.b)("p",{parentName:"div"},"Incorrect configuration of the TLS configuration can result in failure to\nstart the Nomad agent.")),Object(l.b)("p",null,"This section of the documentation only covers the configuration options for\n",Object(l.b)("inlineCode",{parentName:"p"},"tls")," stanza. To understand how to setup the certificates themselves, please see\nthe ",Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"https://learn.hashicorp.com/nomad/transport-security/gossip-encryption"}),"Encryption Overview Guide"),"."),Object(l.b)("h2",{className:"g-type-display-3"},Object(l.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#tls-parameters","aria-label":"tls parameters permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"tls-parameters","aria-hidden":""})),Object(l.b)("inlineCode",{parentName:"h2"},"tls")," Parameters"),Object(l.b)("ul",null,Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"ca_file",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#ca_file","aria-label":"ca_file permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"ca_file"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the path to the CA certificate to use for\nNomad's TLS communication.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"cert_file",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#cert_file","aria-label":"cert_file permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"cert_file"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the path to the certificate file used\nfor Nomad's TLS communication.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"key_file",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#key_file","aria-label":"key_file permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"key_file"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the path to the key file to use for\nNomad's TLS communication.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"http",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#http","aria-label":"http permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"http"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: false)")," - Specifies if TLS should be enabled on the HTTP\nendpoints on the Nomad agent, including the API.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"rpc",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#rpc","aria-label":"rpc permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"rpc"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: false)")," - Specifies if TLS should be enabled on the RPC\nendpoints and ",Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"https://github.com/hashicorp/serf",title:"Serf by HashiCorp"}),"Raft")," traffic between the Nomad servers. Enabling this on\na Nomad client makes the client use TLS for making RPC requests to the Nomad\nservers.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"rpc_upgrade_mode",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#rpc_upgrade_mode","aria-label":"rpc_upgrade_mode permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"rpc_upgrade_mode"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: false)")," - This option should be used only when the\ncluster is being upgraded to TLS, and removed after the migration is\ncomplete. This allows the agent to accept both TLS and plaintext traffic.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"tls_cipher_suites",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#tls_cipher_suites","aria-label":"tls_cipher_suites permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"tls_cipher_suites"))," ",Object(l.b)("inlineCode",{parentName:"p"},'string: "")')," - Specifies the TLS cipher suites that will\nbe used by the agent as a comma-separated string. Known insecure ciphers are\ndisabled (3DES and RC4). By default, an agent is configured to use\nTLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,\nTLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,\nTLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,\nTLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 and\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"tls_min_version",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#tls_min_version","aria-label":"tls_min_version permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"tls_min_version"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "tls12")'),'- Specifies the minimum supported version\nof TLS. Accepted values are "tls10", "tls11", "tls12".')),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"tls_prefer_server_cipher_suites",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#tls_prefer_server_cipher_suites","aria-label":"tls_prefer_server_cipher_suites permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"tls_prefer_server_cipher_suites"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: false)")," - Specifies whether\nTLS connections should prefer the server's ciphersuites over the client's.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"verify_https_client",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#verify_https_client","aria-label":"verify_https_client permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"verify_https_client"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: false)")," - Specifies agents should require\nclient certificates for all incoming HTTPS requests. The client certificates\nmust be signed by the same CA as Nomad.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"verify_server_hostname",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#verify_server_hostname","aria-label":"verify_server_hostname permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"verify_server_hostname"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: false)")," - Specifies if outgoing TLS\nconnections should verify the server's hostname."))),Object(l.b)("h2",{className:"g-type-display-3"},Object(l.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#tls-examples","aria-label":"tls examples permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"tls-examples","aria-hidden":""})),Object(l.b)("inlineCode",{parentName:"h2"},"tls")," Examples"),Object(l.b)("p",null,"The following examples only show the ",Object(l.b)("inlineCode",{parentName:"p"},"tls")," stanzas. Remember that the\n",Object(l.b)("inlineCode",{parentName:"p"},"tls")," stanza is only valid in the placements listed above."),Object(l.b)("h3",{className:"g-type-display-4"},Object(l.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#enabling-tls","aria-label":"enabling tls permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"enabling-tls","aria-hidden":""})),"Enabling TLS"),Object(l.b)("p",null,"This example shows enabling TLS configuration. This enables TLS communication\nbetween all servers and clients using the default system CA bundle and\ncertificates."),Object(l.b)("pre",{className:"language-hcl"},Object(l.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"tls")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"http")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"rpc"),"  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"ca_file"),"   ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"/etc/certs/ca.crt"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"cert_file")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"/etc/certs/nomad.crt"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"key_file"),"  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"/etc/certs/nomad.key"'),"\n",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")))}d.isMDXComponent=!0}},[["8RNa",0,1,2,4,3,5,6]]]);