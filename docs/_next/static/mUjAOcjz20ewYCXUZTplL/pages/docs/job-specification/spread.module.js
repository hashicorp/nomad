(window.webpackJsonp=window.webpackJsonp||[]).push([[252],{"5bN2":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/job-specification/spread",function(){return t("f42M")}])},f42M:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return j}));var n,c=t("wx14"),s=t("Ff2n"),p=t("q1tI"),b=t.n(p),r=t("7ljp"),o=t("j1un"),i=(b.a.createElement,n="Placement",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",e)}),l={},m=Object(o.a)({layout:"docs",page_title:"spread Stanza - Job Specification",sidebar_title:"spread",description:'The "spread" stanza is used to spread placements across a certain node attributes such as datacenter.\nSpread may be specified at the job or group levels for ultimate flexibility.\nMore than one spread stanza may be specified with relative weights between each.',__resourcePath:"docs/job-specification/spread.mdx",__scans:{}});function j(e){var{components:a}=e,t=Object(s.a)(e,["components"]);return Object(r.b)(m,Object(c.a)({},l,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h1",{className:"g-type-display-2"},Object(r.b)("a",Object(c.a)({parentName:"h1"},{className:"__permalink-h",href:"#spread-stanza","aria-label":"spread stanza permalink"}),"\xbb"),Object(r.b)("a",Object(c.a)({parentName:"h1"},{className:"__target-h",id:"spread-stanza","aria-hidden":""})),Object(r.b)("inlineCode",{parentName:"h1"},"spread")," Stanza"),Object(r.b)(i,{groups:[["job","spread"],["job","group","spread"]],mdxType:"Placement"}),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"spread")," stanza allows operators to increase the failure tolerance of their\napplications by specifying a node attribute that allocations should be spread\nover. This allows operators to spread allocations over attributes such as\ndatacenter, availability zone, or even rack in a physical datacenter. By\ndefault, when using spread the scheduler will attempt to place allocations\nequally among the available values of the given target."),Object(r.b)("pre",{className:"language-hcl"},Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),"job ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"docs"')," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"# Spread allocations over all datacenter"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"spread")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"node",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"datacenter",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  group ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"example"')," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"# Spread allocations over each rack based on desired percentage"),"\n      ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"spread")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"meta",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"rack",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n        target ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"r1"')," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"percent")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"60"),"\n        ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n        target ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"r2"')," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"percent")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"40"),"\n        ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n      ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(r.b)("p",null,"Nodes are scored according to how closely they match the desired target percentage defined in the\nspread stanza. Spread scores are combined with other scoring factors such as bin packing."),Object(r.b)("p",null,"A job or task group can have more than one spread criteria, with weights to express relative preference."),Object(r.b)("p",null,"Spread criteria are treated as a soft preference by the Nomad scheduler.\nIf no nodes match a given spread criteria, placement is still successful."),Object(r.b)("p",null,"Spread may be expressed on ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/runtime/interpolation",title:"Nomad interpolation"}),"attributes")," or ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/configuration/client#meta",title:"Nomad meta Job Specification"}),"client metadata"),".\nAdditionally, spread may be specified at the ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/job",title:"Nomad job Job Specification"}),"job")," and ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/job-specification/group",title:"Nomad group Job Specification"}),"group")," levels for ultimate flexibility. Job level spread criteria are inherited by all task groups in the job."),Object(r.b)("h2",{className:"g-type-display-3"},Object(r.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#spread-parameters","aria-label":"spread parameters permalink"}),"\xbb"),Object(r.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"spread-parameters","aria-hidden":""})),Object(r.b)("inlineCode",{parentName:"h2"},"spread")," Parameters"),Object(r.b)("ul",null,Object(r.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(c.a)({parentName:"li"},{id:"attribute",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"#attribute","aria-label":"attribute permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"attribute"))," ",Object(r.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the name or reference of the attribute\nto use. This can be any of the ",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"/docs/runtime/interpolation#interpreted_node_vars"}),"Nomad interpolated\nvalues"),".")),Object(r.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(c.a)({parentName:"li"},{id:"target",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"#target","aria-label":"target permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"target"))," ",Object(r.b)("code",null,"(",Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"#target-parameters"}),"target"),": ","<","required",">",")")," - Specifies one or more target\npercentages for each value of the ",Object(r.b)("inlineCode",{parentName:"p"},"attribute")," in the spread stanza. If this is omitted,\nNomad will spread allocations evenly across all values of the attribute.")),Object(r.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(c.a)({parentName:"li"},{id:"weight",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"#weight","aria-label":"weight permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"weight"))," ",Object(r.b)("inlineCode",{parentName:"p"},"(integer:0)")," - Specifies a weight for the spread stanza. The weight is used\nduring scoring and must be an integer between 0 to 100. Weights can be used\nwhen there is more than one spread or affinity stanza to express relative preference across them."))),Object(r.b)("h2",{className:"g-type-display-3"},Object(r.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#target-parameters","aria-label":"target parameters permalink"}),"\xbb"),Object(r.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"target-parameters","aria-hidden":""})),Object(r.b)("inlineCode",{parentName:"h2"},"target")," Parameters"),Object(r.b)("ul",null,Object(r.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(c.a)({parentName:"li"},{id:"value",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"#value","aria-label":"value permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"value"))," ",Object(r.b)("inlineCode",{parentName:"p"},'(string:"")')," - Specifies a target value of the attribute from a ",Object(r.b)("inlineCode",{parentName:"p"},"spread")," stanza.")),Object(r.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(r.b)("a",Object(c.a)({parentName:"li"},{id:"percent",className:"__target-lic","aria-hidden":""})),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(c.a)({parentName:"p"},{href:"#percent","aria-label":"percent permalink",className:"__permalink-lic"}),Object(r.b)("inlineCode",{parentName:"a"},"percent"))," ",Object(r.b)("inlineCode",{parentName:"p"},"(integer:0)")," - Specifies the percentage associated with the target value."))),Object(r.b)("h2",{className:"g-type-display-3"},Object(r.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#spread-examples","aria-label":"spread examples permalink"}),"\xbb"),Object(r.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"spread-examples","aria-hidden":""})),Object(r.b)("inlineCode",{parentName:"h2"},"spread")," Examples"),Object(r.b)("p",null,"The following examples show different ways to use the ",Object(r.b)("inlineCode",{parentName:"p"},"spread")," stanza."),Object(r.b)("h3",{className:"g-type-display-4"},Object(r.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#even-spread-across-data-center","aria-label":"even spread across data center permalink"}),"\xbb"),Object(r.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"even-spread-across-data-center","aria-hidden":""})),"Even Spread Across Data Center"),Object(r.b)("p",null,"This example shows a spread stanza across the node's ",Object(r.b)("inlineCode",{parentName:"p"},"datacenter")," attribute. If we have\ntwo datacenters ",Object(r.b)("inlineCode",{parentName:"p"},"us-east1")," and ",Object(r.b)("inlineCode",{parentName:"p"},"us-west1"),", and a task group of ",Object(r.b)("inlineCode",{parentName:"p"},"count = 10"),",\nNomad will attempt to place 5 allocations in each datacenter."),Object(r.b)("pre",{className:"language-hcl"},Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"spread")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"node",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"datacenter",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"100"),"\n",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(r.b)("h3",{className:"g-type-display-4"},Object(r.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#spread-with-target-percentages","aria-label":"spread with target percentages permalink"}),"\xbb"),Object(r.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"spread-with-target-percentages","aria-hidden":""})),"Spread With Target Percentages"),Object(r.b)("p",null,"This example shows a spread stanza that specifies one target percentage. If we\nhave three datacenters ",Object(r.b)("inlineCode",{parentName:"p"},"us-east1"),", ",Object(r.b)("inlineCode",{parentName:"p"},"us-east2"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"us-west1"),", and a task group\nof ",Object(r.b)("inlineCode",{parentName:"p"},"count = 10"),', Nomad will attempt to place place 5 of the allocations in "us-east1",\nand will spread the remaining among the other two datacenters.'),Object(r.b)("pre",{className:"language-hcl"},Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"spread")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"node",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"datacenter",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"100"),"\n\n  target ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"us-east1"')," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"percent")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"50"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(r.b)("p",null,"This example shows a spread stanza that specifies target percentages for two\ndifferent datacenters. If we have two datacenters ",Object(r.b)("inlineCode",{parentName:"p"},"us-east1")," and ",Object(r.b)("inlineCode",{parentName:"p"},"us-west1"),",\nand a task group of ",Object(r.b)("inlineCode",{parentName:"p"},"count = 10"),", Nomad will attempt to place 6 allocations\nin ",Object(r.b)("inlineCode",{parentName:"p"},"us-east1")," and 4 in ",Object(r.b)("inlineCode",{parentName:"p"},"us-west1"),"."),Object(r.b)("pre",{className:"language-hcl"},Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"spread")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"node",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"datacenter",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"100"),"\n\n  target ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"us-east1"')," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"percent")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"60"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  target ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"us-west1"')," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"percent")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"40"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(r.b)("h3",{className:"g-type-display-4"},Object(r.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#spread-across-multiple-attributes","aria-label":"spread across multiple attributes permalink"}),"\xbb"),Object(r.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"spread-across-multiple-attributes","aria-hidden":""})),"Spread Across Multiple Attributes"),Object(r.b)("p",null,"This example shows spread stanzas with multiple attributes. Consider a Nomad cluster\nwhere there are two datacenters ",Object(r.b)("inlineCode",{parentName:"p"},"us-east1")," and ",Object(r.b)("inlineCode",{parentName:"p"},"us-west1"),", and each datacenter has nodes\nwith ",Object(r.b)("inlineCode",{parentName:"p"},"${meta.rack}")," being ",Object(r.b)("inlineCode",{parentName:"p"},"r1")," or ",Object(r.b)("inlineCode",{parentName:"p"},"r2"),". With the following spread stanza used on a job with ",Object(r.b)("inlineCode",{parentName:"p"},"count=12"),", Nomad\nwill attempt to place 6 allocations in each datacenter. Within a datacenter, Nomad will\nattempt to place 3 allocations in nodes on rack ",Object(r.b)("inlineCode",{parentName:"p"},"r1"),", and 3 allocations in nodes on rack ",Object(r.b)("inlineCode",{parentName:"p"},"r2"),"."),Object(r.b)("pre",{className:"language-hcl"},Object(r.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"spread")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"node",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"datacenter",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"50"),"\n",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"spread")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"attribute")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"',Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token interpolation"}),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"$"),Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"{"),"meta",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"rack",Object(r.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"}")),'"'),"\n  ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"weight"),"    ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"50"),"\n",Object(r.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")))}j.isMDXComponent=!0}},[["5bN2",0,1,2,4,3,5,6]]]);