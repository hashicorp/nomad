(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{"/7C9":function(e,t,o){"use strict";o.r(t),o.d(t,"default",(function(){return d}));var a=o("wx14"),s=o("Ff2n"),r=o("q1tI"),n=o.n(r),i=o("7ljp"),p=o("j1un"),c=(n.a.createElement,{}),l=Object(p.a)({layout:"docs",page_title:"Gossip Protocol",sidebar_title:"Gossip Protocol",description:"Nomad uses a gossip protocol to manage membership. All of this is provided\nthrough the use of the Serf library.",__resourcePath:"docs/internals/gossip.mdx",__scans:{}});function d(e){var t=e.components,o=Object(s.a)(e,["components"]);return Object(i.b)(l,Object(a.a)({},c,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{className:"g-type-display-2"},Object(i.b)("a",Object(a.a)({parentName:"h1"},{className:"__permalink-h",href:"#gossip-protocol","aria-label":"gossip protocol permalink"}),"\xbb"),Object(i.b)("a",Object(a.a)({parentName:"h1"},{className:"__target-h",id:"gossip-protocol","aria-hidden":""})),"Gossip Protocol"),Object(i.b)("p",null,"Nomad uses a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Gossip_protocol"}),"gossip protocol"),"\nto manage membership. This is provided through the use of the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.serf.io/"}),"Serf library"),".\nThe gossip protocol used by Serf is based on\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.cs.cornell.edu/projects/Quicksilver/public_pdfs/SWIM.pdf"}),'"SWIM: Scalable Weakly-consistent Infection-style Process Group Membership Protocol"'),",\nwith a few minor adaptations. There are more details about ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.serf.io/docs/internals/gossip.html"}),"Serf's protocol here"),"."),Object(i.b)("div",{className:"alert alert-warning g-type-body",role:"alert"},Object(i.b)("p",{parentName:"div"},"",Object(i.b)("strong",{parentName:"p"},"Advanced Topic!")," This page covers technical details of\nthe internals of Nomad. You do not need to know these details to effectively\noperate and use Nomad. These details are documented here for those who wish\nto learn about them without having to go spelunking through the source code.")),Object(i.b)("h2",{className:"g-type-display-3"},Object(i.b)("a",Object(a.a)({parentName:"h2"},{className:"__permalink-h",href:"#gossip-in-nomad","aria-label":"gossip in nomad permalink"}),"\xbb"),Object(i.b)("a",Object(a.a)({parentName:"h2"},{className:"__target-h",id:"gossip-in-nomad","aria-hidden":""})),"Gossip in Nomad"),Object(i.b)("p",null,"Nomad makes use of a single global WAN gossip pool that all servers participate in.\nMembership information provided by the gossip pool allows servers to perform cross region\nrequests. The integrated failure detection allows Nomad to gracefully handle an entire region\nlosing connectivity, or just a single server in a remote region. The gossip protocol\nis also used to detect servers in the same region to perform automatic clustering\nvia the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/internals/consensus"}),"consensus protocol"),"."),Object(i.b)("p",null,"All of these features are provided by leveraging ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.serf.io/"}),"Serf"),". It\nis used as an embedded library to provide these features. From a user perspective,\nthis is not important, since the abstraction should be masked by Nomad. It can be useful\nhowever as a developer to understand how this library is leveraged."))}d.isMDXComponent=!0},eGHK:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/internals/gossip",function(){return o("/7C9")}])}},[["eGHK",0,1,2,4,3,5,6]]]);