(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{"5O6e":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/commands/node/config",function(){return t("UaJk")}])},UaJk:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return p}));var n=t("wx14"),i=t("Ff2n"),r=t("q1tI"),c=t.n(r),s=t("7ljp"),l=t("j1un"),b=(c.a.createElement,{}),o=Object(l.a)({layout:"docs",page_title:"Commands: node config",sidebar_title:"config",description:"The node config command is used to view or modify client configuration.\n",__resourcePath:"docs/commands/node/config.mdx",__scans:{}});function p(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(s.b)(o,Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("h1",{className:"g-type-display-2"},Object(s.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#command-node-config","aria-label":"command node config permalink"}),"\xbb"),Object(s.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"command-node-config","aria-hidden":""})),"Command: node config"),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"node config")," command is used to view or modify client configuration\ndetails. This command only works on client nodes, and can be used to update\nthe running client configurations it supports."),Object(s.b)("h2",{className:"g-type-display-3"},Object(s.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#usage","aria-label":"usage permalink"}),"\xbb"),Object(s.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"usage","aria-hidden":""})),"Usage"),Object(s.b)("pre",{className:"language-plaintext"},Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-plaintext"}),"nomad node config [options]\n")),Object(s.b)("p",null,"The arguments behave differently depending on the flags given. See each flag's\ndescription below for specific usage information and requirements."),Object(s.b)("h2",{className:"g-type-display-3"},Object(s.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#general-options","aria-label":"general options permalink"}),"\xbb"),Object(s.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"general-options","aria-hidden":""})),"General Options"),Object(s.b)("ul",null,Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"address",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#address","aria-label":"address permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-address=<addr>")),": The address of the Nomad server. Overrides the ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_ADDR"),"\nenvironment variable if set. Defaults to ",Object(s.b)("inlineCode",{parentName:"p"},"http://127.0.0.1:4646"),".")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"region",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#region","aria-label":"region permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-region=<region>")),": The region of the Nomad server to forward commands to.\nOverrides the ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_REGION")," environment variable if set. Defaults to the\nAgent's local region.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"namespace",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#namespace","aria-label":"namespace permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-namespace=<namespace>")),": The target namespace for queries and actions bound\nto a namespace. Overrides the NOMAD_NAMESPACE environment variable if set.\nIf set to '*', job and alloc subcommands query all namespacecs authorized to\nuser. Defaults to the \"default\" namespace.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"no-color",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#no-color","aria-label":"no color permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-no-color")),": Disables colored command output. Alternatively,\n",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_CLI_NO_COLOR")," may be set.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"ca-cert",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-cert","aria-label":"ca cert permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-ca-cert=<path>")),": Path to a PEM encoded CA cert file to use to verify the\nNomad server SSL certificate. Overrides the ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_CACERT")," environment\nvariable if set.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"ca-path",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-path","aria-label":"ca path permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-ca-path=<path>")),": Path to a directory of PEM encoded CA cert files to verify\nthe Nomad server SSL certificate. If both ",Object(s.b)("inlineCode",{parentName:"p"},"-ca-cert")," and ",Object(s.b)("inlineCode",{parentName:"p"},"-ca-path")," are\nspecified, ",Object(s.b)("inlineCode",{parentName:"p"},"-ca-cert")," is used. Overrides the ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_CAPATH")," environment\nvariable if set.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"client-cert",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#client-cert","aria-label":"client cert permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-client-cert=<path>")),": Path to a PEM encoded client certificate for TLS\nauthentication to the Nomad server. Must also specify ",Object(s.b)("inlineCode",{parentName:"p"},"-client-key"),". Overrides\nthe ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_CERT")," environment variable if set.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"client-key",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#client-key","aria-label":"client key permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-client-key=<path>")),": Path to an unencrypted PEM encoded private key matching\nthe client certificate from ",Object(s.b)("inlineCode",{parentName:"p"},"-client-cert"),". Overrides the ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_KEY"),"\nenvironment variable if set.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"tls-server-name",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-server-name","aria-label":"tls server name permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-tls-server-name=<value>")),": The server name to use as the SNI host when connecting\nvia TLS. Overrides the ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_TLS_SERVER_NAME")," environment variable if set.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"tls-skip-verify",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-skip-verify","aria-label":"tls skip verify permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-tls-skip-verify")),": Do not verify TLS certificate. This is highly not\nrecommended. Verification will also be skipped if ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_SKIP_VERIFY")," is set.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"token",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#token","aria-label":"token permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-token")),": The SecretID of an ACL token to use to authenticate API requests with.\nOverrides the ",Object(s.b)("inlineCode",{parentName:"p"},"NOMAD_TOKEN")," environment variable if set."))),Object(s.b)("h2",{className:"g-type-display-3"},Object(s.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#node-config-options","aria-label":"node config options permalink"}),"\xbb"),Object(s.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"node-config-options","aria-hidden":""})),"Node Config Options"),Object(s.b)("ul",null,Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"servers",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#servers","aria-label":"servers permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-servers")),": List the client's known servers. Client nodes do not participate\nin the gossip pool, and instead register with these servers periodically over\nthe network. The initial value of this list may come from configuration files\nusing the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/configuration/client#servers"}),Object(s.b)("inlineCode",{parentName:"a"},"servers"))," configuration option in the client block.")),Object(s.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(s.b)("a",Object(n.a)({parentName:"li"},{id:"update-servers",className:"__target-lic","aria-hidden":""})),Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#update-servers","aria-label":"update servers permalink",className:"__permalink-lic"}),Object(s.b)("inlineCode",{parentName:"a"},"-update-servers")),": Updates the client's server list using the provided\narguments. Multiple server addresses may be passed using multiple arguments.\nWhen updating the servers list, you must specify ALL of the server nodes you\nwish to configure. The set is updated atomically. It is an error to specify\nthis flag without any server addresses. If you do ",Object(s.b)("em",{parentName:"p"},"not")," specify a port for each\nserver address, the default port ",Object(s.b)("inlineCode",{parentName:"p"},"4647")," will be used."))),Object(s.b)("h2",{className:"g-type-display-3"},Object(s.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#examples","aria-label":"examples permalink"}),"\xbb"),Object(s.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"examples","aria-hidden":""})),"Examples"),Object(s.b)("p",null,"Query the currently known servers:"),Object(s.b)("pre",{className:"language-shell-session"},Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(s.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(s.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(s.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node config -servers")),"\n",Object(s.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"server1:4647\nserver2:4647\n"))),Object(s.b)("p",null,"Update the list of servers:"),Object(s.b)("pre",{className:"language-shell-session"},Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(s.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(s.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(s.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad node config -update-servers server1:4647 server2:4647 server3:4647 server4")),"\n\n")))}p.isMDXComponent=!0}},[["5O6e",0,1,2,4,3,5,6]]]);