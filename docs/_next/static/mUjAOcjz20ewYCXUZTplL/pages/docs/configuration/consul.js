(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{Rd4R:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/configuration/consul",function(){return t("u1ib")}])},u1ib:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return d}));var n,c=t("wx14"),s=t("Ff2n"),i=t("q1tI"),r=t.n(i),l=t("7ljp"),o=t("j1un"),b=(r.a.createElement,n="Placement",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(l.b)("div",e)}),p={},m=Object(o.a)({layout:"docs",page_title:"consul Stanza - Agent Configuration",sidebar_title:"consul",description:'The "consul" stanza configures the Nomad agent\'s communication with\nConsul for service discovery and key-value integration. When\nconfigured, tasks can register themselves with Consul, and the Nomad cluster\ncan automatically bootstrap itself.',__resourcePath:"docs/configuration/consul.mdx",__scans:{}});function d(e){var a=e.components,t=Object(s.a)(e,["components"]);return Object(l.b)(m,Object(c.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("h1",{className:"g-type-display-2"},Object(l.b)("a",Object(c.a)({parentName:"h1"},{className:"__permalink-h",href:"#consul-stanza","aria-label":"consul stanza permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h1"},{className:"__target-h",id:"consul-stanza","aria-hidden":""})),Object(l.b)("inlineCode",{parentName:"h1"},"consul")," Stanza"),Object(l.b)(b,{groups:["consul"],mdxType:"Placement"}),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"consul")," stanza configures the Nomad agent's communication with\n",Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"https://www.consul.io/",title:"Consul by HashiCorp"}),"Consul")," for service discovery and key-value integration. When\nconfigured, tasks can register themselves with Consul, and the Nomad cluster can\n",Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"https://learn.hashicorp.com/nomad/operating-nomad/clustering",title:"Automatic Bootstrapping"}),"automatically bootstrap")," itself."),Object(l.b)("pre",{className:"language-hcl"},Object(l.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"consul")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"address")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"127.0.0.1:8500"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"auth"),"    ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"admin:password"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"token"),"   ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"abcd1234"'),"\n",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(l.b)("p",null,"A default ",Object(l.b)("inlineCode",{parentName:"p"},"consul")," stanza is automatically merged with all Nomad agent\nconfigurations. These sane defaults automatically enable Consul integration if\nConsul is detected on the system. This allows for seamless bootstrapping of the\ncluster with zero configuration. To put it another way: if you have a Consul\nagent running on the same host as the Nomad agent with the default\nconfiguration, Nomad will automatically connect and configure with Consul."),Object(l.b)("div",{className:"alert alert-warning g-type-body",role:"alert"},Object(l.b)("p",{parentName:"div"},"An important requirement is that each Nomad agent talks to a unique Consul\nagent. Nomad agents should be configured to talk to Consul agents and not\nConsul servers. If you are observing flapping services, you may have\nmultiple Nomad agents talking to the same Consul agent. As such avoid\nconfiguring Nomad to talk to Consul via DNS such as consul.service.consul")),Object(l.b)("h2",{className:"g-type-display-3"},Object(l.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#consul-parameters","aria-label":"consul parameters permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"consul-parameters","aria-hidden":""})),Object(l.b)("inlineCode",{parentName:"h2"},"consul")," Parameters"),Object(l.b)("ul",null,Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"address",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#address","aria-label":"address permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"address"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "127.0.0.1:8500")')," - Specifies the address to the local\nConsul agent, given in the format ",Object(l.b)("inlineCode",{parentName:"p"},"host:port"),". Supports Unix sockets with the\nformat: ",Object(l.b)("inlineCode",{parentName:"p"},"unix:///tmp/consul/consul.sock"),". Will default to the\n",Object(l.b)("inlineCode",{parentName:"p"},"CONSUL_HTTP_ADDR")," environment variable if set.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"allow_unauthenticated",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#allow_unauthenticated","aria-label":"allow_unauthenticated permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"allow_unauthenticated"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: true)")," - Specifies if users submitting jobs to\nthe Nomad server should be required to provide their own Consul token, proving\nthey have access to the service identity policies required by the Consul Connect\nenabled services listed in the job. This option should be\ndisabled in an untrusted environment.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"auth",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#auth","aria-label":"auth permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"auth"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the HTTP Basic Authentication information to\nuse for access to the Consul Agent, given in the format ",Object(l.b)("inlineCode",{parentName:"p"},"username:password"),".")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"auto_advertise",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#auto_advertise","aria-label":"auto_advertise permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"auto_advertise"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: true)")," - Specifies if Nomad should advertise its\nservices in Consul. The services are named according to ",Object(l.b)("inlineCode",{parentName:"p"},"server_service_name"),"\nand ",Object(l.b)("inlineCode",{parentName:"p"},"client_service_name"),". Nomad servers and clients advertise their\nrespective services, each tagged appropriately with either ",Object(l.b)("inlineCode",{parentName:"p"},"http")," or ",Object(l.b)("inlineCode",{parentName:"p"},"rpc"),"\ntag. Nomad servers also advertise a ",Object(l.b)("inlineCode",{parentName:"p"},"serf")," tagged service.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"ca_file",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#ca_file","aria-label":"ca_file permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"ca_file"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies an optional path to the CA certificate\nused for Consul communication. This defaults to the system bundle if\nunspecified. Will default to the ",Object(l.b)("inlineCode",{parentName:"p"},"CONSUL_CACERT")," environment variable if set.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"cert_file",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#cert_file","aria-label":"cert_file permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"cert_file"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the path to the certificate used for\nConsul communication. If this is set then you need to also set ",Object(l.b)("inlineCode",{parentName:"p"},"key_file"),".")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"checks_use_advertise",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#checks_use_advertise","aria-label":"checks_use_advertise permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"checks_use_advertise"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: false)")," - Specifies if Consul health checks\nshould bind to the advertise address. By default, this is the bind address.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"client_auto_join",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#client_auto_join","aria-label":"client_auto_join permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"client_auto_join"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: true)")," - Specifies if the Nomad clients should\nautomatically discover servers in the same region by searching for the Consul\nservice name defined in the ",Object(l.b)("inlineCode",{parentName:"p"},"server_service_name")," option. The search occurs if\nthe client is not registered with any servers or it is unable to heartbeat to\nthe leader of the region, in which case it may be partitioned and searches for\nother servers.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"client_service_name",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#client_service_name","aria-label":"client_service_name permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"client_service_name"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "nomad-client")')," - Specifies the name of the\nservice in Consul for the Nomad clients.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"client_http_check_name",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#client_http_check_name","aria-label":"client_http_check_name permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"client_http_check_name"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "Nomad Client HTTP Check")')," - Specifies the\nHTTP health check name in Consul for the Nomad clients.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"key_file",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#key_file","aria-label":"key_file permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"key_file"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the path to the private key used for\nConsul communication. If this is set then you need to also set ",Object(l.b)("inlineCode",{parentName:"p"},"cert_file"),".")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"server_service_name",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#server_service_name","aria-label":"server_service_name permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"server_service_name"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "nomad")')," - Specifies the name of the service\nin Consul for the Nomad servers.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"server_http_check_name",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#server_http_check_name","aria-label":"server_http_check_name permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"server_http_check_name"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "Nomad Server HTTP Check")')," - Specifies the\nHTTP health check name in Consul for the Nomad servers.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"server_serf_check_name",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#server_serf_check_name","aria-label":"server_serf_check_name permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"server_serf_check_name"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "Nomad Server Serf Check")')," - Specifies\nthe Serf health check name in Consul for the Nomad servers.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"server_rpc_check_name",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#server_rpc_check_name","aria-label":"server_rpc_check_name permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"server_rpc_check_name"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "Nomad Server RPC Check")')," - Specifies\nthe RPC health check name in Consul for the Nomad servers.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"server_auto_join",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#server_auto_join","aria-label":"server_auto_join permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"server_auto_join"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: true)")," - Specifies if the Nomad servers should\nautomatically discover and join other Nomad servers by searching for the\nConsul service name defined in the ",Object(l.b)("inlineCode",{parentName:"p"},"server_service_name")," option. This search\nonly happens if the server does not have a leader.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"share_ssl",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#share_ssl","aria-label":"share_ssl permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"share_ssl"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: true)")," - Specifies whether the Nomad client should share\nits Consul SSL configuration with Connect Native applications. Includes values\nof ",Object(l.b)("inlineCode",{parentName:"p"},"ca_file"),", ",Object(l.b)("inlineCode",{parentName:"p"},"cert_file"),", ",Object(l.b)("inlineCode",{parentName:"p"},"key_file"),", ",Object(l.b)("inlineCode",{parentName:"p"},"ssl"),", and ",Object(l.b)("inlineCode",{parentName:"p"},"verify_ssl"),". Does not include\nthe values for the ACL ",Object(l.b)("inlineCode",{parentName:"p"},"token")," or ",Object(l.b)("inlineCode",{parentName:"p"},"auth"),". This option should be disabled in\nenvironments where Consul ACLs are not enabled.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"ssl",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#ssl","aria-label":"ssl permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"ssl"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: false)")," - Specifies if the transport scheme should use HTTPS to\ncommunicate with the Consul agent. Will default to the ",Object(l.b)("inlineCode",{parentName:"p"},"CONSUL_HTTP_SSL"),"\nenvironment variable if set.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"tags",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#tags","aria-label":"tags permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"tags"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(array<string>: [])")," - Specifies optional Consul tags to be\nregistered with the Nomad server and agent services.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"token",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#token","aria-label":"token permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"token"))," ",Object(l.b)("inlineCode",{parentName:"p"},'(string: "")')," - Specifies the token used to provide a per-request ACL\ntoken. This option overrides the Consul Agent's default token. If the token is\nnot set here or on the Consul agent, it will default to Consul's anonymous policy,\nwhich may or may not allow writes.")),Object(l.b)("li",Object(c.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(c.a)({parentName:"li"},{id:"verify_ssl",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"#verify_ssl","aria-label":"verify_ssl permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"verify_ssl"))," ",Object(l.b)("inlineCode",{parentName:"p"},"(bool: true)"),"- Specifies if SSL peer verification should be used\nwhen communicating to the Consul API client over HTTPS. Will default to the\n",Object(l.b)("inlineCode",{parentName:"p"},"CONSUL_HTTP_SSL_VERIFY")," environment variable if set."))),Object(l.b)("p",null,"If the local Consul agent is configured and accessible by the Nomad agents, the\nNomad cluster will ",Object(l.b)("a",Object(c.a)({parentName:"p"},{href:"https://learn.hashicorp.com/nomad/operating-nomad/clustering",title:"Automatic Bootstrapping"}),"automatically bootstrap")," provided\n",Object(l.b)("inlineCode",{parentName:"p"},"server_auto_join"),", ",Object(l.b)("inlineCode",{parentName:"p"},"client_auto_join"),", and ",Object(l.b)("inlineCode",{parentName:"p"},"auto_advertise")," are all enabled\n(which is the default)."),Object(l.b)("h2",{className:"g-type-display-3"},Object(l.b)("a",Object(c.a)({parentName:"h2"},{className:"__permalink-h",href:"#consul-examples","aria-label":"consul examples permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h2"},{className:"__target-h",id:"consul-examples","aria-hidden":""})),Object(l.b)("inlineCode",{parentName:"h2"},"consul")," Examples"),Object(l.b)("h3",{className:"g-type-display-4"},Object(l.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#default","aria-label":"default permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"default","aria-hidden":""})),"Default"),Object(l.b)("p",null,"This example shows the default Consul integration:"),Object(l.b)("pre",{className:"language-hcl"},Object(l.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"consul")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"address"),"             ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"127.0.0.1:8500"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"server_service_name")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nomad"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"client_service_name")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"nomad-client"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"auto_advertise"),"      ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"server_auto_join"),"    ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"client_auto_join"),"    ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(l.b)("h3",{className:"g-type-display-4"},Object(l.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#custom-address-and-port","aria-label":"custom address and port permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"custom-address-and-port","aria-hidden":""})),"Custom Address and Port"),Object(l.b)("p",null,"This example shows pointing the Nomad agent at a different Consul address. Note\nthat you should ",Object(l.b)("strong",{parentName:"p"},"never")," point directly at a Consul server; always point to a\nlocal client. In this example, the Consul server is bound and listening on the\nnode's private IP address instead of localhost, so we use that:"),Object(l.b)("pre",{className:"language-hcl"},Object(l.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"consul")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"address")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"10.0.2.4:8500"'),"\n",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(l.b)("h3",{className:"g-type-display-4"},Object(l.b)("a",Object(c.a)({parentName:"h3"},{className:"__permalink-h",href:"#custom-ssl","aria-label":"custom ssl permalink"}),"\xbb"),Object(l.b)("a",Object(c.a)({parentName:"h3"},{className:"__target-h",id:"custom-ssl","aria-hidden":""})),"Custom SSL"),Object(l.b)("p",null,"This example shows configuring custom SSL certificates to communicate with\nthe Consul agent. The Consul agent should be configured to accept certificates\nsimilarly, but that is not discussed here:"),Object(l.b)("pre",{className:"language-hcl"},Object(l.b)("code",Object(c.a)({parentName:"pre"},{className:"language-hcl"}),Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"consul")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"ssl"),"       ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"ca_file"),"   ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"/var/ssl/bundle/ca.bundle"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"cert_file")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"/etc/ssl/consul.crt"'),"\n  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token property"}),"key_file"),"  ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"=")," ",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"/etc/ssl/consul.key"'),"\n",Object(l.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")))}d.isMDXComponent=!0}},[["Rd4R",0,1,2,4,3,5,6]]]);