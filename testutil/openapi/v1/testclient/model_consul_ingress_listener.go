/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// ConsulIngressListener struct for ConsulIngressListener
type ConsulIngressListener struct {
	Port *int32 `json:"Port,omitempty"`
	Protocol *string `json:"Protocol,omitempty"`
	Services *[]ConsulIngressService `json:"Services,omitempty"`
}

// NewConsulIngressListener instantiates a new ConsulIngressListener object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsulIngressListener() *ConsulIngressListener {
	this := ConsulIngressListener{}
	return &this
}

// NewConsulIngressListenerWithDefaults instantiates a new ConsulIngressListener object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsulIngressListenerWithDefaults() *ConsulIngressListener {
	this := ConsulIngressListener{}
	return &this
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ConsulIngressListener) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulIngressListener) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ConsulIngressListener) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ConsulIngressListener) SetPort(v int32) {
	o.Port = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *ConsulIngressListener) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulIngressListener) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *ConsulIngressListener) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *ConsulIngressListener) SetProtocol(v string) {
	o.Protocol = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ConsulIngressListener) GetServices() []ConsulIngressService {
	if o == nil || o.Services == nil {
		var ret []ConsulIngressService
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulIngressListener) GetServicesOk() (*[]ConsulIngressService, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *ConsulIngressListener) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []ConsulIngressService and assigns it to the Services field.
func (o *ConsulIngressListener) SetServices(v []ConsulIngressService) {
	o.Services = &v
}

func (o ConsulIngressListener) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Port != nil {
		toSerialize["Port"] = o.Port
	}
	if o.Protocol != nil {
		toSerialize["Protocol"] = o.Protocol
	}
	if o.Services != nil {
		toSerialize["Services"] = o.Services
	}
	return json.Marshal(toSerialize)
}

type NullableConsulIngressListener struct {
	value *ConsulIngressListener
	isSet bool
}

func (v NullableConsulIngressListener) Get() *ConsulIngressListener {
	return v.value
}

func (v *NullableConsulIngressListener) Set(val *ConsulIngressListener) {
	v.value = val
	v.isSet = true
}

func (v NullableConsulIngressListener) IsSet() bool {
	return v.isSet
}

func (v *NullableConsulIngressListener) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsulIngressListener(val *ConsulIngressListener) *NullableConsulIngressListener {
	return &NullableConsulIngressListener{value: val, isSet: true}
}

func (v NullableConsulIngressListener) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsulIngressListener) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


