(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{"1U6f":function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return p}));var n=t("wx14"),i=t("Ff2n"),r=t("q1tI"),c=t.n(r),l=t("7ljp"),s=t("j1un"),b=(c.a.createElement,{}),o=Object(s.a)({layout:"docs",page_title:"Commands: job history",sidebar_title:"history",description:"The history command is used to display all tracked versions of a job.\n",__resourcePath:"docs/commands/job/history.mdx",__scans:{}});function p(e){var{components:a}=e,t=Object(i.a)(e,["components"]);return Object(l.b)(o,Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("h1",{className:"g-type-display-2"},Object(l.b)("a",Object(n.a)({parentName:"h1"},{className:"__permalink-h",href:"#command-job-history","aria-label":"command job history permalink"}),"\xbb"),Object(l.b)("a",Object(n.a)({parentName:"h1"},{className:"__target-h",id:"command-job-history","aria-hidden":""})),"Command: job history"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"job history")," command is used to display the known versions of a particular\njob. The command can display the diff between job versions and can be useful for\nunderstanding the changes that occurred to the job as well as deciding job\nversions to revert to."),Object(l.b)("h2",{className:"g-type-display-3"},Object(l.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#usage","aria-label":"usage permalink"}),"\xbb"),Object(l.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"usage","aria-hidden":""})),"Usage"),Object(l.b)("pre",{className:"language-plaintext"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-plaintext"}),"nomad job history [options] <job>\n")),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"job history")," command requires a single argument, the job ID or an ID prefix\nof a job to display the history for."),Object(l.b)("h2",{className:"g-type-display-3"},Object(l.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#general-options","aria-label":"general options permalink"}),"\xbb"),Object(l.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"general-options","aria-hidden":""})),"General Options"),Object(l.b)("ul",null,Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"address",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#address","aria-label":"address permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-address=<addr>")),": The address of the Nomad server. Overrides the ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_ADDR"),"\nenvironment variable if set. Defaults to ",Object(l.b)("inlineCode",{parentName:"p"},"http://127.0.0.1:4646"),".")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"region",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#region","aria-label":"region permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-region=<region>")),": The region of the Nomad server to forward commands to.\nOverrides the ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_REGION")," environment variable if set. Defaults to the\nAgent's local region.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"namespace",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#namespace","aria-label":"namespace permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-namespace=<namespace>")),": The target namespace for queries and actions bound\nto a namespace. Overrides the NOMAD_NAMESPACE environment variable if set.\nIf set to '*', job and alloc subcommands query all namespacecs authorized to\nuser. Defaults to the \"default\" namespace.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"no-color",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#no-color","aria-label":"no color permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-no-color")),": Disables colored command output. Alternatively,\n",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_CLI_NO_COLOR")," may be set.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"ca-cert",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-cert","aria-label":"ca cert permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-ca-cert=<path>")),": Path to a PEM encoded CA cert file to use to verify the\nNomad server SSL certificate. Overrides the ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_CACERT")," environment\nvariable if set.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"ca-path",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#ca-path","aria-label":"ca path permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-ca-path=<path>")),": Path to a directory of PEM encoded CA cert files to verify\nthe Nomad server SSL certificate. If both ",Object(l.b)("inlineCode",{parentName:"p"},"-ca-cert")," and ",Object(l.b)("inlineCode",{parentName:"p"},"-ca-path")," are\nspecified, ",Object(l.b)("inlineCode",{parentName:"p"},"-ca-cert")," is used. Overrides the ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_CAPATH")," environment\nvariable if set.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"client-cert",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#client-cert","aria-label":"client cert permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-client-cert=<path>")),": Path to a PEM encoded client certificate for TLS\nauthentication to the Nomad server. Must also specify ",Object(l.b)("inlineCode",{parentName:"p"},"-client-key"),". Overrides\nthe ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_CERT")," environment variable if set.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"client-key",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#client-key","aria-label":"client key permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-client-key=<path>")),": Path to an unencrypted PEM encoded private key matching\nthe client certificate from ",Object(l.b)("inlineCode",{parentName:"p"},"-client-cert"),". Overrides the ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_CLIENT_KEY"),"\nenvironment variable if set.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"tls-server-name",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-server-name","aria-label":"tls server name permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-tls-server-name=<value>")),": The server name to use as the SNI host when connecting\nvia TLS. Overrides the ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_TLS_SERVER_NAME")," environment variable if set.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"tls-skip-verify",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#tls-skip-verify","aria-label":"tls skip verify permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-tls-skip-verify")),": Do not verify TLS certificate. This is highly not\nrecommended. Verification will also be skipped if ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_SKIP_VERIFY")," is set.")),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"token",className:"__target-lic","aria-hidden":""})),Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#token","aria-label":"token permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-token")),": The SecretID of an ACL token to use to authenticate API requests with.\nOverrides the ",Object(l.b)("inlineCode",{parentName:"p"},"NOMAD_TOKEN")," environment variable if set."))),Object(l.b)("h2",{className:"g-type-display-3"},Object(l.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#history-options","aria-label":"history options permalink"}),"\xbb"),Object(l.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"history-options","aria-hidden":""})),"History Options"),Object(l.b)("ul",null,Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"p",className:"__target-lic","aria-hidden":""})),Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#p","aria-label":"p permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-p")),": Display the differences between each job and its predecessor."),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"full",className:"__target-lic","aria-hidden":""})),Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#full","aria-label":"full permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-full")),": Display the full job definition for each version."),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"version",className:"__target-lic","aria-hidden":""})),Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#version","aria-label":"version permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-version")),": Display only the history for the given version."),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"json",className:"__target-lic","aria-hidden":""})),Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#json","aria-label":"json permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-json"))," : Output the job versions in its JSON format."),Object(l.b)("li",Object(n.a)({parentName:"ul"},{className:"g-type-long-body"}),Object(l.b)("a",Object(n.a)({parentName:"li"},{id:"t",className:"__target-lic","aria-hidden":""})),Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#t","aria-label":"t permalink",className:"__permalink-lic"}),Object(l.b)("inlineCode",{parentName:"a"},"-t"))," : Format and display the job versions using a Go template.")),Object(l.b)("h2",{className:"g-type-display-3"},Object(l.b)("a",Object(n.a)({parentName:"h2"},{className:"__permalink-h",href:"#examples","aria-label":"examples permalink"}),"\xbb"),Object(l.b)("a",Object(n.a)({parentName:"h2"},{className:"__target-h",id:"examples","aria-hidden":""})),"Examples"),Object(l.b)("p",null,"Display the history showing differences between versions:"),Object(l.b)("pre",{className:"language-shell-session"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(l.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(l.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad job ",Object(l.b)("span",Object(n.a)({parentName:"span"},{className:"token function"}),"history")," -p e")),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),'Version     = 2\nStable      = false\nSubmit Date = 07/25/17 20:35:43 UTC\nDiff        =\n+/- Job: "example"\n+/- Task Group: "cache"\n  +/- Task: "redis"\n    +/- Resources {\n          CPU:      "500"\n          DiskMB:   "0"\n      +/- MemoryMB: "256" => "512"\n        }\n\nVersion     = 1\nStable      = false\nSubmit Date = 07/25/17 20:35:31 UTC\nDiff        =\n+/- Job: "example"\n+/- Task Group: "cache"\n  +/- Count: "1" => "3"\n      Task: "redis"\n\nVersion     = 0\nStable      = false\nSubmit Date = 07/25/17 20:35:28 UTC\n'))),Object(l.b)("p",null,"Display the memory ask across submitted job versions:"),Object(l.b)("pre",{className:"language-shell-session"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell-session"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"token command"}),Object(l.b)("span",Object(n.a)({parentName:"span"},{className:"token sh important"}),"$")," ",Object(l.b)("span",Object(n.a)({parentName:"span"},{className:"token bash language-bash"}),"nomad job ",Object(l.b)("span",Object(n.a)({parentName:"span"},{className:"token function"}),"history")," -t ",Object(l.b)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"{{range .}}\\\nv{{.Version}}: {{with index .TaskGroups 0}}{{with index .Tasks 0}}{{.Resources.MemoryMB}}{{end}}{{end}}\\\n\n{{end}}"')," example")),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"token output"}),"v2: 512\nv1: 256\nv0: 256\n"))))}p.isMDXComponent=!0},DHKb:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/commands/job/history",function(){return t("1U6f")}])}},[["DHKb",0,1,2,4,3,5,6]]]);